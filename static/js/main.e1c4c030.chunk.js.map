{"version":3,"sources":["assets/background.png","theme.ts","providers/realmAppProvider.tsx","hooks/useRealmApp.ts","hooks/useLoginAnon.ts","components/navbar.tsx","routes/app.routes.tsx","providers/realmApolloProvider.tsx","app.tsx","reportWebVitals.ts","index.tsx","functions/sort.ts","hooks/useLinks.ts","data/links.ts","components/home.tsx","components/join.tsx","assets/404.jpg","components/notFound.tsx","data/information/allies.ts","data/information/docsList.ts","data/information/guidesList.ts","data/information/hc.ts","data/information/infographicList.ts","assets/information/Cave Johnson.png","assets/information/ED station landing pad map.png","assets/information/FSS-1.jpg","assets/information/KBGFoam.jpg","assets/information/Entrance_on_a_Coriolis_Dock.png","assets/information/ED error codes.png","assets/information/radar.png","data/information/rules.ts","data/information/toolsList.ts","data/information/uscLinksList.ts","components/information/aboutAllies.tsx","components/information/aboutHC.tsx","components/information/aboutRules.tsx","hooks/information/useFleetCarriers.ts","components/information/carriersPersonal.tsx","components/information/carriersUSC.tsx","components/information/carriers.tsx","components/information/infoSection.tsx","components/information/infographic.tsx","hooks/information/useInfographic.ts","components/information/information.tsx","hooks/information/useInfoButtons.ts","components/information/miningMap.tsx","hooks/information/useMiningMaps.ts","functions/copytoClipboard.ts","components/information/shipReviews.tsx","hooks/information/useShipReviews.ts","routes/information.routes.tsx"],"names":["darkTheme","createMuiTheme","palette","primary","main","secondary","type","overrides","MuiCssBaseline","body","height","backgroundImage","backgroundImg","backgroundRepeat","backgroundAttachment","backgroundSize","MuiLink","root","color","MuiButton","textTransform","RealmAppContext","createContext","RealmAppProvider","props","appId","children","undefined","Error","useState","Realm","app","setApp","useEffect","currentUser","setCurrentUser","a","logIn","anonymous","logOut","wrapped","logInAnon","Provider","value","useRealmApp","useContext","useLoginAnon","realm","console","log","useStyles","makeStyles","theme","width","display","padding","backgroundColor","minHeight","justifyContent","zIndex","img","float","marginRight","navLink","textAlign","textDecoration","marginTop","marginBottom","marginLeft","active","filler","flex","NavbarComponent","classes","enqueueSnackbar","useSnackbar","e","variant","className","Button","to","activeClassName","component","NavLink","exact","AppRoutes","from","path","createRealmApolloClient","link","HttpLink","uri","id","fetch","options","refreshCustomData","headers","Headers","Authorization","accessToken","cache","InMemoryCache","ApolloClient","RealmApolloProvider","client","setClient","App","history","createBrowserHistory","basename","process","maxSnack","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","sortItems","items","prop","sort","comparer","b","useLinks","links","getLinks","inaraSquadLink","discordLink","patreonLink","blueprints","inaraCommodity","header","paper","margin","paddingBottom","latin","flexDirection","border","borderRadius","cursive","fontFamily","subtitle","video","Home","Typography","Paper","controls","poster","src","iframe","step","gridTemplate","right","left","Join","useTheme","isMedium","useMediaQuery","breakpoints","up","Link","target","href","title","maxWidth","NotFound","alt","errorImg","allies","docsList","caption","local","beginner","guidesList","hc","infoGraphics","discordRules","memberRules","toolsList","uscLinksList","AboutAllies","List","map","rule","i","ListItem","ListItemText","rank","AboutHC","gridTemplateColumns","gridTemplateRows","down","rules","consequences","gridColumn","AboutRules","index","FleetCarriers","table","PersonalCarriers","carriers","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","carrier","name","owner","USCCarriers","purpose","Carriers","useQuery","data","loading","error","message","fleetCarriers","useFleetCarriers","personalCarriers","useMemo","filter","x","toLowerCase","includes","usePersonalCarriers","squadCarriers","useSquadCarriers","specialButton","grid","InfoSection","url","useRouteMatch","buttons","guide","Infographic","imgID","infographic","find","Information","MiningMap","maps","miningMaps","useMiningMaps","system","IconButton","size","onClick","text","tempInput","createElement","appendChild","select","execCommand","removeChild","copytoClipboard","materialInara","material","miningType","overlap","ShipReviews","shipReviews","reviewList","reviews","review","shipId","manufacturer","shipReview","useShipReviews","ShipBuilds","lazy","InformationRoutes","fallback","graphic"],"mappings":"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","file":"static/js/main.e1c4c030.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.59b3f384.png\";","import { createMuiTheme } from '@material-ui/core';\nimport backgroundImg from 'assets/background.png';\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f07b05',\n    },\n    secondary: {\n      main: '#00B3F7',\n    },\n    type: 'dark',\n  },\n});\n\ndarkTheme.overrides = {\n  MuiCssBaseline: {\n    '@global': {\n      body: {\n        height: '100%',\n        backgroundImage: `url(\"${backgroundImg}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n      },\n    },\n  },\n  MuiLink: {\n    root: {\n      color: darkTheme.palette.primary.main,\n    },\n  },\n  MuiButton: {\n    root: {\n      textTransform: 'initial',\n    },\n  },\n};\n","import { IRealmContext } from 'models/realmContext';\nimport { createContext, useEffect, useState } from 'react';\nimport * as Realm from 'realm-web';\n\nexport const RealmAppContext = createContext<IRealmContext | null>(null);\n\nexport const RealmAppProvider = (props: {\n  appId: string | undefined;\n  children: React.ReactNode;\n}) => {\n  const { appId, children } = props;\n  if (appId === undefined) {\n    throw new Error('appId is not defined');\n  }\n  const [app, setApp] = useState(new Realm.App(appId));\n  useEffect(() => {\n    setApp(new Realm.App(appId));\n  }, [appId]);\n\n  // Wrap the Realm.App object's user state with React state\n  const [currentUser, setCurrentUser] = useState(app.currentUser);\n  async function logInAnon() {\n    await app.logIn(Realm.Credentials.anonymous());\n    // If successful, app.currentUser is the user that just logged in\n    setCurrentUser(app.currentUser);\n  }\n  async function logOut() {\n    // Log out the currently active user\n    await app.currentUser?.logOut();\n    // If another user was logged in too, they're now the current user.\n    // Otherwise, app.currentUser is null.\n    setCurrentUser(app.currentUser);\n  }\n  const wrapped = { app, currentUser, logInAnon, logOut };\n  return (\n    <RealmAppContext.Provider value={wrapped}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { RealmAppContext } from 'providers/realmAppProvider';\n\nexport const useRealmApp = () => {\n  const app = useContext(RealmAppContext);\n  if (!app) {\n    throw new Error(\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\n    );\n  }\n  return app;\n};\n","import { useRealmApp } from './useRealmApp';\n\nexport const useLoginAnon = async () => {\n  const realm = useRealmApp();\n  if (realm.currentUser === null) {\n    try {\n      await realm.logInAnon();\n      console.log(realm.currentUser);\n    } catch (_) {\n      throw new Error('Unable to login anon');\n    }\n  }\n};\n","import { NavLink } from 'react-router-dom';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { useLoginAnon } from 'hooks/useLoginAnon';\nimport { useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    padding: '5px 10px',\n    backgroundColor: '#333',\n    height: 'auto',\n    minHeight: 'auto',\n    justifyContent: 'initial',\n    zIndex: 1500,\n  },\n  img: {\n    height: 'auto',\n    width: '55px',\n    float: 'left',\n    display: 'block',\n    marginRight: '1em',\n  },\n  navLink: {\n    backgroundColor: 'transparent',\n    color: '#f2f2f2',\n    textAlign: 'center',\n    textDecoration: 'none',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginLeft: '0.5em',\n    textTransform: 'initial',\n  },\n  active: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n  filler: {\n    flex: '1 0',\n  },\n}));\n\nexport const NavbarComponent = () => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  try {\n    useLoginAnon();\n  } catch (e) {\n    enqueueSnackbar('Unable to login for database', { variant: 'error' });\n  }\n\n  return (\n    <nav className={classes.root}>\n      <Button\n        to=\"/home\"\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        Home\n      </Button>\n      <Button\n        to=\"/information\"\n        exact\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        Information\n      </Button>\n      <Button\n        to=\"/information/builds\"\n        exact\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        USC Builds\n      </Button>\n      <div className={classes.filler} />\n      <Button\n        to=\"/join\"\n        color=\"secondary\"\n        variant=\"contained\"\n        component={NavLink}\n      >\n        Join\n      </Button>\n    </nav>\n  );\n};\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Home, Join, NotFound } from 'components';\nimport { InformationRoutes } from './information.routes';\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Redirect from=\"/\" to=\"/home\" exact />\n      <Route path=\"/home\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/join\">\n        <Join />\n      </Route>\n      <Route path=\"/information\">\n        <InformationRoutes />\n      </Route>\n      <Route path=\"*\">\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useRealmApp } from 'hooks/useRealmApp';\nimport { IRealmContext } from 'models/realmContext';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\n\nconst createRealmApolloClient = (app: IRealmContext) => {\n  if (app.app === undefined) {\n    throw new Error('app is not defined');\n  }\n  const link = new HttpLink({\n    uri: `https://realm.mongodb.com/api/client/v2.0/app/${app.app.id}/graphql`,\n    // A custom fetch handler adds the logged in user's access token to GraphQL requests\n    fetch: async (uri, options) => {\n      if (!app.currentUser) {\n        throw new Error(`Must be logged in to use the GraphQL API`);\n      }\n      // Refreshing a user's custom data also refreshes their access token\n      await app.currentUser.refreshCustomData();\n      options!.headers = new Headers({\n        Authorization: `Bearer ${app.currentUser.accessToken}`,\n      });\n      return fetch(uri, options);\n    },\n  });\n\n  const cache = new InMemoryCache();\n\n  return new ApolloClient({ link, cache });\n};\n\nexport const RealmApolloProvider = (props: { children: React.ReactNode }) => {\n  const app = useRealmApp();\n  const [client, setClient] = useState(createRealmApolloClient(app));\n  useEffect(() => {\n    setClient(createRealmApolloClient(app));\n  }, [app]);\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n};\n","import { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { darkTheme } from './theme';\nimport { createBrowserHistory } from 'history';\n\nimport { Router } from 'react-router-dom';\nimport { NavbarComponent } from 'components/navbar';\nimport { AppRoutes } from 'routes/app.routes';\nimport { RealmAppProvider, RealmApolloProvider } from 'providers';\nimport { SnackbarProvider } from 'notistack';\n\nconst realmID: string | undefined = process.env.REACT_APP_REALM_ID;\n\nexport const App = () => {\n  const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\n  return (\n    <RealmAppProvider appId={realmID}>\n      <RealmApolloProvider>\n        <SnackbarProvider maxSnack={3}>\n          <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n            <div>\n              <Router history={history}>\n                <NavbarComponent />\n                <AppRoutes />\n              </Router>\n            </div>\n          </ThemeProvider>\n        </SnackbarProvider>\n      </RealmApolloProvider>\n    </RealmAppProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport { App } from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItems = <T, P extends keyof T>(items: T[], prop: P): T[] => {\n  try {\n    return items.sort(comparer(prop));\n  } catch {\n    return items;\n  }\n};\n\n/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItemsReverse = <T, P extends keyof T>(\n  items: T[],\n  prop: P\n): T[] => {\n  try {\n    return items.sort(comparerReverse(prop));\n  } catch {\n    return items;\n  }\n};\n\nconst comparer = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] > b[prop]) {\n      return 1;\n    } else if (a[prop] < b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\nconst comparerReverse = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] < b[prop]) {\n      return 1;\n    } else if (a[prop] > b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n","import {\n  BlueprintLink,\n  DiscordLink,\n  PatreonLink,\n  InaraCommodityLink,\n  InaraSquadLink,\n} from 'data/links';\n\nexport const useLinks = () => {\n  return { ...links };\n};\n\nexport const getLinks = () => {\n  return { ...links };\n};\n\nconst links = {\n  inaraSquadLink: InaraSquadLink,\n  discordLink: DiscordLink,\n  patreonLink: PatreonLink,\n  blueprints: BlueprintLink,\n  inaraCommodity: InaraCommodityLink,\n};\n","export const InaraSquadLink = 'https://inara.cz/squadron/7028/';\nexport const DiscordLink = 'https://discord.gg/br8Fy2M6cv';\nexport const PatreonLink = 'https://www.patreon.com/usc';\nexport const BlueprintLink = 'http://a.teall.info/edsa/';\nexport const InaraCommodityLink = 'https://inara.cz/galaxy-commodity/';\n","import { makeStyles, Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  latin: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    border: '1px solid white',\n    borderRadius: 10,\n    width: 300,\n    margin: 'auto',\n    marginBottom: 10,\n  },\n  cursive: {\n    fontFamily: 'Brush Script MT, Brush Script Std, cursive',\n  },\n  subtitle: {\n    flex: '0 0',\n  },\n  video: {\n    width: '100%',\n    padding: 0,\n  },\n});\n\nexport const Home = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        United Systems Cooperative\n      </Typography>\n      <Paper className={classes.paper}>\n        <div className={classes.latin}>\n          <Typography className={classes.cursive} variant=\"h4\">\n            Ad Astra Per Aspera\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.subtitle}>\n            Through Hardships to the Stars\n          </Typography>\n        </div>\n        <Typography>\n          Established in 3306, the United Systems Cooperative is a tight-knit\n          organization of independent pilots operating across the galaxy, both\n          in human space, and the uncharted sectors beyond. Little is known\n          about this groups motives and plans, though many conflicting reports\n          are offered by systems across inhabited space. The one thing the\n          reports agree on is that members of this group are fiercely loyal to\n          one another, and to the organization as a whole. The United Systems\n          Cooperative seeks to create a family where everyone is welcome, no\n          matter their background, their allegiances, etc. To create a family\n          where everyone can get the help they need, make lasting friendships,\n          and have new brothers and sisters to fly with them through the black!\n        </Typography>\n        <video\n          controls\n          className={classes.video}\n          poster=\"https://dl.dropbox.com/s/nws07775923ta6z/vidImg.png?dl=0\"\n        >\n          <source\n            src=\"https://dl.dropbox.com/s/h0n88hy5pgtf06n/about_us.mp4?dl=0\"\n            type=\"video/mp4\"\n          />\n          \"Your browser does not support this video\"\n        </video>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Link,\n  makeStyles,\n  Paper,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { useLinks } from 'hooks/useLinks';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  iframe: {\n    width: '100%',\n    height: '59vw',\n  },\n  step: {\n    display: 'grid',\n    gridTemplate: '1fr / 1fr 1fr',\n  },\n  right: {\n    textAlign: 'right',\n  },\n  left: {\n    textAlign: 'left',\n  },\n});\n\nexport const Join = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMedium = useMediaQuery(theme.breakpoints.up('md'));\n  const { inaraSquadLink, discordLink } = useLinks();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" className={classes.header}>\n        Join Us!\n      </Typography>\n      <Paper className={classes.paper}>\n        <Typography>\n          Step 1: Read the rules on the{' '}\n          <Link\n            to=\"/information/about/rules\"\n            target=\"_blank\"\n            component={NavLink}\n          >\n            About Page\n          </Link>\n          .\n        </Typography>\n        {isMedium ? (\n          <Typography>Step 2: Fill out the form below</Typography>\n        ) : (\n          <Typography>\n            Step 2: Fill out the{' '}\n            <Link\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?usp=sf_link\"\n              target=\"_blank\"\n            >\n              USC Join Form\n            </Link>\n          </Typography>\n        )}\n\n        <Typography>\n          Step 3: Join our{' '}\n          <Link href={discordLink} target=\"_blank\">\n            Discord\n          </Link>\n        </Typography>\n\n        <Typography>\n          Recommended: Find us in-game! (UCPC for PC | UCXB for Xbox | UCPS for\n          PlayStation)\n        </Typography>\n        <Typography>\n          Recommended: Join our{' '}\n          <Link href={inaraSquadLink} target=\"_blank\">\n            Inara Squadron\n          </Link>\n        </Typography>\n        {isMedium && (\n          <iframe\n            className={classes.iframe}\n            title=\"USC Application Form\"\n            id=\"joinFormContainer\"\n            src=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?embedded=true\"\n          >\n            Loading…\n          </iframe>\n        )}\n        {/* <iframe\n          className={classes.iframe}\n          title='Discord Widget'\n          id='embeddedDiscord'\n          src='https://discord.com/widget?id=662439414152167434&amp;theme=dark'\n          allowTransparency\n          frameBorder='0'\n          sandbox='allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts'></iframe> */}\n      </Paper>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/404.1f2277c5.jpg\";","import { Link, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport errorImg from 'assets/404.jpg';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    margin: 5,\n    height: '100%',\n  },\n  img: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  paper: {\n    width: '80%',\n    margin: 'auto',\n  },\n});\n\nexport const NotFound = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h3\">Mistakes were made</Typography>\n        <Typography variant=\"subtitle1\">\n          You were hyperdicted... escape destruction by going{' '}\n          <Link to=\"/home\" component={NavLink}>\n            home\n          </Link>\n          .\n        </Typography>\n        <img className={classes.img} alt=\"404 Error\" src={errorImg} />\n      </Paper>\n    </div>\n  );\n};\n","export const allies = [\n  '1st Imperium Auxiliary Cohort',\n  'Alba Rotam Private Military',\n  'Arbor Caelum',\n  'Black Universe Gazers',\n  'Daily Routine Incorperated',\n  'Explorers of Nabudis',\n  'The Galactic Archive',\n  'Gilgamesh Corps',\n  'Independence Separatist Fleet',\n  'Intergalactic Astronomical Union',\n  'Interstellar Incorporated',\n  'Knights of Pleiades',\n  'Ryders of the Void',\n  'ROOKS',\n  'Sapere Aude',\n  'The Altruists',\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const docsList: IInfoButton[] = [\n  {\n    title: 'Radar',\n    caption: 'Infographic',\n    local: true,\n    link: '/radar',\n    beginner: true,\n  },\n  {\n    title: 'Station Landing Map',\n    caption: 'Infographic',\n    local: true,\n    link: '/station-map',\n    beginner: true,\n  },\n  {\n    title: 'Full Spectrum Scanner',\n    caption: 'Spectrum image',\n    local: true,\n    link: '/fss',\n    beginner: true,\n  },\n  {\n    title: 'Scoopable Stars',\n    caption: 'Infographic',\n    local: true,\n    link: '/scoopable',\n    beginner: true,\n  },\n  {\n    title: 'Find the Slot - Coriolis',\n    caption: 'Infographic',\n    local: true,\n    link: '/coriolis',\n    beginner: true,\n  },\n  {\n    title: 'Error Codes',\n    caption: 'Infographic',\n    local: true,\n    link: '/error-codes',\n    beginner: true,\n  },\n\n  {\n    title: 'Anti-Thargoid Flight Manual',\n    caption: 'Created by Aterius',\n    local: false,\n    link:\n      'https://docs.google.com/document/d/1loy4TRNhM07Azf_ib01OIurujTcNX-L1Y1NYFy59i4M/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Supercruise Ship Handling',\n    caption: 'Created by CMDR marx',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1cWCUSxvliZ3ly-RRulUeYqZ3hqOyCSRLze0KS1QBiBY/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Database',\n    caption: 'Created by Qohen Leth',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1wTmKrzLCXRIdHwKHaN-gXHq6YkS_JAnJKsyQp8P-j0Y/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Material Locator',\n    caption: 'Created by DTEA',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1Mp7l0bSnMp_G7xWUm75M-XuihDfTdi27rm-vB9K8AX0/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'BGS Influence Caps',\n    caption: 'Created by Jane Turner',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/influence-caps-gains-and-the-wine-analogy.423837/',\n    beginner: false,\n  },\n  {\n    title: 'Resistance Stacking Explained',\n    caption: 'Created by Fett_Li',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/this-is-how-resistance-stacking-works.439830/',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const guidesList: IInfoButton[] = [\n  {\n    title: 'New Player Guide',\n    caption: 'Created by Pixel Bandits',\n    local: false,\n    link:\n      'https://www.pixelbandits.org/2020/04/elite-dangerous-beginners-guide/',\n    beginner: true,\n  },\n  {\n    title: 'USC Ship Builds List',\n    caption: 'Compiled by Admiralfeb',\n    local: true,\n    link: '/builds',\n    beginner: true,\n  },\n  {\n    title: 'How to Explore',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/exploration',\n    beginner: true,\n  },\n  {\n    title: 'How to Mine',\n    caption: 'Created by LocNor',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/4wmgja/general_mining_guide_20/',\n    beginner: true,\n  },\n  {\n    title: 'Ship Reviews',\n    caption: 'Compiled by Admiralfeb',\n    local: true,\n    link: '/reviews',\n    beginner: true,\n  },\n  {\n    title: 'Mining Maps',\n    caption: 'Compiled by Luisqa',\n    local: true,\n    link: '/mining',\n    beginner: false,\n  },\n  {\n    title: 'Cave Johnson',\n    caption: 'Compiled by IM2D and Nullyti',\n    local: true,\n    link: '/cave-johnson',\n    beginner: false,\n  },\n  {\n    title: 'How to Unlock Engineers',\n    caption: \"Fox's Guide\",\n    local: false,\n    link:\n      'https://munkjensen.net/wiki/index.php?title=Fox%27s_step-by-step_Guide_to_Unlocking_Engineers_Quickly',\n    beginner: false,\n  },\n  {\n    title: 'How to unlock Guardian',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/guardian-modules',\n    beginner: false,\n  },\n  {\n    title: 'How to Grind Imperial and Federal Rank',\n    caption: 'Reddit',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/g9y56s/psa_grind_how_to_get_federation_empire_rank_in_12/',\n    beginner: false,\n  },\n];\n","export const hc = [\n  'NickG2002',\n  'Goliath the Second',\n  'LOKioo42',\n  'Pablok',\n  'PracticalHalo',\n  'RedFang Culph',\n  'UltraNeros',\n  'Admiralfeb',\n  'Akhaten',\n  'Aurelius Publius',\n  'Captain Smokeq',\n  'Clever Ape',\n  'Nullyti',\n  'Queen Eleanor',\n  'Yuting9',\n];\n","import CaveJohnson from 'assets/information/Cave Johnson.png';\nimport StationMap from 'assets/information/ED station landing pad map.png';\nimport FSS from 'assets/information/FSS-1.jpg';\nimport Scoopable from 'assets/information/KBGFoam.jpg';\nimport Coriolis from 'assets/information/Entrance_on_a_Coriolis_Dock.png';\nimport ErrorCodes from 'assets/information/ED error codes.png';\nimport Radar from 'assets/information/radar.png';\n\nexport const infoGraphics = [\n  {\n    id: 'cave-johnson',\n    title: 'Cave Johnson',\n    img: CaveJohnson,\n  },\n  {\n    id: 'station-map',\n    title: 'Station Map',\n    img: StationMap,\n  },\n  {\n    id: 'fss',\n    title: 'Full Spectrum Scanner',\n    img: FSS,\n  },\n  {\n    id: 'scoopable',\n    title: 'Scoopable Stars',\n    img: Scoopable,\n  },\n  {\n    id: 'coriolis',\n    title: 'Find the Coriolis Slot',\n    img: Coriolis,\n  },\n  {\n    id: 'error-codes',\n    title: 'Error Codes',\n    img: ErrorCodes,\n  },\n  {\n    id: 'radar',\n    title: 'Radar',\n    img: Radar,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/Cave Johnson.fe248e5c.png\";","export default __webpack_public_path__ + \"static/media/ED station landing pad map.c39883eb.png\";","export default __webpack_public_path__ + \"static/media/FSS-1.78fc877c.jpg\";","export default __webpack_public_path__ + \"static/media/KBGFoam.dd62ea7b.jpg\";","export default __webpack_public_path__ + \"static/media/Entrance_on_a_Coriolis_Dock.b1a7bfdb.png\";","export default __webpack_public_path__ + \"static/media/ED error codes.0f34ed4f.png\";","export default __webpack_public_path__ + \"static/media/radar.c9085875.png\";","export const discordRules = [\n  'Be Respectful',\n  'Be Mature',\n  'Do not @everyone',\n  'No porn or nudity',\n  'No harassment',\n  'No excessive swearing',\n  'No derogatory terms or phrases',\n  'No political discussions as they can become heated.',\n];\n\nexport const memberRules = [\n  'Will not, under no circumstance, Combat Log.',\n  'Will not attack other USC Personnel or any allies of the United Systems Cooperative.',\n  'Will not attack any innocent CMDRs, unless in pre-arranged combat, or for Powerplay.',\n  'Will not, under no circumstance, discriminate against other commanders on the basis of race, religion, sexuality, nationality, etc.',\n  'Will not, under no circumstance, seek revenge against other USC Personnel, directly or indirectly. Punishments for crimes, and resolutions for transgressions, will be handed out by High Command.',\n  'Will not, under no circumstance, to divulge information marked as confidential by High Command.',\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const toolsList: IInfoButton[] = [\n  {\n    title: 'Ship Builder',\n    caption: 'Coriolis',\n    local: false,\n    link: 'https://coriolis.io/',\n    beginner: true,\n  },\n  {\n    title: 'Inara Companion App',\n    caption: 'Helpful 3rd party tool',\n    local: false,\n    link: 'https://inara.cz/',\n    beginner: true,\n  },\n  {\n    title: \"Miner's Tool\",\n    caption: 'Created by CMDR VicTic',\n    local: false,\n    link: 'https://edtools.cc/miner',\n    beginner: true,\n  },\n  {\n    title: 'Ship Anatomy',\n    caption: 'a.teall.info',\n    local: false,\n    link: 'http://a.teall.info/edsa/',\n    beginner: true,\n  },\n  {\n    title: 'ED Ref Card',\n    caption: 'KeyBinds Helper',\n    local: false,\n    link: 'https://edrefcard.info/',\n    beginner: true,\n  },\n  {\n    title: 'ED Market Connector',\n    caption: 'EDMC',\n    local: false,\n    link: 'https://www.edtutorials.com/engineering/ed-market-connector/',\n    beginner: true,\n  },\n  {\n    title: 'ED Discovery',\n    caption: 'Alternative to EDMC',\n    local: false,\n    link: 'https://github.com/EDDiscovery/EDDiscovery/releases',\n    beginner: true,\n  },\n  {\n    title: 'Massacre Mission Tracker',\n    caption: 'Created by CMDR Clever Ape',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1K0Su9HS9i43gx_RxLBR9NdwUI7iMhibKxwbaWf39WpQ/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Material Finder',\n    caption: 'EDTutorials',\n    local: false,\n    link: 'https://www.edtutorials.com/material-finder/',\n    beginner: false,\n  },\n  {\n    title: 'Neutron Star Plotter',\n    caption: 'Created by Gareth Harper',\n    local: false,\n    link: 'https://www.spansh.co.uk/plotter',\n    beginner: false,\n  },\n  {\n    title: 'Road 2 Riches',\n    caption: 'Created by Gareth Harper',\n    local: false,\n    link: 'https://www.spansh.co.uk/riches',\n    beginner: false,\n  },\n  {\n    title: 'The Hurt Highway',\n    caption: 'Created by EXO',\n    local: false,\n    link:\n      'https://www.edsm.net/en/galactic-routes/show/id/291/name/The+Hurt+Highway',\n    beginner: false,\n  },\n  {\n    title: 'EDDB Companion App',\n    caption: 'Alternative to Inara',\n    local: false,\n    link: 'https://eddb.io/',\n    beginner: false,\n  },\n  {\n    title: 'Elite Dangerous Star Map',\n    caption: '(EDSM)',\n    local: false,\n    link: 'https://www.edsm.net/',\n    beginner: false,\n  },\n  {\n    title: 'Fleet Carrier Calculator',\n    caption: `Commander's Toolbox`,\n    local: false,\n    link: 'https://cmdrs-toolbox.com/fleet-carrier-calculator',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\nimport { getLinks } from 'hooks/useLinks';\nconst { inaraSquadLink, discordLink, patreonLink } = getLinks();\nexport const uscLinksList: IInfoButton[] = [\n  {\n    title: 'Rules',\n    caption: '',\n    local: true,\n    link: '/about/rules',\n    beginner: true,\n  },\n  {\n    title: 'Our Management',\n    caption: '',\n    local: true,\n    link: '/about/hc',\n    beginner: true,\n  },\n  {\n    title: 'Our Allies',\n    caption: '',\n    local: true,\n    link: '/about/allies',\n    beginner: true,\n  },\n  {\n    title: 'Our Fleet Carriers',\n    caption: '',\n    local: true,\n    link: '/about/fc',\n    beginner: true,\n  },\n  {\n    title: 'Discord',\n    caption: '',\n    local: false,\n    link: discordLink,\n    beginner: false,\n  },\n  {\n    title: 'Inara USC Squadron',\n    caption: '',\n    local: false,\n    link: inaraSquadLink,\n    beginner: false,\n  },\n  {\n    title: 'Patreon',\n    caption: '',\n    local: false,\n    link: patreonLink,\n    beginner: false,\n  },\n];\n","import {\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { allies } from 'data/information';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n  },\n  allies: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 'auto',\n    width: 450,\n  },\n});\n\n/** Displays Allies */\nexport const AboutAllies = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.header}>\n        Allies\n      </Typography>\n      <Paper className={classes.allies}>\n        <List>\n          {allies.map((rule: string, i: number) => (\n            <ListItem key={i}>\n              <ListItemText primary={`${rule}`} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { hc } from 'data/information';\n\nconst useStyles = makeStyles({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  rank: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 'auto',\n    width: 450,\n  },\n});\n\n/** Displays High Command Members */\nexport const AboutHC = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.header}>\n        High Command\n      </Typography>\n      <Paper className={classes.rank}>\n        <List>\n          {hc.map((rule: string, i: number) => (\n            <ListItem key={i}>\n              <ListItemText primary={`${rule}`} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n} from '@material-ui/core';\nimport { discordRules, memberRules } from 'data/information';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridTemplateRows: 'auto',\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto',\n    },\n  },\n  rules: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n  },\n  consequences: {\n    gridColumn: '1 / 3',\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n    [theme.breakpoints.down('md')]: {\n      gridColumn: 1,\n    },\n  },\n}));\n\n/** Displays the rules */\nexport const AboutRules = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography variant=\"h3\">Rules</Typography>\n      <Paper className={classes.root}>\n        <div className={classes.rules}>\n          <Typography variant=\"h4\">Discord</Typography>\n          <List>\n            {discordRules.map((rule: string, index: number) => (\n              <ListItem key={index}>\n                <ListItemText primary={`${index + 1}) ${rule}`} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className={classes.rules}>\n          <Typography variant=\"h4\">Members of USC</Typography>\n          <List>\n            {memberRules.map((rule: string, index: number) => (\n              <ListItem key={index}>\n                <ListItemText primary={`${index + 1}) ${rule}`} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className={classes.consequences}>\n          <Typography>\n            Those found in violation of any of these Discord or Group rules, or\n            found attempting to bypass these rules in any way, will first be\n            subject to a minimum of a warning, further offences will be subject\n            to demotion, expulsion, and/or USC Kill-on-Sight status.\n          </Typography>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n","import { useQuery } from '@apollo/client';\nimport { sortItems } from 'functions/sort';\nimport { loader } from 'graphql.macro';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\nimport { useMemo } from 'react';\n\nconst FleetCarriers = loader('../../graphql/allFleetCarriers.gql');\n\nexport const useFleetCarriers = () => {\n  const { data, loading, error } = useQuery<{ fleetCarriers: IFleetCarrier[] }>(\n    FleetCarriers\n  );\n  if (error) {\n    throw new Error(`Failed to fetch carriers: ${error.message}`);\n  }\n  let fleetCarriers = data?.fleetCarriers;\n  return { fleetCarriers, loading };\n};\n\nexport const usePersonalCarriers = (\n  fleetCarriers: IFleetCarrier[] | undefined\n) => {\n  return useMemo(() => {\n    if (fleetCarriers) {\n      const personalCarriers = fleetCarriers.filter((x) =>\n        x.purpose.toLowerCase().includes('personal')\n      );\n      return sortItems(personalCarriers, 'name');\n    } else {\n      return undefined;\n    }\n  }, [fleetCarriers]);\n};\n\nexport const useSquadCarriers = (\n  fleetCarriers: IFleetCarrier[] | undefined\n) => {\n  return useMemo(() => {\n    if (fleetCarriers) {\n      const personalCarriers = fleetCarriers.filter(\n        (x) => !x.purpose.toLowerCase().includes('personal')\n      );\n      return sortItems(personalCarriers, 'name');\n    } else {\n      return undefined;\n    }\n  }, [fleetCarriers]);\n};\n","import {\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  makeStyles,\n} from '@material-ui/core';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/**\n * Displays Personal carriers\n * @param props carriers to display\n */\nexport const PersonalCarriers = (props: {\n  carriers: IFleetCarrier[] | undefined;\n}) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import {\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  makeStyles,\n} from '@material-ui/core';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/**\n * Displays USC Carriers\n * @param props carriers to display\n */\nexport const USCCarriers = (props: {\n  carriers: IFleetCarrier[] | undefined;\n}) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Purpose</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.purpose}</TableCell>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Typography, makeStyles } from '@material-ui/core';\nimport { EDSpinner } from '@admiralfeb/react-components';\nimport {\n  useFleetCarriers,\n  usePersonalCarriers,\n  useSquadCarriers,\n} from 'hooks/information/useFleetCarriers';\nimport { PersonalCarriers } from './carriersPersonal';\nimport { USCCarriers } from './carriersUSC';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/** Displays Fleet Carrier Information */\nexport const Carriers = () => {\n  const classes = useStyles();\n  const { fleetCarriers, loading } = useFleetCarriers();\n  let personalCarriers = usePersonalCarriers(fleetCarriers);\n  let squadCarriers = useSquadCarriers(fleetCarriers);\n\n  if (loading) {\n    return <EDSpinner />;\n  }\n\n  return (\n    <div className={classes.table}>\n      <Typography variant=\"h4\">USC Fleet Carriers</Typography>\n      <USCCarriers carriers={squadCarriers} />\n      <Typography variant=\"h4\">Personal Fleet Carriers of USC</Typography>\n      <PersonalCarriers carriers={personalCarriers} />\n    </div>\n  );\n};\n","import { Button, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { IInfoButton } from 'models/information/infoButtonModel';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flex: {\n    '& button': {\n      margin: 5,\n    },\n    '& a': {\n      margin: 5,\n    },\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\n/** Interface for Info Section Props */\ninterface ISectionProps {\n  /** id of section */\n  id: string;\n  /** header to display */\n  header: string;\n  /** Buttons to display */\n  buttons: IInfoButton[];\n}\n\n/**\n * Displays an info Section set of buttons\n * @param props id, header, and button array.\n */\nexport const InfoSection = (props: ISectionProps) => {\n  const classes = useStyles();\n  const { url } = useRouteMatch();\n  const { id, header, buttons } = props;\n\n  return (\n    <Paper id={id} className={classes.paper}>\n      <Typography variant=\"h4\">{header}</Typography>\n      <div className={classes.grid}>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === true)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === false)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { makeStyles, Typography } from '@material-ui/core';\nimport { useInfographic } from 'hooks/information/useInfographic';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n  },\n});\n\n/**\n * Displays an infographic\n * @param props imgID to display\n */\nexport const Infographic = (props: { img: string }) => {\n  const infographic = useInfographic(props.img);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {infographic ? (\n        <>\n          <Typography variant=\"h3\">{infographic.title}</Typography>\n          <img src={infographic.img} alt={infographic.title} />\n        </>\n      ) : (\n        <Typography>Image not found</Typography>\n      )}\n    </div>\n  );\n};\n","import { infoGraphics } from 'data/information/infographicList';\n\nexport const useInfographic = (imgID: string) => {\n  return infoGraphics.find((x) => x.id === imgID);\n};\n","import { makeStyles } from '@material-ui/core';\nimport { Typography, Paper } from '@material-ui/core';\nimport { InfoSection } from './infoSection';\nimport { useInfoButtons } from 'hooks/information/useInfoButtons';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\n/** Information Landing Component */\nexport const Information = () => {\n  const classes = useStyles();\n  const { toolsList, docsList, guidesList, uscLinksList } = useInfoButtons();\n  return (\n    <>\n      <Typography variant=\"h2\" className={classes.header}>\n        USC Data Archive\n      </Typography>\n      <InfoSection\n        id=\"usc-links\"\n        key=\"usc-links\"\n        header=\"USC Links\"\n        buttons={uscLinksList}\n      />\n      <Paper className={classes.paper}>\n        <Typography variant=\"subtitle1\">\n          New Players look to the{' '}\n          <span className={classes.secondary}> blue buttons </span>for helpful\n          tips in getting started with the Guides, Tools, and Documentation\n          below.\n        </Typography>\n      </Paper>\n      <InfoSection\n        id=\"guides\"\n        key=\"guides\"\n        header=\"Guides\"\n        buttons={guidesList}\n      />\n      <InfoSection id=\"tools\" key=\"tools\" header=\"Tools\" buttons={toolsList} />\n      <InfoSection\n        id=\"docs\"\n        key=\"docs\"\n        header=\"Documentation\"\n        buttons={docsList}\n      />\n    </>\n  );\n};\n","import {\n  docsList,\n  guidesList,\n  toolsList,\n  uscLinksList,\n} from 'data/information';\n\nexport const useInfoButtons = () => {\n  return { docsList, guidesList, toolsList, uscLinksList };\n};\n","import {\n  Button,\n  IconButton,\n  Link,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { useMiningMaps } from 'hooks/information/useMiningMaps';\nimport React from 'react';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { copytoClipboard } from 'functions/copytoClipboard';\nimport { useLinks } from 'hooks/useLinks';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '95%',\n    },\n  },\n}));\n\nexport const MiningMap = () => {\n  const maps = useMiningMaps();\n  const classes = useStyles();\n  const { inaraCommodity } = useLinks();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\">Mining Maps</Typography>\n      <Typography variant=\"subtitle1\">Compiled by Luisqa</Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>System</TableCell>\n              <TableCell>Body</TableCell>\n              <TableCell>Material</TableCell>\n              <TableCell>Mining Type</TableCell>\n              <TableCell>Rez Overlap</TableCell>\n              <TableCell>Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {maps.map((map) => (\n              <TableRow key={map.link}>\n                <TableCell>\n                  {map.system}{' '}\n                  <IconButton\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={() => copytoClipboard(map.system)}\n                  >\n                    <FileCopyIcon />\n                  </IconButton>\n                </TableCell>\n                <TableCell>{map.body}</TableCell>\n                <TableCell>\n                  <Link\n                    href={`${inaraCommodity}${map.materialInara}`}\n                    target=\"_blank\"\n                  >\n                    {map.material}\n                  </Link>\n                </TableCell>\n                <TableCell>{map.miningType}</TableCell>\n                <TableCell>{map.overlap}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    href={map.link}\n                    target=\"_blank\"\n                  >\n                    Open Map\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import { IMiningMap } from 'models/information/miningMap';\nimport maps from 'data/information/miningMaps.json';\nimport { sortItems } from 'functions/sort';\n\nexport const useMiningMaps = () => {\n  const miningMaps: IMiningMap[] = maps;\n  return sortItems(miningMaps, 'system');\n};\n","export const copytoClipboard = (text: string) => {\n  let tempInput = document.createElement('input');\n  tempInput.value = text;\n  document.body.appendChild(tempInput);\n  tempInput.select();\n  document.execCommand('copy');\n  document.body.removeChild(tempInput);\n};\n","import {\n  Button,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { useShipReviews } from 'hooks/information/useShipReviews';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 650,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/** Displays the ship Review Table */\nexport const ShipReviews = () => {\n  const classes = useStyles();\n  const shipReviews = useShipReviews();\n  return (\n    <div className={classes.table}>\n      <Typography variant=\"h3\">Ship Reviews</Typography>\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Ship</TableCell>\n              <TableCell>Manufacture</TableCell>\n              <TableCell>Review Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {shipReviews.map((review) => (\n              <TableRow key={review.shipId}>\n                <TableCell>{review.name}</TableCell>\n                <TableCell>{review.manufacturer}</TableCell>\n                <TableCell>\n                  <Button\n                    href={review.shipReview}\n                    target=\"_blank\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    Pilot Review\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import reviews from 'data/shipBuilds/shipMap.json';\nimport { sortItems } from 'functions/sort';\nimport { IShipReview } from 'models/information/shipReview';\n\nexport const useShipReviews = (): IShipReview[] => {\n  const reviewList = reviews.map((review) => {\n    const shipId = review.shipId;\n    const name = review.name;\n    const manufacturer = review.manufacturer;\n    const shipReview = review.shipReview;\n    return { shipId, name, manufacturer, shipReview };\n  });\n  return sortItems(reviewList, 'name');\n};\n","import { lazy, Suspense } from 'react';\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\nimport {\n  AboutAllies,\n  AboutHC,\n  AboutRules,\n  Carriers,\n  Infographic,\n  Information,\n  MiningMap,\n  ShipReviews,\n} from 'components/information';\nimport { NotFound } from 'components';\nimport { EDSpinner } from '@admiralfeb/react-components';\nimport { infoGraphics } from 'data/information/infographicList';\nconst ShipBuilds = lazy(() => import('routes/shipBuilds.routes'));\n\nexport const InformationRoutes = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Suspense fallback={<EDSpinner />}>\n      <Switch>\n        <Route exact path={path}>\n          <Information />\n        </Route>\n        <Route path={`${path}/about/rules`}>\n          <AboutRules />\n        </Route>\n        <Route path={`${path}/about/hc`}>\n          <AboutHC />\n        </Route>\n        <Route path={`${path}/about/allies`}>\n          <AboutAllies />\n        </Route>\n        <Route path={`${path}/about/fc`}>\n          <Carriers />\n        </Route>\n        <Route path={`${path}/builds`}>\n          <ShipBuilds />\n        </Route>\n        <Route path={`${path}/mining`}>\n          <MiningMap />\n        </Route>\n        <Route path={`${path}/reviews`}>\n          <ShipReviews />\n        </Route>\n        {infoGraphics.map((graphic) => (\n          <Route key={graphic.id} path={`${path}/${graphic.id}`}>\n            <Infographic img={graphic.id} />\n          </Route>\n        ))}\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n"],"sourceRoot":""}