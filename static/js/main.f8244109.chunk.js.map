{"version":3,"sources":["app/theme.ts","app/navbar.styles.ts","app/providers/realmAppProvider.tsx","app/hooks/useRealmApp.ts","app/navbar.tsx","app/information/hooks/useFleetCarriers.ts","app/information/components/about/fleetCarriers.tsx","app/information/components/guides/shipReviews.tsx","app/information/components/docs/infographic-list.ts","app/information/assets/Cave Johnson.png","app/information/assets/ED station landing pad map.png","app/information/assets/FSS-1.jpg","app/information/assets/KBGFoam.jpg","app/information/assets/Entrance_on_a_Coriolis_Dock.png","app/information/components/docs/infographic.tsx","app/information/components/docs/info-docs-list.ts","app/information/components/guides/info-guides-list.ts","app/information/components/tools/info-tools-list.ts","app/information/infoStyles.ts","app/information/components/info-usclinks.tsx","app/information/components/info-section.tsx","app/information/information.tsx","app/information/information.routes.tsx","app/app.routes.tsx","app/providers/realmApolloProvider.tsx","app/app.tsx","reportWebVitals.ts","index.tsx","app/components/home.tsx","app/information/components/about/about.tsx","app/components/join.tsx","assets/EDLoader1.svg","app/components/loading.tsx","assets/404.jpg","app/components/notFound.tsx","app/information/ship-builds/functions/sort.ts","app/information/components/about/about-allies.tsx","app/information/components/about/about-hc.tsx","app/information/components/about/about-rules.tsx"],"names":["darkTheme","createMuiTheme","palette","primary","main","secondary","type","overrides","MuiLink","root","color","MuiButton","textTransform","navbarStyles","makeStyles","theme","width","display","padding","backgroundColor","height","minHeight","justifyContent","zIndex","img","float","marginRight","navLink","textAlign","textDecoration","marginTop","marginBottom","marginLeft","active","filler","flex","RealmAppContext","createContext","RealmAppProvider","props","appId","children","useState","Realm","app","setApp","useEffect","currentUser","setCurrentUser","a","logIn","anonymous","logOut","wrapped","logInAnon","Provider","value","useRealmApp","useContext","Error","NavbarComponent","classes","useStyles","realm","console","log","then","_","catch","reason","className","Button","to","activeClassName","component","NavLink","exact","variant","table","maxWidth","margin","secondTable","FleetCarriers","useQuery","gql","data","loading","error","message","fleetCarriers","useFleetCarriers","squadCarriers","setSquadCarriers","personalCarriers","setPersonalCarriers","filter","x","purpose","toLowerCase","includes","sortItems","Typography","carriers","USCCarriers","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","carrier","name","id","owner","PersonalCarriers","ShipReviews","shipReviews","reviewList","reviews","review","manufacturer","shipReview","useShipReviews","href","target","infoGraphics","title","Infographic","infographic","useInfographic","src","alt","imgID","find","docsList","caption","local","link","beginner","guidesList","toolsList","infoStyles","paper","paddingBottom","specialButton","flexDirection","grid","gridTemplateRows","InfoUSCLinks","url","useRouteMatch","InfoSection","header","buttons","guide","Link","Information","ShipBuilds","lazy","InformationRoutes","path","fallback","AppRoutes","from","createRealmApolloClient","HttpLink","uri","fetch","options","refreshCustomData","headers","Headers","Authorization","accessToken","cache","InMemoryCache","ApolloClient","RealmApolloProvider","client","setClient","App","history","createBrowserHistory","basename","process","maxSnack","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","rules","border","borderRadius","setGrid","gridTemplateColumns","latin","cursive","fontFamily","subtitle","video","Home","controls","poster","iframe","step","gridTemplate","right","left","Join","mediaQuery","useMediaQuery","container","Loading","NotFound","errorImg","items","prop","sort","comparer","b","allies","AboutAllies","rule","i","rank","AboutHC","hc","consequences","gridColumn","AboutRules","discordRules","index","memberRules"],"mappings":"muRAEaA,EAAYC,YAAe,CACtCC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,KAAM,UAIVN,EAAUO,UAAY,CACpBC,QAAS,CACPC,KAAM,CACJC,MAAOV,EAAUE,QAAQC,QAAQC,OAGrCO,UAAW,CACTF,KAAM,CACJG,cAAe,a,8CCiBNC,EArCMC,aAAW,SAACC,GAAD,MAAY,CAC1CN,KAAM,CACJO,MAAO,OACPC,QAAS,OACTC,QAAS,WACTC,gBAAiB,OACjBC,OAAQ,OACRC,UAAW,OACXC,eAAgB,UAChBC,OAAQ,MAEVC,IAAK,CACHJ,OAAQ,OACRJ,MAAO,OACPS,MAAO,OACPR,QAAS,QACTS,YAAa,OAEfC,QAAS,CACPR,gBAAiB,cACjBT,MAAO,UACPkB,UAAW,SACXC,eAAgB,OAChBC,UAAW,OACXC,aAAc,OACdC,WAAY,QACZpB,cAAe,WAEjBqB,OAAQ,CACNd,gBAAiBJ,EAAMb,QAAQC,QAAQC,KACvCM,MAAO,SAETwB,OAAQ,CACNC,KAAM,W,yCCzBGC,EAAkBC,wBAAoC,MAEtDC,EAAmB,SAACC,GAG1B,IACGC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SADX,EAEkBC,mBAAS,IAAIC,IAAUH,IAFzC,mBAEGI,EAFH,KAEQC,EAFR,KAGJC,qBAAU,WACRD,EAAO,IAAIF,IAAUH,MACpB,CAACA,IALA,MAQkCE,mBAASE,EAAIG,aAR/C,mBAQGA,EARH,KAQgBC,EARhB,iDASJ,sBAAAC,EAAA,sEACQL,EAAIM,MAAMP,IAAkBQ,aADpC,OAGEH,EAAeJ,EAAIG,aAHrB,4CATI,kEAcJ,4BAAAE,EAAA,gFAEQL,EAAIG,mBAFZ,aAEQ,EAAiBK,SAFzB,OAKEJ,EAAeJ,EAAIG,aALrB,4CAdI,sBAqBJ,IAAMM,EAAU,CAAET,MAAKG,cAAaO,UArBhC,2CAqB2CF,OArB3C,4CAsBJ,OACE,cAAChB,EAAgBmB,SAAjB,CAA0BC,MAAOH,EAAjC,SACGZ,KCpCMgB,EAAc,WACzB,IAAMb,EAAMc,qBAAWtB,GACvB,IAAKQ,EACH,MAAM,IAAIe,MAAJ,gEAIR,OAAOf,GCJIgB,EAAkB,WAC7B,IAAMC,EAAUC,IACVC,EAAQN,IAad,OAXAX,qBAAU,WACRkB,QAAQC,IAAIF,EAAMhB,aACQ,OAAtBgB,EAAMhB,aACRgB,EACGT,YACAY,MAAK,SAACC,GAAD,OAAOH,QAAQC,IAAIF,EAAMhB,gBAC9BqB,OAAM,SAACC,GAAD,OAAYL,QAAQC,IAAII,QAGlC,IAGD,sBAAKC,UAAWT,EAAQpD,KAAxB,UACE,cAAC8D,EAAA,EAAD,CACEC,GAAG,QACHF,UAAWT,EAAQlC,QACnB8C,gBAAiBZ,EAAQ5B,OACzByC,UAAWC,IAJb,kBAQA,cAACJ,EAAA,EAAD,CACEC,GAAG,eACHI,OAAK,EACLN,UAAWT,EAAQlC,QACnB8C,gBAAiBZ,EAAQ5B,OACzByC,UAAWC,IALb,yBASA,cAACJ,EAAA,EAAD,CACEC,GAAG,sBACHI,OAAK,EACLN,UAAWT,EAAQlC,QACnB8C,gBAAiBZ,EAAQ5B,OACzByC,UAAWC,IALb,wBASA,qBAAKL,UAAWT,EAAQ3B,SACxB,cAACqC,EAAA,EAAD,CACEC,GAAG,QACH9D,MAAM,YACNmE,QAAQ,YACRH,UAAWC,IAJb,sB,kVC/CC,I,QCcDb,EAAYhD,YAAW,CAC3BgE,MAAO,CACLC,SAAU,IACVnD,UAAW,SACXoD,OAAQ,QAEVC,YAAa,CACXF,SAAU,IACVnD,UAAW,SACXoD,OAAQ,UAGCE,EAAgB,WAAO,IAAD,ED1BH,WAAO,IAAD,EACHC,mBAC/BC,cADuC,MAAjCC,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,QAASC,EADa,EACbA,MAYvB,GAAIA,EACF,MAAM,IAAI5B,MAAJ,oCAAuC4B,EAAMC,UAGrD,MAAO,CAAEC,cADQ,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAMI,cACFH,WCUWI,GAA3BD,EADyB,EACzBA,cAAeH,EADU,EACVA,QADU,EAES5C,qBAFT,mBAE1BiD,EAF0B,KAEXC,EAFW,OAGelD,qBAHf,mBAG1BmD,EAH0B,KAGRC,EAHQ,KAI3BjC,EAAUC,IAiBhB,OAfAhB,qBAAU,WACR,IAAIwC,EAAJ,CAIA,IAAMK,EAAgBF,EAAeM,QACnC,SAACC,GAAD,OAAQA,EAAEC,QAAQC,cAAcC,SAAS,eAErCN,EAAmBJ,EAAeM,QAAO,SAACC,GAAD,OAC7CA,EAAEC,QAAQC,cAAcC,SAAS,eAEnCP,EAAiBQ,YAAUT,EAAe,YAC1CG,EAAoBM,YAAUP,EAAkB,YAC/C,CAACP,EAASG,IAGX,sBAAKnB,UAAWT,EAAQiB,MAAxB,UACE,cAACuB,EAAA,EAAD,CAAYxB,QAAQ,KAApB,gCACCS,EAAU,cAAC,IAAD,IAAc,cAAC,EAAD,CAAagB,SAAUX,IAChD,cAACU,EAAA,EAAD,CAAYxB,QAAQ,KAApB,4CACCS,EAAU,cAAC,IAAD,IAAc,cAAC,EAAD,CAAkBgB,SAAUT,QAKrDU,EAAc,SAAChE,GACnB,IAAMsB,EAAUC,IACRwC,EAAa/D,EAAb+D,SAER,OACE,cAACE,EAAA,EAAD,CAAgB9B,UAAW+B,IAAOnC,UAAWT,EAAQiB,MAArD,SACE,eAAC4B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,yBAGJ,cAACC,EAAA,EAAD,iBACGR,QADH,IACGA,OADH,EACGA,EAAUS,KAAI,SAACC,GAAD,OACb,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYG,EAAQf,UACpB,cAACY,EAAA,EAAD,UAAYG,EAAQC,OACpB,cAACJ,EAAA,EAAD,UAAYG,EAAQE,KACpB,cAACL,EAAA,EAAD,UAAYG,EAAQG,UAJPH,EAAQE,eAa7BE,EAAmB,SAAC7E,GACxB,IAAMsB,EAAUC,IACRwC,EAAa/D,EAAb+D,SAER,OACE,cAACE,EAAA,EAAD,CAAgB9B,UAAW+B,IAAOnC,UAAWT,EAAQoB,YAArD,SACE,eAACyB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,yBAGJ,cAACC,EAAA,EAAD,iBACGR,QADH,IACGA,OADH,EACGA,EAAUS,KAAI,SAACC,GAAD,OACb,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYG,EAAQC,OACpB,cAACJ,EAAA,EAAD,UAAYG,EAAQE,KACpB,cAACL,EAAA,EAAD,UAAYG,EAAQG,UAHPH,EAAQE,e,SCxE7BpD,EAAYhD,YAAW,CAC3BgE,MAAO,CACLC,SAAU,IACVnD,UAAW,SACXoD,OAAQ,UAICqC,EAAc,WACzB,IAAMxD,EAAUC,IACVwD,EArBe,WACrB,IAAMC,EAAaC,EAAQT,KAAI,SAACU,GAK9B,MAAO,CAAEP,GAJEO,EAAOP,GAILD,KAHAQ,EAAOR,KAGDS,aAFED,EAAOC,aAEKC,WADdF,EAAOE,eAG5B,OAAOvB,YAAUmB,EAAY,QAaTK,GACpB,OACE,sBAAKtD,UAAWT,EAAQiB,MAAxB,UACE,cAACuB,EAAA,EAAD,CAAYxB,QAAQ,KAApB,0BACA,cAAC2B,EAAA,EAAD,CAAgB9B,UAAW+B,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOpC,UAAWT,EAAQiB,MAA1B,UACE,cAAC6B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,+BAGJ,cAACC,EAAA,EAAD,UACGQ,EAAYP,KAAI,SAACU,GAAD,OACf,eAACb,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYY,EAAOR,OACnB,cAACJ,EAAA,EAAD,UAAYY,EAAOC,eACnB,cAACb,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,CACEsD,KAAMJ,EAAOE,WACbG,OAAO,SACPjD,QAAQ,YACRnE,MAAM,YAJR,8BAJW+G,EAAOP,kBCrDvBa,EAAe,CAC1B,CACEb,GAAI,eACJc,MAAO,eACPxG,ICVW,IAA0B,0CDYvC,CACE0F,GAAI,cACJc,MAAO,cACPxG,IEfW,IAA0B,wDFiBvC,CACE0F,GAAI,MACJc,MAAO,wBACPxG,IGpBW,IAA0B,mCHsBvC,CACE0F,GAAI,YACJc,MAAO,kBACPxG,IIzBW,IAA0B,qCJ2BvC,CACE0F,GAAI,WACJc,MAAO,yBACPxG,IK9BW,IAA0B,0DCInCsC,EAAYhD,YAAW,CAC3BL,KAAM,CACJmB,UAAW,YAIFqG,EAAc,SAAC1F,GAC1B,IAAM2F,EAAcC,EAAe5F,EAAMf,KACnCqC,EAAUC,IAChB,OACE,qBAAKQ,UAAWT,EAAQpD,KAAxB,SACGyH,EACC,qCACE,cAAC7B,EAAA,EAAD,CAAYxB,QAAQ,KAApB,SAA0BqD,EAAYF,QACtC,qBAAKI,IAAKF,EAAY1G,IAAK6G,IAAKH,EAAYF,WAG9C,cAAC3B,EAAA,EAAD,iCAMF8B,EAAiB,SAACG,GACtB,OAAOP,EAAaQ,MAAK,SAACvC,GAAD,OAAOA,EAAEkB,KAAOoB,MC1B9BE,EAA0B,CACrC,CACER,MAAO,sBACPS,QAAS,cACTC,OAAO,EACPC,KAAM,cACNC,UAAU,GAEZ,CACEZ,MAAO,wBACPS,QAAS,iBACTC,OAAO,EACPC,KAAM,OACNC,UAAU,GAEZ,CACEZ,MAAO,kBACPS,QAAS,cACTC,OAAO,EACPC,KAAM,aACNC,UAAU,GAEZ,CACEZ,MAAO,2BACPS,QAAS,cACTC,OAAO,EACPC,KAAM,YACNC,UAAU,GAEZ,CACEZ,MAAO,8BACPS,QAAS,qBACTC,OAAO,EACPC,KACE,mGACFC,UAAU,GAEZ,CACEZ,MAAO,4BACPS,QAAS,uBACTC,OAAO,EACPC,KACE,uGACFC,UAAU,GAEZ,CACEZ,MAAO,uBACPS,QAAS,wBACTC,OAAO,EACPC,KACE,uGACFC,UAAU,GAEZ,CACEZ,MAAO,+BACPS,QAAS,kBACTC,OAAO,EACPC,KACE,uGACFC,UAAU,GAEZ,CACEZ,MAAO,qBACPS,QAAS,yBACTC,OAAO,EACPC,KACE,0FACFC,UAAU,GAEZ,CACEZ,MAAO,gCACPS,QAAS,qBACTC,OAAO,EACPC,KACE,sFACFC,UAAU,IC3EDC,GAA4B,CACvC,CACEb,MAAO,mBACPS,QAAS,2BACTC,OAAO,EACPC,KACE,wEACFC,UAAU,GAEZ,CACEZ,MAAO,uBACPS,QAAS,yBACTC,OAAO,EACPC,KAAM,UACNC,UAAU,GAEZ,CACEZ,MAAO,iBACPS,QAAS,sBACTC,OAAO,EACPC,KAAM,+CACNC,UAAU,GAEZ,CACEZ,MAAO,cACPS,QAAS,oBACTC,OAAO,EACPC,KACE,mFACFC,UAAU,GAEZ,CACEZ,MAAO,eACPS,QAAS,yBACTC,OAAO,EACPC,KAAM,WACNC,UAAU,GAEZ,CACEZ,MAAO,eACPS,QAAS,mBACTC,OAAO,EACPC,KAAM,QACNC,UAAU,GAEZ,CACEZ,MAAO,0BACPS,QAAS,cACTC,OAAO,EACPC,KACE,wGACFC,UAAU,GAEZ,CACEZ,MAAO,yBACPS,QAAS,sBACTC,OAAO,EACPC,KAAM,oDACNC,UAAU,GAEZ,CACEZ,MAAO,yCACPS,QAAS,SACTC,OAAO,EACPC,KACE,6GACFC,UAAU,IClEDE,GAA2B,CACtC,CACEd,MAAO,eACPS,QAAS,WACTC,OAAO,EACPC,KAAM,uBACNC,UAAU,GAEZ,CACEZ,MAAO,sBACPS,QAAS,yBACTC,OAAO,EACPC,KAAM,oBACNC,UAAU,GAEZ,CACEZ,MAAO,eACPS,QAAS,yBACTC,OAAO,EACPC,KAAM,2BACNC,UAAU,GAEZ,CACEZ,MAAO,eACPS,QAAS,eACTC,OAAO,EACPC,KAAM,4BACNC,UAAU,GAEZ,CACEZ,MAAO,2BACPS,QAAS,6BACTC,OAAO,EACPC,KACE,uGACFC,UAAU,GAEZ,CACEZ,MAAO,kBACPS,QAAS,cACTC,OAAO,EACPC,KAAM,+CACNC,UAAU,GAEZ,CACEZ,MAAO,uBACPS,QAAS,2BACTC,OAAO,EACPC,KAAM,mCACNC,UAAU,GAEZ,CACEZ,MAAO,mBACPS,QAAS,iBACTC,OAAO,EACPC,KACE,4EACFC,UAAU,GAEZ,CACEZ,MAAO,qBACPS,QAAS,uBACTC,OAAO,EACPC,KAAM,mBACNC,UAAU,GAEZ,CACEZ,MAAO,2BACPS,QAAS,SACTC,OAAO,EACPC,KAAM,wBACNC,UAAU,GAEZ,CACEZ,MAAO,2BACPS,QAAQ,sBACRC,OAAO,EACPC,KAAM,qDACNC,UAAU,IChDCG,GA9BIjI,aAAW,SAACC,GAAD,MAAY,CACxCiI,MAAO,CACLpH,UAAW,SACXZ,MAAO,MACPgE,OAAQ,OACR9D,QAAS,EACT+H,cAAe,GACflH,aAAc,GAEhBmH,cAAe,CACbjI,QAAS,OACTkI,cAAe,UAEjBhH,KAAM,CACJ,WAAY,CACV6C,OAAQ,GAEV,MAAO,CACLA,OAAQ,IAGZoE,KAAM,CACJnI,QAAS,OACToI,iBAAkB,QAEpBhJ,UAAW,CACTK,MAAOK,EAAMb,QAAQG,UAAUD,UCvBtBkJ,GAAe,WAC1B,IAAMzF,EAAUC,KACRyF,EAAQC,cAARD,IAER,OACE,eAAC9C,EAAA,EAAD,CAAOS,GAAG,YAAY5C,UAAWT,EAAQmF,MAAzC,UACE,cAAC3C,EAAA,EAAD,CAAYxB,QAAQ,KAApB,uBACA,sBAAKP,UAAWT,EAAQ1B,KAAxB,UACE,cAACoC,EAAA,EAAD,CACE7D,MAAM,YACNmE,QAAQ,WACRL,GAAE,UAAK+E,EAAL,gBACF7E,UAAWC,IAJb,mBAQA,cAACJ,EAAA,EAAD,CACE7D,MAAM,YACNmE,QAAQ,WACRL,GAAE,UAAK+E,EAAL,aACF7E,UAAWC,IAJb,4BAQA,cAACJ,EAAA,EAAD,CACE7D,MAAM,YACNmE,QAAQ,WACRL,GAAE,UAAK+E,EAAL,iBACF7E,UAAWC,IAJb,wBAQA,cAACJ,EAAA,EAAD,CACE7D,MAAM,YACNmE,QAAQ,WACRL,GAAE,UAAK+E,EAAL,aACF7E,UAAWC,IAJb,gCAQA,cAACJ,EAAA,EAAD,CACEsD,KAAK,gCACLC,OAAO,SACPpH,MAAM,UACNmE,QAAQ,WAJV,qBAQA,cAACN,EAAA,EAAD,CACEsD,KAAK,kCACLC,OAAO,SACPpH,MAAM,UACNmE,QAAQ,WAJV,kCAQA,cAACN,EAAA,EAAD,CACEsD,KAAK,8BACLC,OAAO,SACPpH,MAAM,UACNmE,QAAQ,WAJV,4BClDK4E,GAAc,SAAClH,GAC1B,IAAMsB,EAAUC,KACRyF,EAAQC,cAARD,IACArC,EAAwB3E,EAAxB2E,GAAIwC,EAAoBnH,EAApBmH,OAAQC,EAAYpH,EAAZoH,QAEpB,OACE,eAAClD,EAAA,EAAD,CAAOS,GAAIA,EAAI5C,UAAWT,EAAQmF,MAAlC,UACE,cAAC3C,EAAA,EAAD,CAAYxB,QAAQ,KAApB,SAA0B6E,IAC1B,sBAAKpF,UAAWT,EAAQuF,KAAxB,UACE,qBAAK9E,UAAWT,EAAQ1B,KAAxB,SACGwH,EACE5D,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAE4C,YAChB7B,KAAI,SAAC6C,GACJ,OAAoB,IAAhBA,EAAMlB,MAEN,cAACnE,EAAA,EAAD,CACEM,QAAQ,WACRnE,MAAOkJ,EAAMhB,SAAW,YAAc,UACtClE,UAAWmF,IACXrF,GAAE,UAAK+E,GAAL,OAAWK,EAAMjB,MAJrB,SAOE,sBAAKrE,UAAWT,EAAQqF,cAAxB,UACE,cAAC7C,EAAA,EAAD,UAAauD,EAAM5B,QACnB,cAAC3B,EAAA,EAAD,CAAYxB,QAAQ,UAApB,SAA+B+E,EAAMnB,cAJlCmB,EAAM5B,OAUb,cAACzD,EAAA,EAAD,CACEM,QAAQ,WACRnE,MAAOkJ,EAAMhB,SAAW,YAAc,UACtCf,KAAM+B,EAAMjB,KACZb,OAAO,SAJT,SAOE,sBAAKxD,UAAWT,EAAQqF,cAAxB,UACE,cAAC7C,EAAA,EAAD,UAAauD,EAAM5B,QACnB,cAAC3B,EAAA,EAAD,CAAYxB,QAAQ,UAApB,SAA+B+E,EAAMnB,cAJlCmB,EAAM5B,YAWvB,qBAAK1D,UAAWT,EAAQ1B,KAAxB,SACGwH,EACE5D,QAAO,SAACC,GAAD,OAAsB,IAAfA,EAAE4C,YAChB7B,KAAI,SAAC6C,GACJ,OAAoB,IAAhBA,EAAMlB,MAEN,cAACnE,EAAA,EAAD,CACEM,QAAQ,WACRnE,MAAOkJ,EAAMhB,SAAW,YAAc,UACtClE,UAAWmF,IACXrF,GAAE,UAAK+E,GAAL,OAAWK,EAAMjB,MAJrB,SAOE,sBAAKrE,UAAWT,EAAQqF,cAAxB,UACE,cAAC7C,EAAA,EAAD,UAAauD,EAAM5B,QACnB,cAAC3B,EAAA,EAAD,CAAYxB,QAAQ,UAApB,SAA+B+E,EAAMnB,cAJlCmB,EAAM5B,OAUb,cAACzD,EAAA,EAAD,CACEM,QAAQ,WACRnE,MAAOkJ,EAAMhB,SAAW,YAAc,UACtCf,KAAM+B,EAAMjB,KACZb,OAAO,SAJT,SAOE,sBAAKxD,UAAWT,EAAQqF,cAAxB,UACE,cAAC7C,EAAA,EAAD,UAAauD,EAAM5B,QACnB,cAAC3B,EAAA,EAAD,CAAYxB,QAAQ,UAApB,SAA+B+E,EAAMnB,cAJlCmB,EAAM5B,mBC3EzBlE,GAAYhD,aAAW,SAACC,GAAD,MAAY,CACvC2I,OAAQ,CACN9H,UAAW,UAEboH,MAAO,CACLpH,UAAW,SACXZ,MAAO,MACPgE,OAAQ,OACR9D,QAAS,EACT+H,cAAe,GACflH,aAAc,GAEhBmH,cAAe,CACbjI,QAAS,OACTkI,cAAe,UAEjB9I,UAAW,CACTK,MAAOK,EAAMb,QAAQG,UAAUD,UAItB0J,GAAc,WACzB,IAAMjG,EAAUC,KAChB,OACE,qCACE,cAACuC,EAAA,EAAD,CAAYxB,QAAQ,KAAKP,UAAWT,EAAQ6F,OAA5C,8BAGA,cAAC,GAAD,IACA,cAACjD,EAAA,EAAD,CAAOnC,UAAWT,EAAQmF,MAA1B,SACE,eAAC3C,EAAA,EAAD,CAAYxB,QAAQ,YAApB,oCAC0B,IACxB,sBAAMP,UAAWT,EAAQxD,UAAzB,4BAFF,4FAOF,cAAC,GAAD,CACE6G,GAAG,SAEHwC,OAAO,SACPC,QAASd,IAFL,UAIN,cAAC,GAAD,CAAa3B,GAAG,QAAoBwC,OAAO,QAAQC,QAASb,IAAhC,SAC5B,cAAC,GAAD,CACE5B,GAAG,OAEHwC,OAAO,gBACPC,QAASnB,GAFL,YC3CNuB,GAAaC,gBAAK,kBAAM,uDAExBlG,GAAYhD,YAAW,CAC3BL,KAAM,CACJW,OAAQ,UAIC6I,GAAoB,WAC/B,IAAMpG,EAAUC,KACRoG,EAASV,cAATU,KAER,OACE,qBAAK5F,UAAWT,EAAQpD,KAAxB,SACE,cAAC,WAAD,CAAU0J,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvF,OAAK,EAACsF,KAAMA,EAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,gBAAX,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,aAAX,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,iBAAX,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,aAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WAAX,SACE,cAACH,GAAD,MAEF,cAAC,IAAD,CAAOG,KAAI,UAAKA,EAAL,YAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,SAAX,SACE,cAAC,EAAD,CAAa1I,IAAI,mBAEnB,cAAC,IAAD,CAAO0I,KAAI,UAAKA,EAAL,eAAX,SACE,cAAC,EAAD,CAAa1I,IAAI,kBAEnB,cAAC,IAAD,CAAO0I,KAAI,UAAKA,EAAL,QAAX,SACE,cAAC,EAAD,CAAa1I,IAAI,UAEnB,cAAC,IAAD,CAAO0I,KAAI,UAAKA,EAAL,cAAX,SACE,cAAC,EAAD,CAAa1I,IAAI,gBAEnB,cAAC,IAAD,CAAO0I,KAAI,UAAKA,EAAL,aAAX,SACE,cAAC,EAAD,CAAa1I,IAAI,eAEnB,cAAC,IAAD,CAAO0I,KAAK,IAAZ,SACE,cAAC,IAAD,cC5DCE,GAAY,WACvB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,KAAK,IAAI7F,GAAG,QAAQI,OAAK,IACnC,cAAC,IAAD,CAAOsF,KAAK,QAAQtF,OAAK,EAAzB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOsF,KAAK,QAAZ,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,UCRFI,I,OAA0B,SAAC1H,GAC/B,IAAM+F,EAAO,IAAI4B,WAAS,CACxBC,IAAI,iDAAD,OAAmD5H,EAAIA,IAAIsE,GAA3D,YAEHuD,MAAM,SAAD,sGAAC,CAAD,uCAAE,WAAOD,EAAKE,GAAZ,SAAAzH,EAAA,yDACAL,EAAIG,YADJ,sBAEG,IAAIY,MAAJ,4CAFH,uBAKCf,EAAIG,YAAY4H,oBALjB,cAMLD,EAASE,QAAU,IAAIC,QAAQ,CAC7BC,cAAc,UAAD,OAAYlI,EAAIG,YAAYgI,eAPtC,kBASEN,MAAMD,EAAKE,IATb,2CAAF,2DAaDM,EAAQ,IAAIC,gBAElB,OAAO,IAAIC,eAAa,CAAEvC,OAAMqC,YAGrBG,GAAsB,SAAC5I,GAClC,IAAMK,EAAMa,IAD+D,EAE/Cf,mBAAS4H,GAAwB1H,IAFc,mBAEpEwI,EAFoE,KAE5DC,EAF4D,KAM3E,OAHAvI,qBAAU,WACRuI,EAAUf,GAAwB1H,MACjC,CAACA,IACG,cAAC,iBAAD,CAAgBwI,OAAQA,EAAxB,SAAiC7I,EAAME,Y,UCFjC6I,OAtBf,WACE,IAAMC,EAAUC,YAAqB,CAAEC,SAAUC,iBAEjD,OACE,cAAC,EAAD,CAAkBlJ,MANE,YAMpB,SACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAkBmJ,SAAU,EAA5B,SACE,eAACC,EAAA,EAAD,CAAe7K,MAAOf,EAAtB,UACE,cAAC6L,EAAA,EAAD,IACA,qBAAKvH,UAAU,UAAf,SACE,eAAC,IAAD,CAAQiH,QAASA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,mBCZDO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9H,MAAK,YAAkD,IAA/C+H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,aAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M,6MCdMhI,G,kBCIYhD,YAAW,CAC3BL,KAAM,CACJW,OAAQ,QAEVsI,OAAQ,CACN9H,UAAW,UAEboH,MAAO,CACLpH,UAAW,SACXZ,MAAO,MACPgE,OAAQ,OACR9D,QAAS,EACT+H,cAAe,GACflH,aAAc,GAEhB2K,MAAO,CACLC,OAAQ,kBACRC,aAAc,GACd5H,OAAQ,GAEV6H,QAAS,CACP5L,QAAS,OACT6L,oBAAqB,WAEvB,6BAA8B,CAC5BD,QAAS,CACPC,oBAAqB,MACrBzD,iBAAkB,cD/BNvI,YAAW,CAC3BL,KAAM,GACNiJ,OAAQ,CACN9H,UAAW,UAEboH,MAAO,CACLpH,UAAW,SACXZ,MAAO,MACPgE,OAAQ,OACR9D,QAAS,EACT+H,cAAe,GACflH,aAAc,GAEhBgL,MAAO,CACL9L,QAAS,OACTkI,cAAe,SACfvH,UAAW,SACX+K,OAAQ,kBACRC,aAAc,GACd5L,MAAO,IACPgE,OAAQ,OACRjD,aAAc,IAEhBiL,QAAS,CACPC,WAAY,8CAEdC,SAAU,CACR/K,KAAM,OAERgL,MAAO,CACLnM,MAAO,OACPE,QAAS,MAIAkM,EAAO,WAClB,IAAMvJ,EAAUC,IAChB,OACE,sBAAKQ,UAAWT,EAAQpD,KAAxB,UACE,cAAC4F,EAAA,EAAD,CAAYxB,QAAQ,KAAKP,UAAWT,EAAQ6F,OAA5C,wCAGA,eAACjD,EAAA,EAAD,CAAOnC,UAAWT,EAAQmF,MAA1B,UACE,sBAAK1E,UAAWT,EAAQkJ,MAAxB,UACE,cAAC1G,EAAA,EAAD,CAAY/B,UAAWT,EAAQmJ,QAASnI,QAAQ,KAAhD,iCAGA,cAACwB,EAAA,EAAD,CAAYxB,QAAQ,YAAYP,UAAWT,EAAQqJ,SAAnD,+CAIF,cAAC7G,EAAA,EAAD,0vBAaA,wBACEgH,UAAQ,EACR/I,UAAWT,EAAQsJ,MACnBG,OAAO,2DAHT,UAKE,wBACElF,IAAI,6DACJ9H,KAAK,cAPT,uD,0BEzDFwD,EAAYhD,YAAW,CAC3BL,KAAM,CACJW,OAAQ,QAEVsI,OAAQ,CACN9H,UAAW,UAEboH,MAAO,CACLpH,UAAW,SACXZ,MAAO,MACPgE,OAAQ,OACR9D,QAAS,EACT+H,cAAe,GACflH,aAAc,GAEhBwL,OAAQ,CACNvM,MAAO,OACPI,OAAQ,QAEVoM,KAAM,CACJvM,QAAS,OACTwM,aAAc,iBAEhBC,MAAO,CACL9L,UAAW,SAEb+L,KAAM,CACJ/L,UAAW,UAIFgM,EAAO,WAClB,IAAM/J,EAAUC,IACV+J,EAAaC,YAAc,qBACjC,OACE,sBAAKxJ,UAAWT,EAAQpD,KAAxB,UACE,cAAC4F,EAAA,EAAD,CAAYxB,QAAQ,KAAKP,UAAWT,EAAQ6F,OAA5C,sBAGA,eAACjD,EAAA,EAAD,CAAOnC,UAAWT,EAAQmF,MAA1B,UACE,eAAC3C,EAAA,EAAD,2CACgC,IAC9B,cAACwD,EAAA,EAAD,CAAMrF,GAAG,SAASsD,OAAO,SAASpD,UAAWC,IAA7C,wBAFF,OAOCkJ,EACC,cAACxH,EAAA,EAAD,8CAEA,eAACA,EAAA,EAAD,kCACuB,IACrB,cAACwD,EAAA,EAAD,CACEhC,KAAK,kHACLC,OAAO,SAFT,8BASJ,eAACzB,EAAA,EAAD,8BACmB,IACjB,cAACwD,EAAA,EAAD,CAAMhC,KAAK,gCAAgCC,OAAO,SAAlD,wBAKF,cAACzB,EAAA,EAAD,iGAIA,eAACA,EAAA,EAAD,mCACwB,IACtB,cAACwD,EAAA,EAAD,CAAMhC,KAAK,kCAAkCC,OAAO,SAApD,+BAID+F,GACC,wBACEvJ,UAAWT,EAAQ0J,OACnBvF,MAAM,uBACNd,GAAG,oBACHkB,IAAI,oHAJN,kCCxFK,MAA0B,sCCGnCtE,EAAYhD,YAAW,CAC3BiN,UAAW,CACTnM,UAAW,YAIFoM,EAAU,WACrB,IAAMnK,EAAUC,IAChB,OACE,sBAAKQ,UAAWT,EAAQkK,UAAxB,UACE,yCACA,qBAAK7G,GAAG,aAAalG,MAAM,MAAMqH,IAAI,UAAUD,IAAK5G,QCd3C,MAA0B,gCCInCsC,EAAYhD,YAAW,CAC3BL,KAAM,CACJmB,UAAW,SACXoD,OAAQ,EACR5D,OAAQ,QAEVI,IAAK,CACHuD,SAAU,OACV3D,OAAQ,QAEV4H,MAAO,CACLhI,MAAO,MACPgE,OAAQ,UAICiJ,EAAW,WACtB,IAAMpK,EAAUC,IAChB,OACE,qBAAKQ,UAAWT,EAAQpD,KAAxB,SACE,eAACgG,EAAA,EAAD,CAAOnC,UAAWT,EAAQmF,MAA1B,UACE,cAAC3C,EAAA,EAAD,CAAYxB,QAAQ,KAApB,gCACA,eAACwB,EAAA,EAAD,CAAYxB,QAAQ,YAApB,gEACsD,IACpD,cAACgF,EAAA,EAAD,CAAMrF,GAAG,QAAQE,UAAWC,IAA5B,kBAFF,OAOA,qBAAKL,UAAWT,EAAQrC,IAAK6G,IAAI,YAAYD,IAAK8F,W,gCCjC1D,kCAKO,IAAM9H,EAAY,SAAuB+H,EAAYC,GAC1D,IACE,OAAOD,EAAME,KAAKC,EAASF,IAC3B,SACA,OAAOD,IAoBLG,EAAW,SAAuBF,GACtC,OAAO,SAACnL,EAAMsL,GACZ,OAAItL,EAAEmL,GAAQG,EAAEH,GACP,EACEnL,EAAEmL,GAAQG,EAAEH,IACb,EAEH,K,kIC3BLtK,EAAYhD,YAAW,CAC3B4I,OAAQ,CACN9H,UAAW,UAEb4M,OAAQ,CACN7B,OAAQ,kBACRC,aAAc,GACd5H,OAAQ,OACRhE,MAAO,OAGEyN,EAAc,WACzB,IAAM5K,EAAUC,IAChB,OACE,gCACE,cAAC,IAAD,CAAYe,QAAQ,KAAKP,UAAWT,EAAQ6F,OAA5C,oBAGA,cAAC,IAAD,CAAOpF,UAAWT,EAAQ2K,OAA1B,SACE,cAAC,IAAD,UACGA,EAAOzH,KAAI,SAAC2H,EAAcC,GAAf,OACV,cAAC,IAAD,UACE,cAAC,IAAD,CAAcxO,QAAO,UAAKuO,MADbC,cAUrBH,EAAS,CACb,gCACA,8BACA,eACA,wBACA,6BACA,uBACA,uBACA,kBACA,gCACA,mCACA,4BACA,sBACA,qBACA,QACA,cACA,kB,kIC/CI1K,EAAYhD,YAAW,CAC3BL,KAAM,GACNiJ,OAAQ,CACN9H,UAAW,UAEbgN,KAAM,CACJjC,OAAQ,kBACRC,aAAc,GACd5H,OAAQ,OACRhE,MAAO,OAGE6N,EAAU,WACrB,IAAMhL,EAAUC,IAChB,OACE,gCACE,cAAC,IAAD,CAAYe,QAAQ,KAAKP,UAAWT,EAAQ6F,OAA5C,0BAGA,cAAC,IAAD,CAAOpF,UAAWT,EAAQ+K,KAA1B,SACE,cAAC,IAAD,UACGE,EAAG/H,KAAI,SAAC2H,EAAcC,GAAf,OACN,cAAC,IAAD,UACE,cAAC,IAAD,CAAcxO,QAAO,UAAKuO,MADbC,cAUrBG,EAAK,CACT,YACA,qBACA,WACA,SACA,gBACA,gBACA,aACA,aACA,UACA,mBACA,iBACA,aACA,OACA,UACA,gBACA,Y,kIChDIhL,EAAYhD,YAAW,CAC3B4I,OAAQ,CACN9H,UAAW,UAEbnB,KAAM,CACJQ,QAAS,OACT6L,oBAAqB,UACrBzD,iBAAkB,QAEpBqD,MAAO,CACLC,OAAQ,kBACRC,aAAc,GACd5H,OAAQ,GAEV+J,aAAc,CACZC,WAAY,QACZrC,OAAQ,kBACRC,aAAc,GACd5H,OAAQ,GAEV,6BAA8B,CAC5BvE,KAAM,CACJqM,oBAAqB,MACrBzD,iBAAkB,QAEpB0F,aAAc,CACZC,WAAY,MAKLC,EAAa,WACxB,IAAMpL,EAAUC,IAChB,OACE,sBAAKQ,UAAWT,EAAQ6F,OAAxB,UACE,cAAC,IAAD,CAAY7E,QAAQ,KAApB,mBACA,eAAC,IAAD,CAAOP,UAAWT,EAAQpD,KAA1B,UACE,sBAAK6D,UAAWT,EAAQ6I,MAAxB,UACE,cAAC,IAAD,CAAY7H,QAAQ,KAApB,qBACA,cAAC,IAAD,UACGqK,EAAanI,KAAI,SAAC2H,EAAcS,GAAf,OAChB,cAAC,IAAD,UACE,cAAC,IAAD,CAAchP,QAAO,UAAKgP,EAAQ,EAAb,aAAmBT,MAD3BS,WAMrB,sBAAK7K,UAAWT,EAAQ6I,MAAxB,UACE,cAAC,IAAD,CAAY7H,QAAQ,KAApB,4BACA,cAAC,IAAD,UACGuK,EAAYrI,KAAI,SAAC2H,EAAcS,GAAf,OACf,cAAC,IAAD,UACE,cAAC,IAAD,CAAchP,QAAO,UAAKgP,EAAQ,EAAb,aAAmBT,MAD3BS,WAMrB,qBAAK7K,UAAWT,EAAQkL,aAAxB,SACE,cAAC,IAAD,yRAYJG,EAAe,CACnB,gBACA,YACA,mBACA,oBACA,gBACA,wBACA,iCACA,uDAGIE,EAAc,CAClB,+CACA,uFACA,uFACA,sIACA,qMACA,qG","file":"static/js/main.f8244109.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f07b05',\n    },\n    secondary: {\n      main: '#00B3F7',\n    },\n    type: 'dark',\n  },\n});\n\ndarkTheme.overrides = {\n  MuiLink: {\n    root: {\n      color: darkTheme.palette.primary.main,\n    },\n  },\n  MuiButton: {\n    root: {\n      textTransform: 'initial',\n    },\n  },\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst navbarStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    padding: '5px 10px',\n    backgroundColor: '#333',\n    height: 'auto',\n    minHeight: 'auto',\n    justifyContent: 'initial',\n    zIndex: 1500,\n  },\n  img: {\n    height: 'auto',\n    width: '55px',\n    float: 'left',\n    display: 'block',\n    marginRight: '1em',\n  },\n  navLink: {\n    backgroundColor: 'transparent',\n    color: '#f2f2f2',\n    textAlign: 'center',\n    textDecoration: 'none',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginLeft: '0.5em',\n    textTransform: 'initial',\n  },\n  active: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n  filler: {\n    flex: '1 0',\n  },\n}));\n\nexport default navbarStyles;\n","import { createContext, useEffect, useState } from 'react';\nimport * as Realm from 'realm-web';\n\nexport interface IRealmContext {\n  currentUser: Realm.User<globalThis.Realm.DefaultFunctionsFactory, any> | null;\n  logInAnon: () => Promise<void>;\n  logOut: () => Promise<void>;\n  app: Realm.App;\n}\n\nexport const RealmAppContext = createContext<IRealmContext | null>(null);\n\nexport const RealmAppProvider = (props: {\n  appId: string;\n  children: React.ReactNode;\n}) => {\n  const { appId, children } = props;\n  const [app, setApp] = useState(new Realm.App(appId));\n  useEffect(() => {\n    setApp(new Realm.App(appId));\n  }, [appId]);\n\n  // Wrap the Realm.App object's user state with React state\n  const [currentUser, setCurrentUser] = useState(app.currentUser);\n  async function logInAnon() {\n    await app.logIn(Realm.Credentials.anonymous());\n    // If successful, app.currentUser is the user that just logged in\n    setCurrentUser(app.currentUser);\n  }\n  async function logOut() {\n    // Log out the currently active user\n    await app.currentUser?.logOut();\n    // If another user was logged in too, they're now the current user.\n    // Otherwise, app.currentUser is null.\n    setCurrentUser(app.currentUser);\n  }\n  const wrapped = { app, currentUser, logInAnon, logOut };\n  return (\n    <RealmAppContext.Provider value={wrapped}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { RealmAppContext } from '../providers/realmAppProvider';\n\nexport const useRealmApp = () => {\n  const app = useContext(RealmAppContext);\n  if (!app) {\n    throw new Error(\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\n    );\n  }\n  return app;\n};\n","import { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport useStyles from './navbar.styles';\nimport { useRealmApp } from './hooks/useRealmApp';\n\nexport const NavbarComponent = () => {\n  const classes = useStyles();\n  const realm = useRealmApp();\n\n  useEffect(() => {\n    console.log(realm.currentUser);\n    if (realm.currentUser === null) {\n      realm\n        .logInAnon()\n        .then((_) => console.log(realm.currentUser))\n        .catch((reason) => console.log(reason));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <nav className={classes.root}>\n      <Button\n        to=\"/home\"\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        Home\n      </Button>\n      <Button\n        to=\"/information\"\n        exact\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        Information\n      </Button>\n      <Button\n        to=\"/information/Builds\"\n        exact\n        className={classes.navLink}\n        activeClassName={classes.active}\n        component={NavLink}\n      >\n        USC Builds\n      </Button>\n      <div className={classes.filler} />\n      <Button\n        to=\"/join\"\n        color=\"secondary\"\n        variant=\"contained\"\n        component={NavLink}\n      >\n        Join\n      </Button>\n    </nav>\n  );\n};\n","import { gql, useQuery } from '@apollo/client';\nimport { IFleetCarrier } from '../models/fleetCarrier';\n\nexport const useFleetCarriers = () => {\n  const { data, loading, error } = useQuery<{ fleetCarriers: IFleetCarrier[] }>(\n    gql`\n      query AllFleetCarriers {\n        fleetCarriers {\n          id\n          name\n          owner\n          purpose\n        }\n      }\n    `\n  );\n  if (error) {\n    throw new Error(`Failed to fetch carriers: ${error.message}`);\n  }\n  let fleetCarriers = data?.fleetCarriers;\n  return { fleetCarriers, loading };\n};\n","import {\n  Table,\n  Typography,\n  TableContainer,\n  Paper,\n  makeStyles,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n} from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { Loading } from '../../../components';\nimport { useFleetCarriers } from '../../hooks/useFleetCarriers';\nimport { IFleetCarrier } from '../../models/fleetCarrier';\nimport { sortItems } from '../../ship-builds/functions/sort';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n  secondTable: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\nexport const FleetCarriers = () => {\n  const { fleetCarriers, loading } = useFleetCarriers();\n  const [squadCarriers, setSquadCarriers] = useState<IFleetCarrier[]>();\n  const [personalCarriers, setPersonalCarriers] = useState<IFleetCarrier[]>();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n\n    const squadCarriers = fleetCarriers!.filter(\n      (x) => !x.purpose.toLowerCase().includes('personal')\n    );\n    const personalCarriers = fleetCarriers!.filter((x) =>\n      x.purpose.toLowerCase().includes('personal')\n    );\n    setSquadCarriers(sortItems(squadCarriers, 'purpose'));\n    setPersonalCarriers(sortItems(personalCarriers, 'name'));\n  }, [loading, fleetCarriers]);\n\n  return (\n    <div className={classes.table}>\n      <Typography variant=\"h3\">USC Fleet Carriers</Typography>\n      {loading ? <Loading /> : <USCCarriers carriers={squadCarriers} />}\n      <Typography variant=\"h4\">Personal Fleet Carriers of USC</Typography>\n      {loading ? <Loading /> : <PersonalCarriers carriers={personalCarriers} />}\n    </div>\n  );\n};\n\nconst USCCarriers = (props: { carriers: IFleetCarrier[] | undefined }) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Purpose</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.purpose}</TableCell>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst PersonalCarriers = (props: { carriers: IFleetCarrier[] | undefined }) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.secondTable}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import {\n  Button,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\n\nimport reviews from '../../ship-builds/assets/shipMap.json';\nimport { sortItems } from '../../ship-builds/functions/sort';\n\ninterface IShipReview {\n  id: number;\n  name: string;\n  manufacturer: string;\n  shipReview: string;\n}\n\nconst useShipReviews = (): IShipReview[] => {\n  const reviewList = reviews.map((review) => {\n    const id = review.id;\n    const name = review.name;\n    const manufacturer = review.manufacturer;\n    const shipReview = review.shipReview;\n    return { id, name, manufacturer, shipReview };\n  });\n  return sortItems(reviewList, 'name');\n};\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 650,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\nexport const ShipReviews = () => {\n  const classes = useStyles();\n  const shipReviews = useShipReviews();\n  return (\n    <div className={classes.table}>\n      <Typography variant=\"h3\">Ship Reviews</Typography>\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Ship</TableCell>\n              <TableCell>Manufacture</TableCell>\n              <TableCell>Review Link</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {shipReviews.map((review) => (\n              <TableRow key={review.id}>\n                <TableCell>{review.name}</TableCell>\n                <TableCell>{review.manufacturer}</TableCell>\n                <TableCell>\n                  <Button\n                    href={review.shipReview}\n                    target=\"_blank\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    Pilot Review\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import CaveJohnson from '../../assets/Cave Johnson.png';\nimport StationMap from '../../assets/ED station landing pad map.png';\nimport FSS from '../../assets/FSS-1.jpg';\nimport Scoopable from '../../assets/KBGFoam.jpg';\nimport Coriolis from '../../assets/Entrance_on_a_Coriolis_Dock.png';\n\nexport const infoGraphics = [\n  {\n    id: 'cave-johnson',\n    title: 'Cave Johnson',\n    img: CaveJohnson,\n  },\n  {\n    id: 'station-map',\n    title: 'Station Map',\n    img: StationMap,\n  },\n  {\n    id: 'fss',\n    title: 'Full Spectrum Scanner',\n    img: FSS,\n  },\n  {\n    id: 'scoopable',\n    title: 'Scoopable Stars',\n    img: Scoopable,\n  },\n  {\n    id: 'coriolis',\n    title: 'Find the Coriolis Slot',\n    img: Coriolis,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/Cave Johnson.fe248e5c.png\";","export default __webpack_public_path__ + \"static/media/ED station landing pad map.c39883eb.png\";","export default __webpack_public_path__ + \"static/media/FSS-1.44358e85.jpg\";","export default __webpack_public_path__ + \"static/media/KBGFoam.37494026.jpg\";","export default __webpack_public_path__ + \"static/media/Entrance_on_a_Coriolis_Dock.818c3184.png\";","import { makeStyles, Typography } from '@material-ui/core';\n\nimport { infoGraphics } from './infographic-list';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n  },\n});\n\nexport const Infographic = (props: { img: string }) => {\n  const infographic = useInfographic(props.img);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {infographic ? (\n        <>\n          <Typography variant=\"h3\">{infographic.title}</Typography>\n          <img src={infographic.img} alt={infographic.title} />\n        </>\n      ) : (\n        <Typography>Image not found</Typography>\n      )}\n    </div>\n  );\n};\n\nconst useInfographic = (imgID: string) => {\n  return infoGraphics.find((x) => x.id === imgID);\n};\n","import { IInfoButton } from '../../models/infoButtonModel';\n\nexport const docsList: IInfoButton[] = [\n  {\n    title: 'Station Landing Map',\n    caption: 'Infographic',\n    local: true,\n    link: '/stationmap',\n    beginner: true,\n  },\n  {\n    title: 'Full Spectrum Scanner',\n    caption: 'Spectrum image',\n    local: true,\n    link: '/fss',\n    beginner: true,\n  },\n  {\n    title: 'Scoopable Stars',\n    caption: 'Infographic',\n    local: true,\n    link: '/scoopable',\n    beginner: true,\n  },\n  {\n    title: 'Find the Slot - Coriolis',\n    caption: 'Infographic',\n    local: true,\n    link: '/coriolis',\n    beginner: true,\n  },\n  {\n    title: 'Anti-Thargoid Flight Manual',\n    caption: 'Created by Aterius',\n    local: false,\n    link:\n      'https://docs.google.com/document/d/1loy4TRNhM07Azf_ib01OIurujTcNX-L1Y1NYFy59i4M/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Supercruise Ship Handling',\n    caption: 'Created by CMDR marx',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1cWCUSxvliZ3ly-RRulUeYqZ3hqOyCSRLze0KS1QBiBY/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Database',\n    caption: 'Created by Qohen Leth',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1wTmKrzLCXRIdHwKHaN-gXHq6YkS_JAnJKsyQp8P-j0Y/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Material Locator',\n    caption: 'Created by DTEA',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1Mp7l0bSnMp_G7xWUm75M-XuihDfTdi27rm-vB9K8AX0/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'BGS Influence Caps',\n    caption: 'Created by Jane Turner',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/influence-caps-gains-and-the-wine-analogy.423837/',\n    beginner: false,\n  },\n  {\n    title: 'Resistance Stacking Explained',\n    caption: 'Created by Fett_Li',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/this-is-how-resistance-stacking-works.439830/',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from '../../models/infoButtonModel';\n\nexport const guidesList: IInfoButton[] = [\n  {\n    title: 'New Player Guide',\n    caption: 'Created by Pixel Bandits',\n    local: false,\n    link:\n      'https://www.pixelbandits.org/2020/04/elite-dangerous-beginners-guide/',\n    beginner: true,\n  },\n  {\n    title: 'USC Ship Builds List',\n    caption: 'Compiled by Admiralfeb',\n    local: true,\n    link: '/builds',\n    beginner: true,\n  },\n  {\n    title: 'How to Explore',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/exploration',\n    beginner: true,\n  },\n  {\n    title: 'How to Mine',\n    caption: 'Created by LocNor',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/4wmgja/general_mining_guide_20/',\n    beginner: true,\n  },\n  {\n    title: 'Ship Reviews',\n    caption: 'Compiled by Admiralfeb',\n    local: true,\n    link: '/reviews',\n    beginner: true,\n  },\n  {\n    title: 'Cave Johnson',\n    caption: 'Compiled by IM2D',\n    local: true,\n    link: '/cave',\n    beginner: false,\n  },\n  {\n    title: 'How to Unlock Engineers',\n    caption: \"Fox's Guide\",\n    local: false,\n    link:\n      'https://munkjensen.net/wiki/index.php?title=Fox%27s_step-by-step_Guide_to_Unlocking_Engineers_Quickly',\n    beginner: false,\n  },\n  {\n    title: 'How to unlock Guardian',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/guardian-modules',\n    beginner: false,\n  },\n  {\n    title: 'How to Grind Imperial and Federal Rank',\n    caption: 'Reddit',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/g9y56s/psa_grind_how_to_get_federation_empire_rank_in_12/',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from '../../models/infoButtonModel';\n\nexport const toolsList: IInfoButton[] = [\n  {\n    title: 'Ship Builder',\n    caption: 'Coriolis',\n    local: false,\n    link: 'https://coriolis.io/',\n    beginner: true,\n  },\n  {\n    title: 'Inara Companion App',\n    caption: 'Helpful 3rd party tool',\n    local: false,\n    link: 'https://inara.cz/',\n    beginner: true,\n  },\n  {\n    title: \"Miner's Tool\",\n    caption: 'Created by CMDR VicTic',\n    local: false,\n    link: 'https://edtools.cc/miner',\n    beginner: true,\n  },\n  {\n    title: 'Ship Anatomy',\n    caption: 'a.teall.info',\n    local: false,\n    link: 'http://a.teall.info/edsa/',\n    beginner: true,\n  },\n  {\n    title: 'Massacre Mission Tracker',\n    caption: 'Created by CMDR Clever Ape',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1K0Su9HS9i43gx_RxLBR9NdwUI7iMhibKxwbaWf39WpQ/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Material Finder',\n    caption: 'EDTutorials',\n    local: false,\n    link: 'https://www.edtutorials.com/material-finder/',\n    beginner: false,\n  },\n  {\n    title: 'Neutron Star Plotter',\n    caption: 'Created by Gareth Harper',\n    local: false,\n    link: 'https://www.spansh.co.uk/plotter',\n    beginner: false,\n  },\n  {\n    title: 'The Hurt Highway',\n    caption: 'Created by EXO',\n    local: false,\n    link:\n      'https://www.edsm.net/en/galactic-routes/show/id/291/name/The+Hurt+Highway',\n    beginner: false,\n  },\n  {\n    title: 'EDDB Companion App',\n    caption: 'Alternative to Inara',\n    local: false,\n    link: 'https://eddb.io/',\n    beginner: false,\n  },\n  {\n    title: 'Elite Dangerous Star Map',\n    caption: '(EDSM)',\n    local: false,\n    link: 'https://www.edsm.net/',\n    beginner: false,\n  },\n  {\n    title: 'Fleet Carrier Calculator',\n    caption: `Commander's Toolbox`,\n    local: false,\n    link: 'https://cmdrs-toolbox.com/fleet-carrier-calculator',\n    beginner: false,\n  },\n];\n","import { makeStyles } from '@material-ui/core';\n\nconst infoStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flex: {\n    '& button': {\n      margin: 5,\n    },\n    '& a': {\n      margin: 5,\n    },\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport default infoStyles;\n","import { Button, Paper, Typography } from '@material-ui/core';\n\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport useStyles from '../infoStyles';\n\nexport const InfoUSCLinks = () => {\n  const classes = useStyles();\n  const { url } = useRouteMatch();\n\n  return (\n    <Paper id=\"usc-links\" className={classes.paper}>\n      <Typography variant=\"h4\">USC Links</Typography>\n      <div className={classes.flex}>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          to={`${url}/about/rules`}\n          component={NavLink}\n        >\n          Rules\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          to={`${url}/about/hc`}\n          component={NavLink}\n        >\n          Our Management\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          to={`${url}/about/allies`}\n          component={NavLink}\n        >\n          Our Allies\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          to={`${url}/about/fc`}\n          component={NavLink}\n        >\n          Our Fleet Carriers\n        </Button>\n        <Button\n          href=\"https://discord.gg/br8Fy2M6cv\"\n          target=\"_blank\"\n          color=\"primary\"\n          variant=\"outlined\"\n        >\n          Discord\n        </Button>\n        <Button\n          href=\"https://inara.cz/squadron/7028/\"\n          target=\"_blank\"\n          color=\"primary\"\n          variant=\"outlined\"\n        >\n          Inara - USC Squadron\n        </Button>\n        <Button\n          href=\"https://www.patreon.com/usc\"\n          target=\"_blank\"\n          color=\"primary\"\n          variant=\"outlined\"\n        >\n          Patreon\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n","import { Button, Paper, Typography } from '@material-ui/core';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { IInfoButton } from '../models/infoButtonModel';\nimport useStyles from '../infoStyles';\n\ninterface ISectionProps {\n  id: string;\n  header: string;\n  buttons: IInfoButton[];\n}\n\nexport const InfoSection = (props: ISectionProps) => {\n  const classes = useStyles();\n  const { url } = useRouteMatch();\n  const { id, header, buttons } = props;\n\n  return (\n    <Paper id={id} className={classes.paper}>\n      <Typography variant=\"h4\">{header}</Typography>\n      <div className={classes.grid}>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === true)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === false)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { docsList } from './components/docs/info-docs-list';\nimport { guidesList } from './components/guides/info-guides-list';\nimport { toolsList } from './components/tools/info-tools-list';\nimport { Typography, Paper } from '@material-ui/core';\nimport { InfoUSCLinks } from './components/info-usclinks';\nimport { InfoSection } from './components/info-section';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport const Information = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h2\" className={classes.header}>\n        USC Data Archive\n      </Typography>\n      <InfoUSCLinks />\n      <Paper className={classes.paper}>\n        <Typography variant=\"subtitle1\">\n          New Players look to the{' '}\n          <span className={classes.secondary}> blue buttons </span>for helpful\n          tips in getting started with the Guides, Tools, and Documentation\n          below.\n        </Typography>\n      </Paper>\n      <InfoSection\n        id=\"guides\"\n        key=\"guides\"\n        header=\"Guides\"\n        buttons={guidesList}\n      />\n      <InfoSection id=\"tools\" key=\"tools\" header=\"Tools\" buttons={toolsList} />\n      <InfoSection\n        id=\"docs\"\n        key=\"docs\"\n        header=\"Documentation\"\n        buttons={docsList}\n      />\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { lazy, Suspense } from 'react';\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\nimport { Loading, NotFound } from '../components';\nimport { AboutAllies } from './components/about/about-allies';\nimport { AboutHC } from './components/about/about-hc';\nimport { AboutRules } from './components/about/about-rules';\nimport { FleetCarriers } from './components/about/fleetCarriers';\nimport { ShipReviews } from './components/guides/shipReviews';\nimport { Infographic } from './components/docs/infographic';\nimport { Information } from './information';\nconst ShipBuilds = lazy(() => import('./components/guides/shipBuilds'));\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n});\n\nexport const InformationRoutes = () => {\n  const classes = useStyles();\n  const { path } = useRouteMatch();\n\n  return (\n    <div className={classes.root}>\n      <Suspense fallback={<Loading />}>\n        <Switch>\n          <Route exact path={path}>\n            <Information />\n          </Route>\n          <Route path={`${path}/about/rules`}>\n            <AboutRules />\n          </Route>\n          <Route path={`${path}/about/hc`}>\n            <AboutHC />\n          </Route>\n          <Route path={`${path}/about/allies`}>\n            <AboutAllies />\n          </Route>\n          <Route path={`${path}/about/fc`}>\n            <FleetCarriers />\n          </Route>\n          <Route path={`${path}/builds`}>\n            <ShipBuilds />\n          </Route>\n          <Route path={`${path}/reviews`}>\n            <ShipReviews />\n          </Route>\n          <Route path={`${path}/cave`}>\n            <Infographic img=\"cave-johnson\" />\n          </Route>\n          <Route path={`${path}/stationmap`}>\n            <Infographic img=\"station-map\" />\n          </Route>\n          <Route path={`${path}/fss`}>\n            <Infographic img=\"fss\" />\n          </Route>\n          <Route path={`${path}/scoopable`}>\n            <Infographic img=\"scoopable\" />\n          </Route>\n          <Route path={`${path}/coriolis`}>\n            <Infographic img=\"coriolis\" />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Home, Join, NotFound } from './components';\nimport { InformationRoutes } from './information/information.routes';\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Redirect from=\"/\" to=\"/home\" exact />\n      <Route path=\"/home\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/join\">\n        <Join />\n      </Route>\n      <Route path=\"/information\">\n        <InformationRoutes />\n      </Route>\n      <Route path=\"*\">\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useRealmApp } from '../hooks/useRealmApp';\nimport { IRealmContext } from './realmAppProvider';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\n\nconst createRealmApolloClient = (app: IRealmContext) => {\n  const link = new HttpLink({\n    uri: `https://realm.mongodb.com/api/client/v2.0/app/${app.app.id}/graphql`,\n    // A custom fetch handler adds the logged in user's access token to GraphQL requests\n    fetch: async (uri, options) => {\n      if (!app.currentUser) {\n        throw new Error(`Must be logged in to use the GraphQL API`);\n      }\n      // Refreshing a user's custom data also refreshes their access token\n      await app.currentUser.refreshCustomData();\n      options!.headers = new Headers({\n        Authorization: `Bearer ${app.currentUser.accessToken}`,\n      });\n      return fetch(uri, options);\n    },\n  });\n\n  const cache = new InMemoryCache();\n\n  return new ApolloClient({ link, cache });\n};\n\nexport const RealmApolloProvider = (props: { children: React.ReactNode }) => {\n  const app = useRealmApp();\n  const [client, setClient] = useState(createRealmApolloClient(app));\n  useEffect(() => {\n    setClient(createRealmApolloClient(app));\n  }, [app]);\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n};\n","import { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { darkTheme } from './theme';\nimport { createBrowserHistory } from 'history';\n\nimport { Router } from 'react-router-dom';\nimport { NavbarComponent } from './navbar';\nimport { AppRoutes } from './app.routes';\nimport './app.css';\nimport { RealmAppProvider } from './providers/realmAppProvider';\nimport { RealmApolloProvider } from './providers/realmApolloProvider';\nimport { SnackbarProvider } from 'notistack';\n\nconst realmID: string = 'usc-tbmbi';\n\nfunction App() {\n  const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\n  return (\n    <RealmAppProvider appId={realmID}>\n      <RealmApolloProvider>\n        <SnackbarProvider maxSnack={3}>\n          <ThemeProvider theme={darkTheme}>\n            <CssBaseline />\n            <div className=\"content\">\n              <Router history={history}>\n                <NavbarComponent />\n                <AppRoutes />\n              </Router>\n            </div>\n          </ThemeProvider>\n        </SnackbarProvider>\n      </RealmApolloProvider>\n    </RealmAppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport './index.css';\nimport App from './app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { makeStyles, Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  latin: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    border: '1px solid white',\n    borderRadius: 10,\n    width: 300,\n    margin: 'auto',\n    marginBottom: 10,\n  },\n  cursive: {\n    fontFamily: 'Brush Script MT, Brush Script Std, cursive',\n  },\n  subtitle: {\n    flex: '0 0',\n  },\n  video: {\n    width: '100%',\n    padding: 0,\n  },\n});\n\nexport const Home = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        United Systems Cooperative\n      </Typography>\n      <Paper className={classes.paper}>\n        <div className={classes.latin}>\n          <Typography className={classes.cursive} variant=\"h4\">\n            Ad Astra Per Aspera\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.subtitle}>\n            Through Hardships to the Stars\n          </Typography>\n        </div>\n        <Typography>\n          Established in 3306, the United Systems Cooperative is a tight-knit\n          organization of independent pilots operating across the galaxy, both\n          in human space, and the uncharted sectors beyond. Little is known\n          about this groups motives and plans, though many conflicting reports\n          are offered by systems across inhabited space. The one thing the\n          reports agree on is that members of this group are fiercely loyal to\n          one another, and to the organization as a whole. The United Systems\n          Cooperative seeks to create a family where everyone is welcome, no\n          matter their background, their allegiances, etc. To create a family\n          where everyone can get the help they need, make lasting friendships,\n          and have new brothers and sisters to fly with them through the black!\n        </Typography>\n        <video\n          controls\n          className={classes.video}\n          poster=\"https://dl.dropbox.com/s/nws07775923ta6z/vidImg.png?dl=0\"\n        >\n          <source\n            src=\"https://dl.dropbox.com/s/h0n88hy5pgtf06n/about_us.mp4?dl=0\"\n            type=\"video/mp4\"\n          />\n          \"Your browser does not support this video\"\n        </video>\n      </Paper>\n    </div>\n  );\n};\n","import { makeStyles, Paper, Typography } from '@material-ui/core';\n\nimport { AboutAllies } from './about-allies';\nimport { AboutHC } from './about-hc';\nimport { AboutRules } from './about-rules';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  rules: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n  },\n  setGrid: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n  },\n  '@media (max-width: 1024px)': {\n    setGrid: {\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: '1fr 1fr',\n    },\n  },\n});\n\nexport const About = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" className={classes.header}>\n        About USC\n      </Typography>\n      <Paper className={classes.paper}>\n        <AboutRules />\n        <div className={classes.setGrid}>\n          <AboutHC />\n          <AboutAllies />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Link,\n  makeStyles,\n  Paper,\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  iframe: {\n    width: '100%',\n    height: '59vw',\n  },\n  step: {\n    display: 'grid',\n    gridTemplate: '1fr / 1fr 1fr',\n  },\n  right: {\n    textAlign: 'right',\n  },\n  left: {\n    textAlign: 'left',\n  },\n});\n\nexport const Join = () => {\n  const classes = useStyles();\n  const mediaQuery = useMediaQuery('(min-width:950px)');\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" className={classes.header}>\n        Join Us!\n      </Typography>\n      <Paper className={classes.paper}>\n        <Typography>\n          Step 1: Read the rules on the{' '}\n          <Link to=\"/about\" target=\"_blank\" component={NavLink}>\n            About Page\n          </Link>\n          .\n        </Typography>\n        {mediaQuery ? (\n          <Typography>Step 2: Fill out the form below</Typography>\n        ) : (\n          <Typography>\n            Step 2: Fill out the{' '}\n            <Link\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?usp=sf_link\"\n              target=\"_blank\"\n            >\n              USC Join Form\n            </Link>\n          </Typography>\n        )}\n\n        <Typography>\n          Step 3: Join our{' '}\n          <Link href=\"https://discord.gg/br8Fy2M6cv\" target=\"_blank\">\n            Discord\n          </Link>\n        </Typography>\n\n        <Typography>\n          Recommended: Find us in-game! (UCPC for PC | UCXB for Xbox | UCPS for\n          PlayStation)\n        </Typography>\n        <Typography>\n          Recommended: Join our{' '}\n          <Link href=\"https://inara.cz/squadron/7028/\" target=\"_blank\">\n            Inara Squadron\n          </Link>\n        </Typography>\n        {mediaQuery && (\n          <iframe\n            className={classes.iframe}\n            title=\"USC Application Form\"\n            id=\"joinFormContainer\"\n            src=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?embedded=true\"\n          >\n            Loading…\n          </iframe>\n        )}\n        {/* <iframe\n          className={classes.iframe}\n          title='Discord Widget'\n          id='embeddedDiscord'\n          src='https://discord.com/widget?id=662439414152167434&amp;theme=dark'\n          allowTransparency\n          frameBorder='0'\n          sandbox='allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts'></iframe> */}\n      </Paper>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/EDLoader1.96bb2175.svg\";","import img from '../../assets/EDLoader1.svg';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  container: {\n    textAlign: 'center',\n  },\n});\n\nexport const Loading = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h3>Loading</h3>\n      <img id=\"imgLoading\" width=\"300\" alt=\"Loading\" src={img} />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/404.0e26d3fe.jpg\";","import { Link, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport errorImg from '../../assets/404.jpg';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    margin: 5,\n    height: '100%',\n  },\n  img: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  paper: {\n    width: '80%',\n    margin: 'auto',\n  },\n});\n\nexport const NotFound = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h3\">Mistakes were made</Typography>\n        <Typography variant=\"subtitle1\">\n          You were hyperdicted... escape destruction by going{' '}\n          <Link to=\"/home\" component={NavLink}>\n            home\n          </Link>\n          .\n        </Typography>\n        <img className={classes.img} alt=\"404 Error\" src={errorImg} />\n      </Paper>\n    </div>\n  );\n};\n","/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItems = <T, P extends keyof T>(items: T[], prop: P): T[] => {\n  try {\n    return items.sort(comparer(prop));\n  } catch {\n    return items;\n  }\n};\n\n/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItemsReverse = <T, P extends keyof T>(\n  items: T[],\n  prop: P\n): T[] => {\n  try {\n    return items.sort(comparerReverse(prop));\n  } catch {\n    return items;\n  }\n};\n\nconst comparer = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] > b[prop]) {\n      return 1;\n    } else if (a[prop] < b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\nconst comparerReverse = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] < b[prop]) {\n      return 1;\n    } else if (a[prop] > b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n","import {\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n  },\n  allies: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 'auto',\n    width: 450,\n  },\n});\nexport const AboutAllies = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.header}>\n        Allies\n      </Typography>\n      <Paper className={classes.allies}>\n        <List>\n          {allies.map((rule: string, i: number) => (\n            <ListItem key={i}>\n              <ListItemText primary={`${rule}`} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nconst allies = [\n  '1st Imperium Auxiliary Cohort',\n  'Alba Rotam Private Military',\n  'Arbor Caelum',\n  'Black Universe Gazers',\n  'Daily Routine Incorperated',\n  'Explorers of Nabudis',\n  'The Galactic Archive',\n  'Gilgamesh Corps',\n  'Independence Separatist Fleet',\n  'Intergalactic Astronomical Union',\n  'Interstellar Incorporated',\n  'Knights of Pleiades',\n  'Ryders of the Void',\n  'ROOKS',\n  'Sapere Aude',\n  'The Altruists',\n];\n","import {\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  rank: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 'auto',\n    width: 450,\n  },\n});\nexport const AboutHC = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.header}>\n        High Command\n      </Typography>\n      <Paper className={classes.rank}>\n        <List>\n          {hc.map((rule: string, i: number) => (\n            <ListItem key={i}>\n              <ListItemText primary={`${rule}`} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nconst hc = [\n  'NickG2002',\n  'Goliath the Second',\n  'LOKioo42',\n  'Pablok',\n  'PracticalHalo',\n  'RedFang Culph',\n  'UltraNeros',\n  'Admiralfeb',\n  'Akhaten',\n  'Aurelius Publius',\n  'Captain Smokeq',\n  'Clever Ape',\n  'IM2D',\n  'Nullyti',\n  'Queen Eleanor',\n  'Yuting9',\n];\n","import {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridTemplateRows: 'auto',\n  },\n  rules: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n  },\n  consequences: {\n    gridColumn: '1 / 3',\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n  },\n  '@media (max-width: 1024px)': {\n    root: {\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto',\n    },\n    consequences: {\n      gridColumn: 1,\n    },\n  },\n});\n\nexport const AboutRules = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography variant=\"h3\">Rules</Typography>\n      <Paper className={classes.root}>\n        <div className={classes.rules}>\n          <Typography variant=\"h4\">Discord</Typography>\n          <List>\n            {discordRules.map((rule: string, index: number) => (\n              <ListItem key={index}>\n                <ListItemText primary={`${index + 1}) ${rule}`} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className={classes.rules}>\n          <Typography variant=\"h4\">Members of USC</Typography>\n          <List>\n            {memberRules.map((rule: string, index: number) => (\n              <ListItem key={index}>\n                <ListItemText primary={`${index + 1}) ${rule}`} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n        <div className={classes.consequences}>\n          <Typography>\n            Those found in violation of any of these Discord or Group rules, or\n            found attempting to bypass these rules in any way, will first be\n            subject to a minimum of a warning, further offences will be subject\n            to demotion, expulsion, and/or USC Kill-on-Sight status.\n          </Typography>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nconst discordRules = [\n  'Be Respectful',\n  'Be Mature',\n  'Do not @everyone',\n  'No porn or nudity',\n  'No harassment',\n  'No excessive swearing',\n  'No derogatory terms or phrases',\n  'No political discussions as they can become heated.',\n];\n\nconst memberRules = [\n  'Will not, under no circumstance, Combat Log.',\n  'Will not attack other USC Personnel or any allies of the United Systems Cooperative.',\n  'Will not attack any innocent CMDRs, unless in pre-arranged combat, or for Powerplay.',\n  'Will not, under no circumstance, discriminate against other commanders on the basis of race, religion, sexuality, nationality, etc.',\n  'Will not, under no circumstance, seek revenge against other USC Personnel, directly or indirectly. Punishments for crimes, and resolutions for transgressions, will be handed out by High Command.',\n  'Will not, under no circumstance, to divulge information marked as confidential by High Command.',\n];\n"],"sourceRoot":""}