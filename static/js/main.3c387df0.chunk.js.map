{"version":3,"sources":["assets/background.png","assets/fonts/Eurostile-Roman.woff2","theme.ts","providers/realmAppProvider.tsx","hooks/useRealmApp.ts","hooks/useLoginAnon.ts","components/nav-Mobile.tsx","components/nav-Full.tsx","data/navItems.ts","components/navbar.tsx","components/information/infoSection.tsx","data/information/infographicList.ts","assets/information/Cave Johnson.png","assets/information/ED station landing pad map.png","assets/information/FSS-1.jpg","assets/information/KBGFoam.jpg","assets/information/Entrance_on_a_Coriolis_Dock.png","assets/information/ED error codes.png","assets/information/radar.png","components/information/infographic.tsx","hooks/information/useInfographic.ts","data/information/guidesList.ts","data/information/toolsList.ts","data/information/docsList.ts","data/about/allies.ts","data/about/hc.ts","data/about/rules.ts","data/about/uscLinksList.ts","hooks/useInfoButtons.ts","components/information/information.tsx","functions/copytoClipboard.ts","components/information/miningMap.tsx","hooks/information/useMiningMaps.ts","components/information/shipReviews.tsx","hooks/information/useShipReviews.ts","routes/information.routes.tsx","components/about/aboutAllies.tsx","components/about/aboutHC.tsx","components/about/aboutRules.tsx","hooks/information/useFleetCarriers.ts","components/about/carriersPersonal.tsx","components/about/carriersUSC.tsx","components/about/carriers.tsx","components/about/aboutLinks.tsx","components/about/about.tsx","routes/about.routes.tsx","components/join/join.tsx","hooks/join/useJoinInfo.ts","components/join/joinList.tsx","components/join/joinFormAmbassador.tsx","components/join/joinFormGuest.tsx","components/join/joinFormMember.tsx","components/join/joinNextSteps.tsx","components/join/joinNew.tsx","routes/join.routes.tsx","components/releases/releases.tsx","data/releases/2020-12.ts","routes/app.routes.tsx","providers/realmApolloProvider.tsx","app.tsx","reportWebVitals.ts","index.tsx","hooks/useLinks.ts","data/links.ts","functions/sort.ts","components/home.tsx","hooks/useDownloadLink.ts","data/home.ts","assets/404.jpg","components/notFound.tsx"],"names":["euroStile","fontFamily","fontStyle","src","euroStileWoff","theme","createMuiTheme","palette","primary","main","secondary","type","typography","join","fontSize","overrides","MuiCssBaseline","body","height","backgroundImage","backgroundImg","backgroundRepeat","backgroundAttachment","backgroundSize","MuiLink","root","color","MuiButton","textTransform","RealmAppContext","createContext","RealmAppProvider","props","appId","children","undefined","Error","useState","Realm","app","setApp","useEffect","currentUser","setCurrentUser","a","logIn","anonymous","logOut","wrapped","logInAnon","Provider","value","useRealmApp","useContext","useLoginAnon","realm","console","log","useStyles","makeStyles","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","NavMobile","classes","openDrawer","setOpenDrawer","navItems","toggleDrawer","open","event","key","className","AppBar","position","Toolbar","IconButton","edge","onClick","Typography","variant","Drawer","anchor","onClose","onKeyDown","List","map","x","ListItem","button","component","NavLink","to","ListItemText","text","display","padding","backgroundColor","minHeight","justifyContent","zIndex","navLink","textAlign","textDecoration","active","navLinkJoin","border","activeJoin","filler","flex","NavFull","includes","Button","activeClassName","NavbarComponent","enqueueSnackbar","useSnackbar","location","useLocation","useTheme","isMobile","useMediaQuery","breakpoints","down","e","useMemo","find","pathname","startsWith","paper","margin","paddingBottom","marginBottom","specialButton","flexDirection","buttonList","gridTemplateRows","grid","InfoSection","url","useRouteMatch","id","header","buttons","Paper","filter","beginner","guide","local","Link","link","caption","href","target","infoGraphics","img","Infographic","imgID","infographic","Fade","in","alt","guidesList","toolsList","docsList","allies","hc","discordRules","memberRules","getLinks","inaraSquadLink","uscLinksList","discordLink","patreonLink","useInfoButtons","Information","guidesRef","useRef","toolsRef","docsRef","handleScroll","ref","current","scrollIntoView","behavior","copytoClipboard","tempInput","document","createElement","appendChild","select","execCommand","removeChild","MiningMap","maps","miningMaps","sortItems","useMiningMaps","inaraCommodity","useLinks","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","system","size","materialInara","material","miningType","overlap","table","maxWidth","ShipReviews","shipReviews","reviewList","reviews","review","shipId","name","manufacturer","shipReview","useShipReviews","InformationRoutes","path","fallback","exact","graphic","AboutAllies","rule","i","rank","AboutHC","gridTemplateColumns","rules","borderRadius","consequences","gridColumn","listItem","AboutRules","index","FleetCarriers","PersonalCarriers","carriers","carrier","owner","USCCarriers","purpose","Carriers","useQuery","data","loading","error","message","fleetCarriers","useFleetCarriers","personalCarriers","toLowerCase","usePersonalCarriers","squadCarriers","useSquadCarriers","AboutLinks","hcAndAllies","About","AboutRoutes","iframe","step","gridTemplate","right","left","Join","isMedium","up","AllJoiners","AddJoiner","useAllJoinInfo","allJoiners","joiners","marginTop","joinTypes","JoinList","joinInfo","guests","ambassadors","useJoinInfo","setSelect","buildPlatforms","platforms","pc","xbox","ps","processLength","length","Collapse","timeStamp","cmdr","toUpperCase","discord","playingLength","reference","reference2","timezone","group","needPrivate","toString","question","borderColor","borderWidth","borderStyle","JoinFormAmbassador","useForm","register","handleSubmit","setValue","errors","setPlatforms","required","handlePlatformChange","targetName","checked","state","newValue","onSubmit","TextField","label","inputRef","minLength","pattern","FormControl","FormGroup","row","FormControlLabel","control","Checkbox","onChange","JoinFormGuest","setRef","ref2Question","setRef2Question","RadioGroup","Radio","timeout","mountOnEnter","unmountOnExit","Divider","JoinFormMember","as","defaultValue","nested","paddingLeft","JoinNextSteps","ListItemSecondaryAction","disablePadding","subheader","ListSubheader","textCenter","form","JoinNew","setForm","addJoiner","useMutation","addJoinerMutation","joiner","variables","addedJoiner","useAddJoinInfo","newData","time","Date","getTime","toISOString","JoinRoutes","Releases","plugins","gfm","renderers","paragraph","ShipBuilds","lazy","AppRoutes","from","createRealmApolloClient","HttpLink","uri","fetch","options","refreshCustomData","headers","Headers","Authorization","accessToken","cache","InMemoryCache","ApolloClient","RealmApolloProvider","client","setClient","App","history","createBrowserHistory","basename","process","maxSnack","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","links","blueprints","items","prop","sort","comparer","b","latin","cursive","subtitle","video","lore","Home","getDownloadLink","fileID","controls","poster","controlsList","NotFound","errorImg"],"mappings":"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","file":"static/js/main.3c387df0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.59b3f384.png\";","export default __webpack_public_path__ + \"static/media/Eurostile-Roman.96125003.woff2\";","import { createMuiTheme } from '@material-ui/core';\nimport backgroundImg from 'assets/background.png';\nimport euroStileWoff from 'assets/fonts/Eurostile-Roman.woff2';\n\nconst euroStile = {\n  fontFamily: 'Eurostile',\n  fontStyle: 'normal',\n  src: `url(${euroStileWoff}) format('woff2')`,\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f07b05',\n    },\n    secondary: {\n      main: '#00B3F7',\n    },\n    type: 'dark',\n  },\n  typography: {\n    fontFamily: [\n      'Eurostile',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    fontSize: 16,\n  },\n});\n\ntheme.overrides = {\n  MuiCssBaseline: {\n    '@global': {\n      body: {\n        height: '100%',\n        backgroundImage: `url(\"${backgroundImg}\")`,\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n      },\n      '@font-face': [euroStile],\n    },\n  },\n  MuiLink: {\n    root: {\n      color: theme.palette.primary.main,\n    },\n  },\n  MuiButton: {\n    root: {\n      textTransform: 'initial',\n    },\n  },\n};\n\nexport { theme };\n","import { IRealmContext } from 'models/realmContext';\nimport { createContext, ReactNode, useEffect, useState } from 'react';\nimport * as Realm from 'realm-web';\n\nexport const RealmAppContext = createContext<IRealmContext | null>(null);\n\nexport const RealmAppProvider = (props: {\n  appId: string | undefined;\n  children: ReactNode;\n}) => {\n  const { appId, children } = props;\n  if (appId === undefined) {\n    throw new Error('appId is not defined');\n  }\n  const [app, setApp] = useState(new Realm.App(appId));\n  useEffect(() => {\n    setApp(new Realm.App(appId));\n  }, [appId]);\n\n  // Wrap the Realm.App object's user state with React state\n  const [currentUser, setCurrentUser] = useState(app.currentUser);\n  async function logInAnon() {\n    await app.logIn(Realm.Credentials.anonymous());\n    // If successful, app.currentUser is the user that just logged in\n    setCurrentUser(app.currentUser);\n  }\n  async function logOut() {\n    // Log out the currently active user\n    await app.currentUser?.logOut();\n    // If another user was logged in too, they're now the current user.\n    // Otherwise, app.currentUser is null.\n    setCurrentUser(app.currentUser);\n  }\n  const wrapped = { app, currentUser, logInAnon, logOut };\n  return (\n    <RealmAppContext.Provider value={wrapped}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { RealmAppContext } from 'providers/realmAppProvider';\n\nexport const useRealmApp = () => {\n  const app = useContext(RealmAppContext);\n  if (!app) {\n    throw new Error(\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\n    );\n  }\n  return app;\n};\n","import { useRealmApp } from './useRealmApp';\n\nexport const useLoginAnon = async () => {\n  const realm = useRealmApp();\n  if (realm.currentUser === null) {\n    try {\n      await realm.logInAnon();\n      console.log(realm.currentUser);\n    } catch (_) {\n      throw new Error('Unable to login anon');\n    }\n  }\n};\n","import {\n  AppBar,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { INavItem } from 'models/navItem';\nimport { KeyboardEvent, MouseEvent, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nexport const NavMobile = (props: {\n  title: string | undefined;\n  navItems: INavItem[];\n}) => {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const { title, navItems } = props;\n\n  const toggleDrawer = (open: boolean) => (\n    event: KeyboardEvent | MouseEvent\n  ) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as KeyboardEvent).key === 'Tab' ||\n        (event as KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setOpenDrawer(open);\n  };\n\n  const navList = () => (\n    <div onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\n      <List>\n        {navItems.map((x) => (\n          <ListItem button key={x.to} component={NavLink} to={x.to}>\n            <ListItemText primary={x.text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n        <Drawer anchor=\"left\" open={openDrawer} onClose={toggleDrawer(false)}>\n          {navList()}\n        </Drawer>\n      </AppBar>\n    </div>\n  );\n};\n","import { Button, makeStyles } from '@material-ui/core';\nimport { INavItem } from 'models/navItem';\nimport { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    padding: theme.spacing(1),\n    backgroundColor: '#424242',\n    height: 'auto',\n    minHeight: 'auto',\n    justifyContent: 'initial',\n    zIndex: 1500,\n  },\n  navLink: {\n    backgroundColor: 'transparent',\n    height: 'auto',\n    color: '#f2f2f2',\n    textAlign: 'center',\n    textDecoration: 'none',\n    // width: theme.spacing(15),\n    marginRight: theme.spacing(1),\n    fontSize: 18,\n  },\n  active: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n  navLinkJoin: {\n    backgroundColor: 'transparent',\n    border: `${theme.palette.secondary.main} 0.1em solid`,\n    color: 'white',\n    fontSize: 18,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n    width: theme.spacing(15),\n  },\n  activeJoin: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  filler: {\n    flex: '1 0',\n  },\n}));\n\nexport const NavFull = (props: { navItems: INavItem[] }) => {\n  const classes = useStyles();\n  const { navItems } = props;\n\n  return (\n    <nav className={classes.root}>\n      {navItems.map((x) => {\n        if (x.to.includes('join')) {\n          return (\n            <Fragment key={x.to}>\n              <div className={classes.filler} />\n              <Button\n                to={x.to}\n                color=\"secondary\"\n                className={classes.navLinkJoin}\n                activeClassName={classes.activeJoin}\n                variant=\"contained\"\n                component={NavLink}\n              >\n                {x.text}\n              </Button>\n            </Fragment>\n          );\n        } else {\n          return (\n            <Button\n              key={x.to}\n              to={x.to}\n              className={classes.navLink}\n              activeClassName={classes.active}\n              component={NavLink}\n            >\n              {x.text}\n            </Button>\n          );\n        }\n      })}\n    </nav>\n  );\n};\n","import { INavItem } from 'models/navItem';\n\nexport const navItems: INavItem[] = [\n  { to: '/home', text: 'Home' },\n  { to: '/about', text: 'About' },\n  { to: '/information', text: 'Information' },\n  { to: '/builds', text: 'USC Builds' },\n  { to: '/join', text: 'Join' },\n];\n","import { useLoginAnon } from 'hooks/useLoginAnon';\nimport { useSnackbar } from 'notistack';\nimport { NavMobile } from './nav-Mobile';\nimport { NavFull } from './nav-Full';\nimport { navItems } from 'data/navItems';\nimport { useLocation } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { ILocation } from 'models/location';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nexport const NavbarComponent = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  let location = useLocation<ILocation>();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  try {\n    useLoginAnon();\n  } catch (e) {\n    enqueueSnackbar('Unable to login for database', { variant: 'error' });\n  }\n\n  let title = useMemo(() => {\n    return navItems.find((x) => location.pathname.startsWith(x.to))?.text;\n  }, [location]);\n\n  return (\n    <>\n      {isMobile ? (\n        <NavMobile title={title} navItems={navItems} />\n      ) : (\n        <NavFull navItems={navItems} />\n      )}\n    </>\n  );\n};\n","import { Button, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { IInfoButton } from 'models/information/infoButtonModel';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  buttonList: {\n    '& button': {\n      margin: 5,\n    },\n    '& a': {\n      margin: 5,\n    },\n    [theme.breakpoints.down('md')]: {\n      display: 'grid',\n      gridTemplateRows: 'auto',\n    },\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\n/** Interface for Info Section Props */\ninterface ISectionProps {\n  /** id of section */\n  id: string;\n  /** header to display */\n  header: string;\n  /** Buttons to display */\n  buttons: IInfoButton[];\n}\n\n/**\n * Displays an info Section set of buttons\n * @param props id, header, and button array.\n */\nexport const InfoSection = (props: ISectionProps) => {\n  const classes = useStyles();\n  const { url } = useRouteMatch();\n  const { id, header, buttons } = props;\n\n  return (\n    <Paper id={id} className={classes.paper}>\n      <Typography variant=\"h4\">{header}</Typography>\n      <div className={classes.grid}>\n        <div className={classes.buttonList}>\n          {buttons\n            .filter((x) => x.beginner === true)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n        <div className={classes.buttonList}>\n          {buttons\n            .filter((x) => x.beginner === false)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${url}${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import CaveJohnson from 'assets/information/Cave Johnson.png';\nimport StationMap from 'assets/information/ED station landing pad map.png';\nimport FSS from 'assets/information/FSS-1.jpg';\nimport Scoopable from 'assets/information/KBGFoam.jpg';\nimport Coriolis from 'assets/information/Entrance_on_a_Coriolis_Dock.png';\nimport ErrorCodes from 'assets/information/ED error codes.png';\nimport Radar from 'assets/information/radar.png';\n\nexport const infoGraphics = [\n  {\n    id: 'cave-johnson',\n    title: 'Cave Johnson',\n    img: CaveJohnson,\n  },\n  {\n    id: 'station-map',\n    title: 'Station Map',\n    img: StationMap,\n  },\n  {\n    id: 'fss',\n    title: 'Full Spectrum Scanner',\n    img: FSS,\n  },\n  {\n    id: 'scoopable',\n    title: 'Scoopable Stars',\n    img: Scoopable,\n  },\n  {\n    id: 'coriolis',\n    title: 'Find the Coriolis Slot',\n    img: Coriolis,\n  },\n  {\n    id: 'error-codes',\n    title: 'Error Codes',\n    img: ErrorCodes,\n  },\n  {\n    id: 'radar',\n    title: 'Radar',\n    img: Radar,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/Cave Johnson.fe248e5c.png\";","export default __webpack_public_path__ + \"static/media/ED station landing pad map.c39883eb.png\";","export default __webpack_public_path__ + \"static/media/FSS-1.78fc877c.jpg\";","export default __webpack_public_path__ + \"static/media/KBGFoam.dd62ea7b.jpg\";","export default __webpack_public_path__ + \"static/media/Entrance_on_a_Coriolis_Dock.b1a7bfdb.png\";","export default __webpack_public_path__ + \"static/media/ED error codes.0f34ed4f.png\";","export default __webpack_public_path__ + \"static/media/radar.c9085875.png\";","import { Fade, makeStyles, Typography } from '@material-ui/core';\nimport { useInfographic } from 'hooks/information/useInfographic';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n  },\n});\n\n/**\n * Displays an infographic\n * @param props imgID to display\n */\nexport const Infographic = (props: { img: string }) => {\n  const infographic = useInfographic(props.img);\n  const classes = useStyles();\n  return (\n    <Fade in={true}>\n      <div className={classes.root}>\n        {infographic ? (\n          <>\n            <Typography variant=\"h3\">{infographic.title}</Typography>\n            <img src={infographic.img} alt={infographic.title} />\n          </>\n        ) : (\n          <Typography>Image not found</Typography>\n        )}\n      </div>\n    </Fade>\n  );\n};\n","import { infoGraphics } from 'data/information/infographicList';\n\nexport const useInfographic = (imgID: string) => {\n  return infoGraphics.find((x) => x.id === imgID);\n};\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const guidesList: IInfoButton[] = [\n  {\n    title: 'New Player Guide',\n    caption: 'Created by Pixel Bandits',\n    local: false,\n    link:\n      'https://www.pixelbandits.org/2020/04/elite-dangerous-beginners-guide/',\n    beginner: true,\n  },\n  // {\n  //   title: 'USC Ship Builds List',\n  //   caption: 'Compiled by Admiralfeb',\n  //   local: true,\n  //   link: '/builds',\n  //   beginner: true,\n  // },\n  {\n    title: 'How to Explore',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/exploration',\n    beginner: true,\n  },\n  {\n    title: 'How to Mine',\n    caption: 'Created by LocNor',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/4wmgja/general_mining_guide_20/',\n    beginner: true,\n  },\n  {\n    title: 'Ship Reviews',\n    caption: 'Compiled by Admiralfeb',\n    local: true,\n    link: '/reviews',\n    beginner: true,\n  },\n  {\n    title: 'Mining Maps',\n    caption: 'Compiled by Luisqa',\n    local: true,\n    link: '/mining',\n    beginner: false,\n  },\n  {\n    title: 'Cave Johnson',\n    caption: 'Compiled by IM2D and Nullyti',\n    local: true,\n    link: '/cave-johnson',\n    beginner: false,\n  },\n  {\n    title: 'How to Unlock Engineers',\n    caption: \"Fox's Guide\",\n    local: false,\n    link:\n      'https://munkjensen.net/wiki/index.php?title=Fox%27s_step-by-step_Guide_to_Unlocking_Engineers_Quickly',\n    beginner: false,\n  },\n  {\n    title: 'How to unlock Guardian',\n    caption: \"Commander's Toolbox\",\n    local: false,\n    link: 'https://cmdrs-toolbox.com/guides/guardian-modules',\n    beginner: false,\n  },\n  {\n    title: 'How to Grind Imperial and Federal Rank',\n    caption: 'Reddit',\n    local: false,\n    link:\n      'https://www.reddit.com/r/EliteDangerous/comments/g9y56s/psa_grind_how_to_get_federation_empire_rank_in_12/',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const toolsList: IInfoButton[] = [\n  {\n    title: 'Ship Builder',\n    caption: 'Coriolis',\n    local: false,\n    link: 'https://coriolis.io/',\n    beginner: true,\n  },\n  {\n    title: 'Inara Companion App',\n    caption: 'Helpful 3rd party tool',\n    local: false,\n    link: 'https://inara.cz/',\n    beginner: true,\n  },\n  {\n    title: \"Miner's Tool\",\n    caption: 'Created by CMDR VicTic',\n    local: false,\n    link: 'https://edtools.cc/miner',\n    beginner: true,\n  },\n  {\n    title: 'Ship Anatomy',\n    caption: 'a.teall.info',\n    local: false,\n    link: 'http://a.teall.info/edsa/',\n    beginner: true,\n  },\n  {\n    title: 'ED Ref Card',\n    caption: 'KeyBinds Helper',\n    local: false,\n    link: 'https://edrefcard.info/',\n    beginner: true,\n  },\n  {\n    title: 'ED Market Connector',\n    caption: 'EDMC',\n    local: false,\n    link: 'https://www.edtutorials.com/engineering/ed-market-connector/',\n    beginner: true,\n  },\n  {\n    title: 'ED Discovery',\n    caption: 'Alternative to EDMC',\n    local: false,\n    link: 'https://github.com/EDDiscovery/EDDiscovery/releases',\n    beginner: true,\n  },\n  {\n    title: 'Distance Between Systems Tool',\n    caption: 'By Captain Ace Rimmer',\n    local: false,\n    link: 'http://elitedangerous.hozbase.co.uk/calc/distances',\n    beginner: true,\n  },\n  {\n    title: 'Massacre Mission Tracker',\n    caption: 'Created by CMDR Clever Ape',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1K0Su9HS9i43gx_RxLBR9NdwUI7iMhibKxwbaWf39WpQ/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Material Finder',\n    caption: 'EDTutorials',\n    local: false,\n    link: 'https://www.edtutorials.com/material-finder/',\n    beginner: false,\n  },\n  {\n    title: 'Neutron Star Plotter',\n    caption: 'Created by Gareth Harper',\n    local: false,\n    link: 'https://www.spansh.co.uk/plotter',\n    beginner: false,\n  },\n  {\n    title: 'Road 2 Riches',\n    caption: 'Created by Gareth Harper',\n    local: false,\n    link: 'https://www.spansh.co.uk/riches',\n    beginner: false,\n  },\n  {\n    title: 'The Hurt Highway',\n    caption: 'Created by EXO',\n    local: false,\n    link:\n      'https://www.edsm.net/en/galactic-routes/show/id/291/name/The+Hurt+Highway',\n    beginner: false,\n  },\n  {\n    title: 'EDDB Companion App',\n    caption: 'Alternative to Inara',\n    local: false,\n    link: 'https://eddb.io/',\n    beginner: false,\n  },\n  {\n    title: 'Elite Dangerous Star Map',\n    caption: '(EDSM)',\n    local: false,\n    link: 'https://www.edsm.net/',\n    beginner: false,\n  },\n  {\n    title: 'Fleet Carrier Calculator',\n    caption: `Commander's Toolbox`,\n    local: false,\n    link: 'https://cmdrs-toolbox.com/fleet-carrier-calculator',\n    beginner: false,\n  },\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\n\nexport const docsList: IInfoButton[] = [\n  {\n    title: 'Radar',\n    caption: 'Infographic',\n    local: true,\n    link: '/radar',\n    beginner: true,\n  },\n  {\n    title: 'Station Landing Map',\n    caption: 'Infographic',\n    local: true,\n    link: '/station-map',\n    beginner: true,\n  },\n  {\n    title: 'Full Spectrum Scanner',\n    caption: 'Spectrum image',\n    local: true,\n    link: '/fss',\n    beginner: true,\n  },\n  {\n    title: 'Scoopable Stars',\n    caption: 'Infographic',\n    local: true,\n    link: '/scoopable',\n    beginner: true,\n  },\n  {\n    title: 'Find the Slot - Coriolis',\n    caption: 'Infographic',\n    local: true,\n    link: '/coriolis',\n    beginner: true,\n  },\n  {\n    title: 'Error Codes',\n    caption: 'Infographic',\n    local: true,\n    link: '/error-codes',\n    beginner: true,\n  },\n\n  {\n    title: 'Anti-Thargoid Flight Manual',\n    caption: 'Created by Aterius',\n    local: false,\n    link:\n      'https://docs.google.com/document/d/1loy4TRNhM07Azf_ib01OIurujTcNX-L1Y1NYFy59i4M/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Supercruise Ship Handling',\n    caption: 'Created by CMDR marx',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1cWCUSxvliZ3ly-RRulUeYqZ3hqOyCSRLze0KS1QBiBY/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Database',\n    caption: 'Created by Qohen Leth',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1wTmKrzLCXRIdHwKHaN-gXHq6YkS_JAnJKsyQp8P-j0Y/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'Engineering Material Locator',\n    caption: 'Created by DTEA',\n    local: false,\n    link:\n      'https://docs.google.com/spreadsheets/d/1Mp7l0bSnMp_G7xWUm75M-XuihDfTdi27rm-vB9K8AX0/edit?usp=sharing',\n    beginner: false,\n  },\n  {\n    title: 'BGS Influence Caps',\n    caption: 'Created by Jane Turner',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/influence-caps-gains-and-the-wine-analogy.423837/',\n    beginner: false,\n  },\n  {\n    title: 'Resistance Stacking Explained',\n    caption: 'Created by Fett_Li',\n    local: false,\n    link:\n      'https://forums.frontier.co.uk/threads/this-is-how-resistance-stacking-works.439830/',\n    beginner: false,\n  },\n];\n","export const allies = [\n  '1st Imperium Auxiliary Cohort',\n  'Alba Rotam Private Military',\n  'The Altruists',\n  'Arbor Caelum',\n  'The Coalition',\n  'Black Universe Gazers',\n  'Daily Routine Incorperated',\n  'Explorers of Nabudis',\n  'The Galactic Archive',\n  'Gilgamesh Corps',\n  'Independence Separatist Fleet',\n  'Intergalactic Astronomical Union',\n  'Interstellar Incorporated',\n  'Knights of Pleiades',\n  'Ryders of the Void',\n  'ROOKS',\n  'Sapere Aude',\n];\n","export const hc = [\n  'NickG2002',\n  'Goliath the Second',\n  'LOKioo42',\n  'Pablok',\n  'PracticalHalo',\n  'RedFang Culph',\n  'UltraNeros',\n  'Admiralfeb',\n  'Akhaten',\n  'Aurelius Publius',\n  'Captain Smokeq',\n  'Clever Ape',\n  'Luisqa',\n  'Nullyti',\n  'Queen Eleanor',\n  'Yuting9',\n];\n","export const discordRules = [\n  'Be Respectful',\n  'Be Mature',\n  'Do not @everyone',\n  'No porn or nudity',\n  'No harassment',\n  'No excessive swearing',\n  'No derogatory terms or phrases',\n  'No political discussions as they can become heated.',\n];\n\nexport const memberRules = [\n  'Will not, under no circumstance, Combat Log.',\n  'Will not attack other USC Personnel or any allies of the United Systems Cooperative.',\n  'Will not attack any innocent CMDRs, unless in pre-arranged combat, or for Powerplay.',\n  'Will not, under no circumstance, discriminate against other commanders on the basis of race, religion, sexuality, nationality, etc.',\n  'Will not, under no circumstance, seek revenge against other USC Personnel, directly or indirectly. Punishments for crimes, and resolutions for transgressions, will be handed out by High Command.',\n  'Will not, under no circumstance, to divulge information marked as confidential by High Command.',\n];\n","import { IInfoButton } from 'models/information/infoButtonModel';\nimport { getLinks } from 'hooks/useLinks';\nconst { inaraSquadLink, discordLink, patreonLink } = getLinks();\nexport const uscLinksList: IInfoButton[] = [\n  {\n    title: 'Rules',\n    caption: '',\n    local: true,\n    link: '/about/rules',\n    beginner: true,\n  },\n  // {\n  //   title: 'Our Management',\n  //   caption: '',\n  //   local: true,\n  //   link: '/about/hc',\n  //   beginner: true,\n  // },\n  {\n    title: 'Our Allies',\n    caption: '',\n    local: true,\n    link: '/about/allies',\n    beginner: true,\n  },\n  {\n    title: 'Our Fleet Carriers',\n    caption: '',\n    local: true,\n    link: '/about/fc',\n    beginner: true,\n  },\n  {\n    title: 'Discord',\n    caption: '',\n    local: false,\n    link: discordLink,\n    beginner: false,\n  },\n  {\n    title: 'Inara USC Squadron',\n    caption: '',\n    local: false,\n    link: inaraSquadLink,\n    beginner: false,\n  },\n  {\n    title: 'Patreon',\n    caption: '',\n    local: false,\n    link: patreonLink,\n    beginner: false,\n  },\n];\n","import { docsList, guidesList, toolsList } from 'data/information';\nimport { uscLinksList } from 'data/about';\n\nexport const useInfoButtons = () => {\n  return { docsList, guidesList, toolsList, uscLinksList };\n};\n","import {\n  Button,\n  Fade,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { Typography, Paper } from '@material-ui/core';\nimport { InfoSection } from './infoSection';\nimport { useInfoButtons } from 'hooks/useInfoButtons';\nimport { MutableRefObject, useRef } from 'react';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n    '& button': {\n      margin: theme.spacing(1),\n    },\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\n/** Information Landing Component */\nexport const Information = () => {\n  const classes = useStyles();\n  const { toolsList, docsList, guidesList } = useInfoButtons();\n  const guidesRef = useRef<HTMLDivElement | null>(null);\n  const toolsRef = useRef<HTMLDivElement | null>(null);\n  const docsRef = useRef<HTMLDivElement | null>(null);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  const handleScroll = (ref: MutableRefObject<HTMLDivElement | null>) => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <Fade in={true}>\n      <div>\n        <Typography variant=\"h3\" className={classes.header}>\n          Information Archive\n        </Typography>\n\n        <Paper className={classes.paper}>\n          <Typography variant=\"subtitle1\">\n            New Players look to the{' '}\n            <span className={classes.secondary}> blue buttons </span>for helpful\n            tips in getting started with the Guides, Tools, and Documentation\n            below.\n          </Typography>\n        </Paper>\n        {isMobile && (\n          <Paper className={classes.paper}>\n            <Typography variant=\"subtitle1\">Scroll To:</Typography>\n            <Button\n              variant=\"outlined\"\n              onClick={() => handleScroll(guidesRef)}\n              title=\"guides\"\n            >\n              Guides\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => handleScroll(toolsRef)}\n              title=\"tools\"\n            >\n              Tools\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => handleScroll(docsRef)}\n              title=\"docs\"\n            >\n              Documentation\n            </Button>\n          </Paper>\n        )}\n        <div ref={guidesRef}>\n          <InfoSection\n            id=\"guides\"\n            key=\"guides\"\n            header=\"Guides\"\n            buttons={guidesList}\n          />\n        </div>\n        <div ref={toolsRef}>\n          <InfoSection\n            id=\"tools\"\n            key=\"tools\"\n            header=\"Tools\"\n            buttons={toolsList}\n          />\n        </div>\n        <div ref={docsRef}>\n          <InfoSection\n            id=\"docs\"\n            key=\"docs\"\n            header=\"Documentation\"\n            buttons={docsList}\n          />\n        </div>\n      </div>\n    </Fade>\n  );\n};\n","export const copytoClipboard = (text: string) => {\n  let tempInput = document.createElement('input');\n  tempInput.value = text;\n  document.body.appendChild(tempInput);\n  tempInput.select();\n  document.execCommand('copy');\n  document.body.removeChild(tempInput);\n};\n","import {\n  Button,\n  Fade,\n  IconButton,\n  Link,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { useMiningMaps } from 'hooks/information/useMiningMaps';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { copytoClipboard } from 'functions/copytoClipboard';\nimport { useLinks } from 'hooks/useLinks';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '95%',\n    },\n  },\n}));\n\nexport const MiningMap = () => {\n  const maps = useMiningMaps();\n  const classes = useStyles();\n  const { inaraCommodity } = useLinks();\n\n  return (\n    <Fade in={true}>\n      <div className={classes.root}>\n        <Typography variant=\"h3\">Mining Maps</Typography>\n        <Typography variant=\"subtitle1\">Compiled by Luisqa</Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>System</TableCell>\n                <TableCell>Body</TableCell>\n                <TableCell>Material</TableCell>\n                <TableCell>Mining Type</TableCell>\n                <TableCell>Rez Overlap</TableCell>\n                <TableCell>Link</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {maps.map((map) => (\n                <TableRow key={map.link}>\n                  <TableCell>\n                    {map.system}{' '}\n                    <IconButton\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={() => copytoClipboard(map.system)}\n                    >\n                      <FileCopyIcon />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>{map.body}</TableCell>\n                  <TableCell>\n                    <Link\n                      href={`${inaraCommodity}${map.materialInara}`}\n                      target=\"_blank\"\n                    >\n                      {map.material}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{map.miningType}</TableCell>\n                  <TableCell>{map.overlap}</TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      href={map.link}\n                      target=\"_blank\"\n                    >\n                      Open Map\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </Fade>\n  );\n};\n","import { IMiningMap } from 'models/information/miningMap';\nimport maps from 'data/information/miningMaps.json';\nimport { sortItems } from 'functions/sort';\n\nexport const useMiningMaps = () => {\n  const miningMaps: IMiningMap[] = maps;\n  return sortItems(miningMaps, 'system');\n};\n","import {\n  Button,\n  Fade,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { useShipReviews } from 'hooks/information/useShipReviews';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 650,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/** Displays the ship Review Table */\nexport const ShipReviews = () => {\n  const classes = useStyles();\n  const shipReviews = useShipReviews();\n  return (\n    <Fade in={true}>\n      <div className={classes.table}>\n        <Typography variant=\"h3\">Ship Reviews</Typography>\n        <TableContainer component={Paper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Ship</TableCell>\n                <TableCell>Manufacture</TableCell>\n                <TableCell>Review Link</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {shipReviews.map((review) => (\n                <TableRow key={review.shipId}>\n                  <TableCell>{review.name}</TableCell>\n                  <TableCell>{review.manufacturer}</TableCell>\n                  <TableCell>\n                    <Button\n                      href={review.shipReview}\n                      target=\"_blank\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                    >\n                      Pilot Review\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </Fade>\n  );\n};\n","import reviews from 'data/shipBuilds/shipMap.json';\nimport { sortItems } from 'functions/sort';\nimport { IShipReview } from 'models/information/shipReview';\n\nexport const useShipReviews = (): IShipReview[] => {\n  const reviewList = reviews.map((review) => {\n    const shipId = review.shipId;\n    const name = review.name;\n    const manufacturer = review.manufacturer;\n    const shipReview = review.shipReview;\n    return { shipId, name, manufacturer, shipReview };\n  });\n  return sortItems(reviewList, 'name');\n};\n","import { Suspense } from 'react';\nimport { Route, useRouteMatch, Switch } from 'react-router-dom';\nimport {\n  Infographic,\n  Information,\n  MiningMap,\n  ShipReviews,\n} from 'components/information';\nimport { NotFound } from 'components';\nimport { EDSpinner } from '@admiralfeb/react-components';\nimport { infoGraphics } from 'data/information/infographicList';\nimport { Fade } from '@material-ui/core';\n\nexport const InformationRoutes = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Fade in={true}>\n      <Suspense fallback={<EDSpinner />}>\n        <Switch>\n          <Route exact path={path}>\n            <Information />\n          </Route>\n          <Route path={`${path}/mining`}>\n            <MiningMap />\n          </Route>\n          <Route path={`${path}/reviews`}>\n            <ShipReviews />\n          </Route>\n          {infoGraphics.map((graphic) => (\n            <Route key={graphic.id} path={`${path}/${graphic.id}`}>\n              <Infographic img={graphic.id} />\n            </Route>\n          ))}\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Fade>\n  );\n};\n","import {\n  Fade,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { allies } from 'data/about';\n\nconst useStyles = makeStyles({\n  header: {\n    textAlign: 'center',\n  },\n  allies: {\n    margin: 'auto',\n    width: 450,\n  },\n});\n\n/** Displays Allies */\nexport const AboutAllies = () => {\n  const classes = useStyles();\n  return (\n    <Fade in={true}>\n      <div>\n        <Typography variant=\"h4\" className={classes.header}>\n          Allies\n        </Typography>\n        <Paper className={classes.allies}>\n          <List>\n            {allies.map((rule: string, i: number) => (\n              <ListItem key={i}>\n                <ListItemText primary={`${rule}`} />\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      </div>\n    </Fade>\n  );\n};\n","import {\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { hc } from 'data/about';\n\nconst useStyles = makeStyles({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  rank: {\n    margin: 'auto',\n    width: 450,\n  },\n});\n\n/** Displays High Command Members */\nexport const AboutHC = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h4\" className={classes.header}>\n        High Command\n      </Typography>\n      <Paper className={classes.rank}>\n        <List>\n          {hc.map((rule: string, i: number) => (\n            <ListItem key={i}>\n              <ListItemText primary={`${rule}`} />\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Fade,\n} from '@material-ui/core';\nimport { discordRules, memberRules } from 'data/about';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '0.5fr 1fr',\n    gridTemplateRows: 'auto',\n    width: '90%',\n    margin: 'auto',\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto',\n    },\n  },\n  rules: {\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n  },\n  consequences: {\n    gridColumn: '1 / 3',\n    border: '3px solid white',\n    borderRadius: 10,\n    margin: 5,\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      gridColumn: 1,\n    },\n  },\n  listItem: {\n    margin: `0 ${theme.spacing(2)} 0 ${theme.spacing(1)}`,\n  },\n}));\n\n/** Displays the rules */\nexport const AboutRules = () => {\n  const classes = useStyles();\n  return (\n    <Fade in={true}>\n      <div className={classes.header}>\n        <Typography variant=\"h4\">Rules</Typography>\n        <Paper className={classes.root}>\n          <div className={classes.rules}>\n            <Typography variant=\"h5\">Discord</Typography>\n            <List>\n              {discordRules.map((rule: string, index: number) => (\n                <ListItem key={index} className={classes.listItem}>\n                  <ListItemText primary={`${index + 1}) ${rule}`} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n          <div className={classes.rules}>\n            <Typography variant=\"h5\">Members of USC</Typography>\n            <List>\n              {memberRules.map((rule: string, index: number) => (\n                <ListItem key={index} className={classes.listItem}>\n                  <ListItemText primary={`${index + 1}) ${rule}`} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n          <div className={classes.consequences}>\n            <Typography>\n              Those found in violation of any of these Discord or Group rules,\n              or found attempting to bypass these rules in any way, will first\n              be subject to a minimum of a warning, further offences will be\n              subject to demotion, expulsion, and/or USC Kill-on-Sight status.\n            </Typography>\n          </div>\n        </Paper>\n      </div>\n    </Fade>\n  );\n};\n","import { useQuery } from '@apollo/client';\nimport { sortItems } from 'functions/sort';\nimport { loader } from 'graphql.macro';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\nimport { useMemo } from 'react';\n\nconst FleetCarriers = loader('../../graphql/allFleetCarriers.gql');\n\nexport const useFleetCarriers = () => {\n  const { data, loading, error } = useQuery<{ fleetCarriers: IFleetCarrier[] }>(\n    FleetCarriers\n  );\n  if (error) {\n    throw new Error(`Failed to fetch carriers: ${error.message}`);\n  }\n  let fleetCarriers = data?.fleetCarriers;\n  return { fleetCarriers, loading };\n};\n\nexport const usePersonalCarriers = (\n  fleetCarriers: IFleetCarrier[] | undefined\n) => {\n  return useMemo(() => {\n    if (fleetCarriers) {\n      const personalCarriers = fleetCarriers.filter((x) =>\n        x.purpose.toLowerCase().includes('personal')\n      );\n      return sortItems(personalCarriers, 'name');\n    } else {\n      return undefined;\n    }\n  }, [fleetCarriers]);\n};\n\nexport const useSquadCarriers = (\n  fleetCarriers: IFleetCarrier[] | undefined\n) => {\n  return useMemo(() => {\n    if (fleetCarriers) {\n      const personalCarriers = fleetCarriers.filter(\n        (x) => !x.purpose.toLowerCase().includes('personal')\n      );\n      return sortItems(personalCarriers, 'name');\n    } else {\n      return undefined;\n    }\n  }, [fleetCarriers]);\n};\n","import {\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  makeStyles,\n} from '@material-ui/core';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/**\n * Displays Personal carriers\n * @param props carriers to display\n */\nexport const PersonalCarriers = (props: {\n  carriers: IFleetCarrier[] | undefined;\n}) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import {\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  makeStyles,\n} from '@material-ui/core';\nimport { IFleetCarrier } from 'models/information/fleetCarrier';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/**\n * Displays USC Carriers\n * @param props carriers to display\n */\nexport const USCCarriers = (props: {\n  carriers: IFleetCarrier[] | undefined;\n}) => {\n  const classes = useStyles();\n  const { carriers } = props;\n\n  return (\n    <TableContainer component={Paper} className={classes.table}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Purpose</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>ID</TableCell>\n            <TableCell>Owner</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {carriers?.map((carrier) => (\n            <TableRow key={carrier.id}>\n              <TableCell>{carrier.purpose}</TableCell>\n              <TableCell>{carrier.name}</TableCell>\n              <TableCell>{carrier.id}</TableCell>\n              <TableCell>{carrier.owner}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { Typography, makeStyles, Fade } from '@material-ui/core';\nimport { EDSpinner } from '@admiralfeb/react-components';\nimport {\n  useFleetCarriers,\n  usePersonalCarriers,\n  useSquadCarriers,\n} from 'hooks/information/useFleetCarriers';\nimport { PersonalCarriers } from './carriersPersonal';\nimport { USCCarriers } from './carriersUSC';\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600,\n    textAlign: 'center',\n    margin: 'auto',\n  },\n});\n\n/** Displays Fleet Carrier Information */\nexport const Carriers = () => {\n  const classes = useStyles();\n  const { fleetCarriers, loading } = useFleetCarriers();\n  let personalCarriers = usePersonalCarriers(fleetCarriers);\n  let squadCarriers = useSquadCarriers(fleetCarriers);\n\n  return (\n    <>\n      <Fade in={loading}>{loading ? <EDSpinner /> : <div></div>}</Fade>\n      <Fade in={!loading}>\n        <div className={classes.table}>\n          <Typography variant=\"h4\">USC Fleet Carriers</Typography>\n          <USCCarriers carriers={squadCarriers} />\n          <Typography variant=\"h4\">Personal Fleet Carriers of USC</Typography>\n          <PersonalCarriers carriers={personalCarriers} />\n        </div>\n      </Fade>\n    </>\n  );\n};\n","import { Button, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { IInfoButton } from 'models/information/infoButtonModel';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    textAlign: 'center',\n    width: 'fit-content',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  specialButton: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flex: {\n    '& button': {\n      margin: 5,\n    },\n    '& a': {\n      margin: 5,\n    },\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateRows: 'auto',\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n  },\n}));\n\n/** Interface for Info Section Props */\ninterface ISectionProps {\n  /** id of section */\n  id: string;\n  /** header to display */\n  header: string;\n  /** Buttons to display */\n  buttons: IInfoButton[];\n}\n\n/**\n * Displays an info Section set of buttons\n * @param props id, header, and button array.\n */\nexport const AboutLinks = (props: ISectionProps) => {\n  const classes = useStyles();\n  const { id, buttons } = props;\n\n  return (\n    <Paper id={id} className={classes.paper}>\n      <div className={classes.grid}>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === true)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n        <div className={classes.flex}>\n          {buttons\n            .filter((x) => x.beginner === false)\n            .map((guide) => {\n              if (guide.local === true) {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    component={Link}\n                    to={`${guide.link}`}\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              } else {\n                return (\n                  <Button\n                    variant=\"outlined\"\n                    color={guide.beginner ? 'secondary' : 'primary'}\n                    href={guide.link}\n                    target=\"_blank\"\n                    key={guide.title}\n                  >\n                    <div className={classes.specialButton}>\n                      <Typography>{guide.title}</Typography>\n                      <Typography variant=\"caption\">{guide.caption}</Typography>\n                    </div>\n                  </Button>\n                );\n              }\n            })}\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { makeStyles, Typography, Fade } from '@material-ui/core';\nimport { useInfoButtons } from 'hooks/useInfoButtons';\nimport { AboutLinks } from './aboutLinks';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: 'center',\n  },\n  hcAndAllies: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n  },\n}));\n\nexport const About = () => {\n  const classes = useStyles();\n  const { uscLinksList } = useInfoButtons();\n  return (\n    <Fade in={true}>\n      <div>\n        <Typography variant=\"h3\" className={classes.header}>\n          About USC\n        </Typography>\n        <AboutLinks\n          id=\"usc-links\"\n          key=\"usc-links\"\n          header=\"USC Links\"\n          buttons={uscLinksList}\n        />\n      </div>\n    </Fade>\n  );\n};\n","import { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport {\n  About,\n  AboutAllies,\n  AboutHC,\n  AboutRules,\n  Carriers,\n} from 'components/about';\nimport React from 'react';\nimport { Fade } from '@material-ui/core';\n\nexport const AboutRoutes = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Fade in={true}>\n      <Switch>\n        <Route path={path} exact>\n          <About />\n        </Route>\n        <Route path={`${path}/rules`}>\n          <About />\n          <AboutRules />\n        </Route>\n        <Route path={`${path}/hc`}>\n          <About />\n          <AboutHC />\n        </Route>\n        <Route path={`${path}/allies`}>\n          <About />\n          <AboutAllies />\n        </Route>\n        <Route path={`${path}/fc`}>\n          <About />\n          <Carriers />\n        </Route>\n      </Switch>\n    </Fade>\n  );\n};\n","import {\n  Fade,\n  Link,\n  makeStyles,\n  Paper,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { useLinks } from 'hooks/useLinks';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  iframe: {\n    width: '100%',\n    height: '59vw',\n  },\n  step: {\n    display: 'grid',\n    gridTemplate: '1fr / 1fr 1fr',\n  },\n  right: {\n    textAlign: 'right',\n  },\n  left: {\n    textAlign: 'left',\n  },\n});\n\nexport const Join = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMedium = useMediaQuery(theme.breakpoints.up('md'));\n  const { inaraSquadLink, discordLink } = useLinks();\n\n  return (\n    <Fade in={true}>\n      <div className={classes.root}>\n        <Typography variant=\"h3\" className={classes.header}>\n          Join Us!\n        </Typography>\n        <Paper className={classes.paper}>\n          <Typography>\n            Step 1: Read the rules on the{' '}\n            <Link to=\"/about/rules\" target=\"_blank\" component={NavLink}>\n              About Page\n            </Link>\n            .\n          </Typography>\n          {isMedium ? (\n            <Typography>Step 2: Fill out the form below.</Typography>\n          ) : (\n            <Typography>\n              Step 2: Fill out the{' '}\n              <Link\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?usp=sf_link\"\n                target=\"_blank\"\n              >\n                USC Join Form\n              </Link>\n              .\n            </Typography>\n          )}\n\n          <Typography>\n            Step 3: Join our{' '}\n            <Link href={discordLink} target=\"_blank\">\n              Discord\n            </Link>\n            .\n          </Typography>\n\n          <Typography>\n            Recommended: Find us in-game! (UCPC for PC | UCXB for Xbox | UCPS\n            for PlayStation)\n          </Typography>\n          <Typography>\n            Recommended: Join our{' '}\n            <Link href={inaraSquadLink} target=\"_blank\">\n              Inara Squadron\n            </Link>\n            .\n          </Typography>\n          {isMedium && (\n            <iframe\n              className={classes.iframe}\n              title=\"USC Application Form\"\n              id=\"joinFormContainer\"\n              src=\"https://docs.google.com/forms/d/e/1FAIpQLSfw7vIL8FY8ZGTF8YFjn3x-zGdhP5k9J6JALXAjXA7_Mm3-Rw/viewform?embedded=true\"\n            >\n              Loading…\n            </iframe>\n          )}\n          {/* <iframe\n          className={classes.iframe}\n          title='Discord Widget'\n          id='embeddedDiscord'\n          src='https://discord.com/widget?id=662439414152167434&amp;theme=dark'\n          allowTransparency\n          frameBorder='0'\n        sandbox='allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts'></iframe> */}\n        </Paper>\n      </div>\n    </Fade>\n  );\n};\n","import { useMutation, useQuery } from '@apollo/client';\nimport { loader } from 'graphql.macro';\nimport { IJoinInfo } from 'models/join/joinInfo';\nimport { useMemo } from 'react';\n\nconst AllJoiners = loader('../../graphql/allJoiners.gql');\nconst AddJoiner = loader('../../graphql/insertOneJoiner.gql');\n\nexport const useJoinInfo = () => {\n  const { allJoiners, loading } = useAllJoinInfo();\n  console.log(allJoiners);\n\n  const joiners = useMemo(() => {\n    if (loading) {\n      return undefined;\n    }\n    return allJoiners.filter((x) => x.type === 'join');\n  }, [allJoiners, loading]);\n  const guests = useMemo(() => {\n    if (loading) {\n      return undefined;\n    }\n    return allJoiners.filter((x) => x.type === 'guest');\n  }, [allJoiners, loading]);\n  const ambassadors = useMemo(() => {\n    if (loading) {\n      return undefined;\n    }\n    return allJoiners.filter((x) => x.type === 'ambassador');\n  }, [allJoiners, loading]);\n\n  return { joiners, guests, ambassadors, loading };\n};\n\nexport const useAllJoinInfo = () => {\n  const { data, loading, error } = useQuery<{ joiners: IJoinInfo[] }>(\n    AllJoiners\n  );\n  if (error) {\n    throw new Error(`Failed to fetch members: ${error.message}`);\n  }\n  const allJoiners = data?.joiners ?? [];\n\n  return { allJoiners, loading };\n};\n\nexport const useAddJoinInfo = () => {\n  const [addJoinerMutation] = useMutation<{ insertOneJoiner: IJoinInfo }>(\n    AddJoiner\n  );\n\n  const addJoiner = async (joiner: IJoinInfo) => {\n    try {\n      const addedJoiner = await addJoinerMutation({\n        variables: {\n          joiner: {\n            ...joiner,\n          },\n        },\n      });\n      return addedJoiner;\n    } catch (e) {\n      throw new Error(`Unable to add. ${e.message}`);\n    }\n  };\n\n  return addJoiner;\n};\n","import { useJoinInfo } from 'hooks/join/useJoinInfo';\nimport React, { useState } from 'react';\nimport {\n  Button,\n  Collapse,\n  Fade,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { copytoClipboard } from 'functions/copytoClipboard';\nimport { EDSpinner } from '@admiralfeb/react-components';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '95%',\n      marginTop: theme.spacing(1),\n    },\n  },\n  joinTypes: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n}));\n\nexport const JoinList = () => {\n  const joinInfo = useJoinInfo();\n\n  const classes = useStyles();\n  const [select, setSelect] = useState<number | null>(null);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const buildPlatforms = (platforms: {\n    pc: boolean;\n    xbox: boolean;\n    ps: boolean;\n  }) => {\n    const pc = platforms.pc ? 'PC,' : '';\n    const xbox = platforms.xbox ? 'Xbox,' : '';\n    const ps = platforms.ps ? 'PlayStation' : '';\n    return `${pc}${xbox}${ps}`;\n  };\n\n  const processLength = (length: string) => {\n    switch (length) {\n      case 'lessthanMonth':\n        return '< 1 Month';\n      case 'morethanMonth':\n        return '> 1 Month';\n      case 'morethan6Month':\n        return '> 6 Months';\n      case 'morethan1Year':\n        return '> 1 Year';\n      default:\n        return '';\n    }\n  };\n\n  if (joinInfo.loading) {\n    return <EDSpinner />;\n  }\n\n  return (\n    <Fade in={true}>\n      <div className={classes.root}>\n        <Typography variant=\"h3\">Join List</Typography>\n        <div className={classes.joinTypes}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setSelect(0)}\n          >\n            Members\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setSelect(1)}\n          >\n            Guests\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setSelect(2)}\n          >\n            Ambassadors\n          </Button>\n        </div>\n        {isMobile && (\n          <Paper className={classes.root}>\n            <Typography>Tables scroll on small screens</Typography>\n          </Paper>\n        )}\n        <Collapse in={select === 0}>\n          <div>\n            <Typography variant=\"h4\">Members</Typography>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>TimeStamp</TableCell>\n                    <TableCell>CMDR</TableCell>\n                    <TableCell>Discord</TableCell>\n                    <TableCell>Platform</TableCell>\n                    <TableCell>Playing Length</TableCell>\n                    <TableCell>Reference</TableCell>\n                    <TableCell>Reference2</TableCell>\n                    <TableCell>Timezone</TableCell>\n                  </TableRow>\n                </TableHead>\n                {joinInfo.joiners && (\n                  <TableBody>\n                    {joinInfo.joiners.map((map) => (\n                      <TableRow key={`${map.discord} ${map.timeStamp}`}>\n                        <TableCell>{map.timeStamp}</TableCell>\n                        <TableCell>\n                          {map.cmdr}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() =>\n                              copytoClipboard(map.cmdr.toUpperCase())\n                            }\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>\n                          {map.discord}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => copytoClipboard(map.discord)}\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>{buildPlatforms(map.platforms)}</TableCell>\n                        <TableCell>\n                          {processLength(map.playingLength!)}\n                        </TableCell>\n                        <TableCell>{map.reference}</TableCell>\n                        <TableCell>{map.reference2}</TableCell>\n                        <TableCell>{map.timezone}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </div>\n        </Collapse>\n        <Collapse in={select === 1}>\n          <div>\n            <Typography variant=\"h4\">Guests</Typography>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>TimeStamp</TableCell>\n                    <TableCell>CMDR</TableCell>\n                    <TableCell>Discord</TableCell>\n                    <TableCell>Platform</TableCell>\n                    <TableCell>Reference</TableCell>\n                    <TableCell>Reference2</TableCell>\n                    <TableCell>Timezone</TableCell>\n                  </TableRow>\n                </TableHead>\n                {joinInfo.guests && (\n                  <TableBody>\n                    {joinInfo.guests.map((map) => (\n                      <TableRow key={`${map.discord} ${map.timeStamp}`}>\n                        <TableCell>{map.timeStamp}</TableCell>\n                        <TableCell>\n                          {map.cmdr}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() =>\n                              copytoClipboard(map.cmdr.toUpperCase())\n                            }\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>\n                          {map.discord}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => copytoClipboard(map.discord)}\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>{buildPlatforms(map.platforms)}</TableCell>\n                        <TableCell>{map.reference}</TableCell>\n                        <TableCell>{map.reference2}</TableCell>\n                        <TableCell>{map.timezone}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </div>\n        </Collapse>\n        <Collapse in={select === 2}>\n          <div>\n            <Typography variant=\"h4\">Ambassadors</Typography>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>TimeStamp</TableCell>\n                    <TableCell>CMDR</TableCell>\n                    <TableCell>Discord</TableCell>\n                    <TableCell>Platform</TableCell>\n                    <TableCell>Group</TableCell>\n                    <TableCell>Need Private</TableCell>\n                    <TableCell>Timezone</TableCell>\n                  </TableRow>\n                </TableHead>\n                {joinInfo.ambassadors && (\n                  <TableBody>\n                    {joinInfo.ambassadors.map((map) => (\n                      <TableRow key={`${map.discord} ${map.timeStamp}`}>\n                        <TableCell>{map.timeStamp}</TableCell>\n                        <TableCell>\n                          {map.cmdr}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() =>\n                              copytoClipboard(map.cmdr.toUpperCase())\n                            }\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>\n                          {map.discord}{' '}\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => copytoClipboard(map.discord)}\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>{buildPlatforms(map.platforms)}</TableCell>\n                        <TableCell>{map.group}</TableCell>\n                        <TableCell>{map.needPrivate?.toString()}</TableCell>\n                        <TableCell>{map.timezone}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </div>\n        </Collapse>\n      </div>\n    </Fade>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { IJoinInfo } from 'models/join/joinInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%',\n    margin: 'auto',\n    [theme.breakpoints.up('md')]: {\n      width: 600,\n    },\n  },\n  question: {\n    borderColor: theme.palette.secondary.main,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1),\n  },\n}));\n\nexport const JoinFormAmbassador = (props: {\n  onSubmit: (data: IJoinInfo, type: string) => void;\n}) => {\n  const classes = useStyles();\n  const { register, handleSubmit, setValue, errors } = useForm<IJoinInfo>();\n\n  const [platforms, setPlatforms] = useState<{\n    pc: boolean;\n    xbox: boolean;\n    ps: boolean;\n  }>({ pc: false, xbox: false, ps: false });\n\n  useEffect(() => {\n    register('platforms', { required: true });\n  }, [register]);\n\n  const handlePlatformChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetName = event.target.name;\n    const checked = event.target.checked;\n    console.log(targetName);\n    if (targetName === 'pc' || targetName === 'xbox' || targetName === 'ps') {\n      setPlatforms((state) => {\n        state[targetName] = checked;\n        const newValue = { ...state, [targetName]: checked };\n        setValue('platforms', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const onSubmit = (data: IJoinInfo) => props.onSubmit(data, 'ambassador');\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        Ambassador\n      </Typography>\n      <Paper className={classes.paper}>\n        <Typography className={classes.header}>\n          All items are required.\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className={classes.question}>\n            <Typography>Please enter your in-game CMDR name</Typography>\n            <TextField\n              label=\"CMDR Name\"\n              inputRef={register({ required: true, minLength: 2 })}\n              name=\"cmdr\"\n            />\n            {errors.cmdr && (\n              <Typography color=\"error\">CMDR Name is required</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Please enter your discord name in format: name#1234\n            </Typography>\n            <TextField\n              label=\"Discord Name\"\n              inputRef={register({ required: true, pattern: /^.+#\\d{4}$/gi })}\n              name=\"discord\"\n            />\n            {errors.discord && (\n              <Typography color=\"error\">\n                Discord Name is required and must be in name#1234 format\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Which platform(s) do you play on? Choose all that apply.\n            </Typography>\n            <FormControl component=\"fieldset\" required>\n              <FormGroup row>\n                <FormControlLabel\n                  label=\"PC\"\n                  control={\n                    <Checkbox\n                      name=\"pc\"\n                      checked={platforms.pc}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"Xbox One\"\n                  control={\n                    <Checkbox\n                      name=\"xbox\"\n                      checked={platforms.xbox}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"PS4 / PS5\"\n                  control={\n                    <Checkbox\n                      name=\"ps\"\n                      checked={platforms.ps}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n              </FormGroup>\n            </FormControl>\n            {errors.platforms && (\n              <Typography color=\"error\">\n                You must select at least one platform.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>What faction/group do you represent?</Typography>\n            <TextField inputRef={register} name=\"group\" />\n            {errors.group && (\n              <Typography color=\"error\">\n                Please enter the group you represent.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Do you have private information to discuss with High Command?\n            </Typography>\n            <FormControl component=\"fieldset\" required>\n              <FormGroup row>\n                <FormControlLabel\n                  label=\"Yes\"\n                  control={<Checkbox name=\"needPrivate\" inputRef={register} />}\n                />\n              </FormGroup>\n            </FormControl>\n          </div>\n          <div className={classes.question}>\n            <Typography>What timezone are you in?</Typography>\n            <TextField inputRef={register} name=\"timezone\" />\n            {errors.timezone && (\n              <Typography color=\"error\">Please enter your timezone.</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              I have read and agree to the{' '}\n              <Link component={NavLink} to=\"/about/rules\" target=\"_blank\">\n                rules\n              </Link>\n              .\n            </Typography>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"rules\"\n                  inputRef={register({ required: true })}\n                />\n              }\n              label=\"Yes\"\n            />\n            {errors.rules && (\n              <Typography color=\"error\">\n                You must read and agree to abide by the rules.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.header}>\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\n              Submit Form\n            </Button>\n          </div>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  Collapse,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  makeStyles,\n  Paper,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { IJoinInfo } from 'models/join/joinInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%',\n    margin: 'auto',\n    [theme.breakpoints.up('md')]: {\n      width: 600,\n    },\n  },\n  question: {\n    borderColor: theme.palette.secondary.main,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1),\n  },\n}));\n\nexport const JoinFormGuest = (props: {\n  onSubmit: (data: IJoinInfo, type: string) => void;\n}) => {\n  const classes = useStyles();\n  const { register, handleSubmit, setValue, errors } = useForm<IJoinInfo>();\n\n  const [platforms, setPlatforms] = useState<{\n    pc: boolean;\n    xbox: boolean;\n    ps: boolean;\n  }>({ pc: false, xbox: false, ps: false });\n  const [ref, setRef] = useState('');\n  const [ref2Question, setRef2Question] = useState('');\n\n  useEffect(() => {\n    register('platforms', { required: true });\n    register('reference', { required: true });\n  }, [register]);\n\n  const handlePlatformChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetName = event.target.name;\n    const checked = event.target.checked;\n    console.log(targetName);\n    if (targetName === 'pc' || targetName === 'xbox' || targetName === 'ps') {\n      setPlatforms((state) => {\n        state[targetName] = checked;\n        const newValue = { ...state, [targetName]: checked };\n        setValue('platforms', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleRefChange = (event: ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target);\n    setRef(event.target.value);\n    setValue('reference', event.target.value);\n    switch (event.target.value) {\n      case 'player':\n        setRef2Question('Which player referred you?');\n        break;\n      case 'other':\n        setRef2Question(\"Please explain 'Other'\");\n        break;\n      default:\n        setRef2Question('');\n        break;\n    }\n  };\n\n  const onSubmit = (data: IJoinInfo) => props.onSubmit(data, 'guest');\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        Guest\n      </Typography>\n      <Paper className={classes.paper}>\n        <Typography className={classes.header}>\n          All items are required.\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className={classes.question}>\n            <Typography>Please enter your in-game CMDR name</Typography>\n            <TextField\n              label=\"CMDR Name\"\n              inputRef={register({ required: true, minLength: 2 })}\n              name=\"cmdr\"\n            />\n            {errors.cmdr && (\n              <Typography color=\"error\">CMDR Name is required</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Please enter your discord name in format: name#1234\n            </Typography>\n            <TextField\n              label=\"Discord Name\"\n              inputRef={register({ required: true, pattern: /^.+#\\d{4}$/gi })}\n              name=\"discord\"\n            />\n            {errors.discord && (\n              <Typography color=\"error\">\n                Discord Name is required and must be in name#1234 format\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Which platform(s) do you play on? Choose all that apply.\n            </Typography>\n            <FormControl component=\"fieldset\" required>\n              <FormGroup row>\n                <FormControlLabel\n                  label=\"PC\"\n                  control={\n                    <Checkbox\n                      name=\"pc\"\n                      checked={platforms.pc}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"Xbox One\"\n                  control={\n                    <Checkbox\n                      name=\"xbox\"\n                      checked={platforms.xbox}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"PS4 / PS5\"\n                  control={\n                    <Checkbox\n                      name=\"ps\"\n                      checked={platforms.ps}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n              </FormGroup>\n            </FormControl>\n            {errors.platforms && (\n              <Typography color=\"error\">\n                You must select at least one platform.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>How did you find us?</Typography>\n            <FormControl component=\"fieldset\" required>\n              <RadioGroup\n                name=\"reference\"\n                row\n                value={ref}\n                onChange={handleRefChange}\n              >\n                <FormControlLabel\n                  value=\"reddit\"\n                  control={<Radio />}\n                  label=\"Reddit\"\n                />\n                <FormControlLabel\n                  value=\"inara\"\n                  control={<Radio />}\n                  label=\"Inara\"\n                />\n                <FormControlLabel\n                  value=\"player\"\n                  control={<Radio />}\n                  label=\"Player Referral\"\n                />\n                <FormControlLabel\n                  value=\"facebook\"\n                  control={<Radio />}\n                  label=\"Facebook\"\n                />\n                <FormControlLabel\n                  value=\"website\"\n                  control={<Radio />}\n                  label=\"Our Website\"\n                />\n                <FormControlLabel\n                  value=\"forums\"\n                  control={<Radio />}\n                  label=\"Forums\"\n                />\n                <FormControlLabel\n                  value=\"other\"\n                  control={<Radio />}\n                  label=\"Other\"\n                />\n              </RadioGroup>\n            </FormControl>\n            {errors.reference && (\n              <Typography color=\"error\">\n                You must select how to found us.\n              </Typography>\n            )}\n            <Collapse\n              in={ref2Question !== ''}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div>\n                <Divider />\n                <div>\n                  <Typography>{ref2Question}</Typography>\n                  <TextField\n                    inputRef={register({ required: true })}\n                    name=\"reference2\"\n                  />\n                  {errors.reference2 && (\n                    <Typography color=\"error\">\n                      You must populate this field.\n                    </Typography>\n                  )}\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <div className={classes.question}>\n            <Typography>What timezone are you in?</Typography>\n            <TextField inputRef={register} name=\"timezone\" />\n            {errors.timezone && (\n              <Typography color=\"error\">Please enter your timezone.</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              I have read and agree to the{' '}\n              <Link component={NavLink} to=\"/about/rules\" target=\"_blank\">\n                rules\n              </Link>\n              .\n            </Typography>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"rules\"\n                  inputRef={register({ required: true })}\n                />\n              }\n              label=\"Yes\"\n            />\n            {errors.rules && (\n              <Typography color=\"error\">\n                You must read and agree to abide by the rules.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.header}>\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\n              Submit Form\n            </Button>\n          </div>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  Collapse,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Link,\n  makeStyles,\n  Paper,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Controller, useForm } from 'react-hook-form';\nimport { IJoinInfo } from 'models/join/joinInfo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%',\n    margin: 'auto',\n    [theme.breakpoints.up('md')]: {\n      width: 600,\n    },\n  },\n  question: {\n    borderColor: theme.palette.secondary.main,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1),\n  },\n}));\n\nexport const JoinFormMember = (props: {\n  onSubmit: (data: IJoinInfo, type: string) => void;\n}) => {\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    errors,\n  } = useForm<IJoinInfo>();\n\n  const [platforms, setPlatforms] = useState<{\n    pc: boolean;\n    xbox: boolean;\n    ps: boolean;\n  }>({ pc: false, xbox: false, ps: false });\n  const [ref, setRef] = useState('');\n  const [ref2Question, setRef2Question] = useState('');\n\n  useEffect(() => {\n    register('platforms', { required: true });\n    register('reference', { required: true });\n  }, [register]);\n\n  const handlePlatformChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetName = event.target.name;\n    const checked = event.target.checked;\n    console.log(targetName);\n    if (targetName === 'pc' || targetName === 'xbox' || targetName === 'ps') {\n      setPlatforms((state) => {\n        state[targetName] = checked;\n        const newValue = { ...state, [targetName]: checked };\n        setValue('platforms', newValue);\n        return newValue;\n      });\n    }\n  };\n\n  const handleRefChange = (event: ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target);\n    setRef(event.target.value);\n    setValue('reference', event.target.value);\n    switch (event.target.value) {\n      case 'player':\n        setRef2Question('Which player referred you?');\n        break;\n      case 'other':\n        setRef2Question(\"Please explain 'Other'\");\n        break;\n      default:\n        setRef2Question('');\n        break;\n    }\n  };\n\n  const onSubmit = (data: IJoinInfo) => props.onSubmit(data, 'join');\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h3\" className={classes.header}>\n        Member\n      </Typography>\n      <Paper className={classes.paper}>\n        <Typography className={classes.header}>\n          All items are required.\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className={classes.question}>\n            <Typography>Please enter your in-game CMDR name</Typography>\n            <TextField\n              label=\"CMDR Name\"\n              inputRef={register({ required: true, minLength: 2 })}\n              name=\"cmdr\"\n            />\n            {errors.cmdr && (\n              <Typography color=\"error\">CMDR Name is required</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Please enter your discord name in format: name#1234\n            </Typography>\n            <TextField\n              label=\"Discord Name\"\n              inputRef={register({ required: true, pattern: /^.+#\\d{4}$/gi })}\n              name=\"discord\"\n            />\n            {errors.discord && (\n              <Typography color=\"error\">\n                Discord Name is required and must be in name#1234 format\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              Which platform(s) do you play on? Choose all that apply.\n            </Typography>\n            <FormControl component=\"fieldset\" required>\n              <FormGroup row>\n                <FormControlLabel\n                  label=\"PC\"\n                  control={\n                    <Checkbox\n                      name=\"pc\"\n                      checked={platforms.pc}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"Xbox One\"\n                  control={\n                    <Checkbox\n                      name=\"xbox\"\n                      checked={platforms.xbox}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n                <FormControlLabel\n                  label=\"PS4 / PS5\"\n                  control={\n                    <Checkbox\n                      name=\"ps\"\n                      checked={platforms.ps}\n                      onChange={handlePlatformChange}\n                    />\n                  }\n                />\n              </FormGroup>\n            </FormControl>\n            {errors.platforms && (\n              <Typography color=\"error\">\n                You must select at least one platform.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>How long have you been playing?</Typography>\n            <Controller\n              as={\n                <RadioGroup name=\"playingLength\" row>\n                  <FormControlLabel\n                    value=\"lessthanMonth\"\n                    control={<Radio />}\n                    label=\"Less than 1 month\"\n                  />\n                  <FormControlLabel\n                    value=\"morethanMonth\"\n                    control={<Radio />}\n                    label=\"More than 1 month\"\n                  />\n                  <FormControlLabel\n                    value=\"morethan6Month\"\n                    control={<Radio />}\n                    label=\"More than 6 months\"\n                  />\n                  <FormControlLabel\n                    value=\"morethan1Year\"\n                    control={<Radio />}\n                    label=\"More than 1 year\"\n                  />\n                </RadioGroup>\n              }\n              name=\"playingLength\"\n              control={control}\n              defaultValue=\"\"\n            />\n            {errors.playingLength && (\n              <Typography color=\"error\">\n                You must select how long you've been playing.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>How did you find us?</Typography>\n            <FormControl component=\"fieldset\" required>\n              <RadioGroup\n                name=\"reference\"\n                row\n                value={ref}\n                onChange={handleRefChange}\n              >\n                <FormControlLabel\n                  value=\"reddit\"\n                  control={<Radio />}\n                  label=\"Reddit\"\n                />\n                <FormControlLabel\n                  value=\"inara\"\n                  control={<Radio />}\n                  label=\"Inara\"\n                />\n                <FormControlLabel\n                  value=\"player\"\n                  control={<Radio />}\n                  label=\"Player Referral\"\n                />\n                <FormControlLabel\n                  value=\"facebook\"\n                  control={<Radio />}\n                  label=\"Facebook\"\n                />\n                <FormControlLabel\n                  value=\"website\"\n                  control={<Radio />}\n                  label=\"Our Website\"\n                />\n                <FormControlLabel\n                  value=\"forums\"\n                  control={<Radio />}\n                  label=\"Forums\"\n                />\n                <FormControlLabel\n                  value=\"other\"\n                  control={<Radio />}\n                  label=\"Other\"\n                />\n              </RadioGroup>\n            </FormControl>\n            {errors.reference && (\n              <Typography color=\"error\">\n                You must select how to found us.\n              </Typography>\n            )}\n            <Collapse\n              in={ref2Question !== ''}\n              timeout={500}\n              mountOnEnter\n              unmountOnExit\n            >\n              <div>\n                <Divider />\n                <div>\n                  <Typography>{ref2Question}</Typography>\n                  <TextField\n                    inputRef={register({ required: true })}\n                    name=\"reference2\"\n                  />\n                  {errors.reference2 && (\n                    <Typography color=\"error\">\n                      You must populate this field.\n                    </Typography>\n                  )}\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <div className={classes.question}>\n            <Typography>What timezone are you in?</Typography>\n            <TextField inputRef={register} name=\"timezone\" />\n            {errors.timezone && (\n              <Typography color=\"error\">Please enter your timezone.</Typography>\n            )}\n          </div>\n          <div className={classes.question}>\n            <Typography>\n              I have read and agree to the{' '}\n              <Link component={NavLink} to=\"/about/rules\" target=\"_blank\">\n                rules\n              </Link>\n              .\n            </Typography>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name=\"rules\"\n                  inputRef={register({ required: true })}\n                />\n              }\n              label=\"Yes\"\n            />\n            {errors.rules && (\n              <Typography color=\"error\">\n                You must read and agree to abide by the rules.\n              </Typography>\n            )}\n          </div>\n          <div className={classes.header}>\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\n              Submit Form\n            </Button>\n          </div>\n        </form>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { useLinks } from 'hooks/useLinks';\nimport React from 'react';\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%',\n    margin: 'auto',\n    [theme.breakpoints.up('md')]: {\n      width: 600,\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\nexport const JoinNextSteps = () => {\n  const classes = useStyles();\n  const { inaraSquadLink, discordLink } = useLinks();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" className={classes.header}>\n        Next Steps\n      </Typography>\n      <Paper className={classes.paper}>\n        <List>\n          <ListItem>\n            <ListItemText primary={'Join our Discord'} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" href={discordLink} target=\"_blank\">\n                <LinkIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          <List\n            component=\"div\"\n            disablePadding\n            subheader={\n              <ListSubheader component=\"div\">Recommended</ListSubheader>\n            }\n          >\n            <ListItem className={classes.nested}>\n              <ListItemText\n                primary={`Find us in-game! (UCPC for PC | UCXB for Xbox | UCPS for PlayStation)`}\n              />\n            </ListItem>\n            <ListItem className={classes.nested}>\n              <ListItemText primary={'Join our Inara Squadron'} />\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" href={inaraSquadLink} target=\"_blank\">\n                  <LinkIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </List>\n      </Paper>\n    </div>\n  );\n};\n","import {\n  Button,\n  Collapse,\n  Fade,\n  makeStyles,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { useAddJoinInfo } from 'hooks/join/useJoinInfo';\nimport { IJoinInfo } from 'models/join/joinInfo';\nimport { useSnackbar } from 'notistack';\nimport { useState } from 'react';\nimport { JoinFormAmbassador } from './joinFormAmbassador';\nimport { JoinFormGuest } from './joinFormGuest';\nimport { JoinFormMember } from './joinFormMember';\nimport { JoinNextSteps } from './joinNextSteps';\n\nconst useStyles = makeStyles((theme) => ({\n  textCenter: {\n    textAlign: 'center',\n  },\n  paper: {\n    width: 'fit-content',\n    margin: 'auto',\n    padding: theme.spacing(1),\n  },\n  joinTypes: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n  },\n  form: {\n    width: '100%',\n    [theme.breakpoints.up('md')]: { width: 500 },\n  },\n}));\n\nexport const JoinNew = () => {\n  const classes = useStyles();\n  const [form, setForm] = useState<number | null>();\n  const addJoiner = useAddJoinInfo();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const onSubmit = (data: IJoinInfo, type: string) => {\n    const newData = data;\n    const time = new Date().getTime();\n    newData.timeStamp = new Date(time).toISOString();\n    newData.type = type;\n    console.log(newData);\n    try {\n      addJoiner(newData);\n      enqueueSnackbar('Successfully submitted form', { variant: 'success' });\n      setForm(3);\n    } catch (e) {\n      enqueueSnackbar(`Failed to submit: ${e.message}`, { variant: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <Fade in={true}>\n        <div>\n          <Typography variant=\"h3\" className={classes.textCenter}>\n            Join Us\n          </Typography>\n          <Paper className={classes.paper}>\n            <Typography className={classes.textCenter}>\n              Welcome to USC. Please select how you'd like to join us below.\n            </Typography>\n            <div className={classes.joinTypes}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => setForm(0)}\n              >\n                As a member\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => setForm(1)}\n              >\n                As a guest\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => setForm(2)}\n              >\n                As an ambassador\n              </Button>\n            </div>\n          </Paper>\n        </div>\n      </Fade>\n      <Collapse in={form === 0} unmountOnExit mountOnEnter>\n        <div>\n          <JoinFormMember onSubmit={onSubmit} />\n        </div>\n      </Collapse>\n      <Collapse in={form === 1} unmountOnExit mountOnEnter>\n        <div>\n          <JoinFormGuest onSubmit={onSubmit} />\n        </div>\n      </Collapse>\n      <Collapse in={form === 2} unmountOnExit mountOnEnter>\n        <div>\n          <JoinFormAmbassador onSubmit={onSubmit} />\n        </div>\n      </Collapse>\n      <Collapse in={form === 3} unmountOnExit mountOnEnter>\n        <div>\n          <JoinNextSteps />\n        </div>\n      </Collapse>\n    </>\n  );\n};\n","import { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Join, JoinList, JoinNew } from 'components/join';\nimport { NotFound } from 'components';\n\nexport const JoinRoutes = () => {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={path} exact>\n        <JoinNew />\n      </Route>\n      <Route path={`${path}/legacy`}>\n        <Join />\n      </Route>\n      <Route path={`${path}/joinListforHC`}>\n        <JoinList />\n      </Route>\n      <Route path=\"*\">\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n};\n","import { Link, makeStyles, Paper, Typography } from '@material-ui/core';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport release2020_12 from 'data/releases/2020-12';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '90%',\n    margin: 'auto',\n    marginTop: theme.spacing(1),\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n}));\n\nexport const Releases = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <ReactMarkdown\n        plugins={[gfm]}\n        renderers={{ paragraph: Typography, link: Link }}\n        children={release2020_12}\n      />\n    </Paper>\n  );\n};\n","export const Release202012Text = `\n# 2020-12 Release\n\nThis is the first release of the new Reactjs powered website. For the previous version, please see [this page](https://legacy.unitedsystems.org)\n\n## Plan\n\nThis website was created to advance the United Systems Cooperative website. After discovering that the legacy site would not be compatible without much more work in the Ship Build Library, members of High command opted that a new site with more functionality should be written.\n\nThis new site should also bring the website into current webpage specs including Material Design\n\n## Advancements\n\n- ReactJS - makes for a more responsive site\n- Material Design - Matches or is close to Material Design to bring it to code with other websites and applications\n- Database - Multiple aspects of the site (Ship Builds, Fleet Carriers, and the new Join Form) interact with the database backend, giving the site a better, integrated feeling.\n- USC Builds - An upgrade from the ship build spreadsheet, this system is fully interactive and allows users to filter and search for an ideal build or even add their own.\n- Join Form - The Join Form has been integrated into the site itself. By leveraging React, Material Design, and the Database, it provides new users with a more integrated experience.\n- Https - as internet browsers have evolved, so have security measures. This site now has https enforced.\n\n## Acknowledgements\n\nSpecial thanks to everyone who assisted on the site or worked on the legacy site.\n\nThanks also to the following:\n\n- Frontier Developments for Elite: Dangerous\n- Coriolis.io - This site uses their JSON format to read builds for our commanders and links to Coriolis to display builds.\n- EDAssets.org - Their assets are used throughout the site. If you see an elite dangerous asset, it's likely from here.\n\n## SiteMap\n\nThe site is divided into 5 parts\n\n### Home\n\n<https://unitedsystems.org/home>\n\nThe home page is the landing page when someone comes to <https://unitedsystems.org>. As of this release, it has our lore and a recruitment video by our own CMDR Pablok.\n\n### USC Builds **NEW**\n\n<https://unitedsystems.org/builds>\n\nOriginally a spreadsheet, this is a full redesign of the USC Build Archive. Interactive and easy to use, it is designed to allow CMDRs to search for a build that they would like to use or even permit them to submit their own build to the archive.\n\nWork on this specific section is due in no small part to CMDRs Clever Ape and Admiralfeb.\n\n### About\n\n<https://unitedsystems.org/about>\n\nThe About page has everything pertaining to USC.\n\n- Rules\n- Allies\n- Fleet Carriers\n\nIt also includes links to our Inara, Patreon, and Discord\n\n### Information\n\n<https://unitedsystems.org/information>\n\nBased upon the idea of CMDR UltraNeros, this lists guides, tools, documents and other resources compiled from many different sources in one convenient page.\n\n### Join\n\n<https://unitedsystems.org/join>\n\nThe new join system is integrated into the website. It permits a user to enter whether they'd like to join as a member, guest, or ambassador, then provides them with the appropriate form. Once complete, it provides them with suggested next steps.\n\n## Support\n\nQuestions, queries, or suggestions, please direct them to the website-improvement channel in the USC Discord or to webdev@unitedsystems.org. You may even open an issue at [usc-website's repository](https://github.com/Admiralfeb/usc-website/issues).\n`;\n\nexport default Release202012Text;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Home, NotFound } from 'components';\nimport React, { lazy, Suspense } from 'react';\nimport { EDSpinner } from '@admiralfeb/react-components';\nimport { InformationRoutes } from './information.routes';\nimport { AboutRoutes } from './about.routes';\nimport { JoinRoutes } from './join.routes';\nimport { Releases } from 'components/releases/releases';\n\nconst ShipBuilds = lazy(() => import('routes/shipBuilds.routes'));\n\nexport const AppRoutes = () => {\n  return (\n    <Suspense fallback={<EDSpinner />}>\n      <Switch>\n        <Route path=\"/releases/:id\">\n          <Releases />\n        </Route>\n        <Redirect from=\"/\" to=\"/home\" exact />\n        <Route path=\"/home\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/about\">\n          <AboutRoutes />\n        </Route>\n        <Route path=\"/information\">\n          <InformationRoutes />\n        </Route>\n        <Route path=\"/builds\">\n          <ShipBuilds />\n        </Route>\n        <Route path=\"/join\">\n          <JoinRoutes />\n        </Route>\n\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import { ReactNode, useEffect, useState } from 'react';\nimport { useRealmApp } from 'hooks/useRealmApp';\nimport { IRealmContext } from 'models/realmContext';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\n\nconst createRealmApolloClient = (app: IRealmContext) => {\n  if (app.app === undefined) {\n    throw new Error('app is not defined');\n  }\n  const link = new HttpLink({\n    uri: `https://realm.mongodb.com/api/client/v2.0/app/${app.app.id}/graphql`,\n    // A custom fetch handler adds the logged in user's access token to GraphQL requests\n    fetch: async (uri, options) => {\n      if (!app.currentUser) {\n        throw new Error(`Must be logged in to use the GraphQL API`);\n      }\n      // Refreshing a user's custom data also refreshes their access token\n      await app.currentUser.refreshCustomData();\n      options!.headers = new Headers({\n        Authorization: `Bearer ${app.currentUser.accessToken}`,\n      });\n      return fetch(uri, options);\n    },\n  });\n\n  const cache = new InMemoryCache();\n\n  return new ApolloClient({ link, cache });\n};\n\nexport const RealmApolloProvider = (props: { children: ReactNode }) => {\n  const app = useRealmApp();\n  const [client, setClient] = useState(createRealmApolloClient(app));\n  useEffect(() => {\n    setClient(createRealmApolloClient(app));\n  }, [app]);\n  return <ApolloProvider client={client}>{props.children}</ApolloProvider>;\n};\n","import { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { theme } from './theme';\nimport { createBrowserHistory } from 'history';\n\nimport { Router } from 'react-router-dom';\nimport { NavbarComponent } from 'components/navbar';\nimport { AppRoutes } from 'routes/app.routes';\nimport { RealmAppProvider, RealmApolloProvider } from 'providers';\nimport { SnackbarProvider } from 'notistack';\n\nconst realmID: string | undefined = process.env.REACT_APP_REALM_ID;\n\nexport const App = () => {\n  const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\n  return (\n    <RealmAppProvider appId={realmID}>\n      <RealmApolloProvider>\n        <SnackbarProvider maxSnack={3}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div>\n              <Router history={history}>\n                <NavbarComponent />\n                <AppRoutes />\n              </Router>\n            </div>\n          </ThemeProvider>\n        </SnackbarProvider>\n      </RealmApolloProvider>\n    </RealmAppProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { StrictMode } from 'react';\nimport { App } from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {\n  BlueprintLink,\n  DiscordLink,\n  PatreonLink,\n  InaraCommodityLink,\n  InaraSquadLink,\n} from 'data/links';\n\nexport const useLinks = () => {\n  return { ...links };\n};\n\nexport const getLinks = () => {\n  return { ...links };\n};\n\nconst links = {\n  inaraSquadLink: InaraSquadLink,\n  discordLink: DiscordLink,\n  patreonLink: PatreonLink,\n  blueprints: BlueprintLink,\n  inaraCommodity: InaraCommodityLink,\n};\n","export const InaraSquadLink = 'https://inara.cz/squadron/7028/';\nexport const DiscordLink = 'https://discord.gg/br8Fy2M6cv';\nexport const PatreonLink = 'https://www.patreon.com/usc';\nexport const BlueprintLink = 'http://a.teall.info/edsa/';\nexport const InaraCommodityLink = 'https://inara.cz/galaxy-commodity/';\n","/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItems = <T, P extends keyof T>(items: T[], prop: P): T[] => {\n  try {\n    return items.sort(comparer(prop));\n  } catch {\n    return items;\n  }\n};\n\n/**\n * Sorts provided items and returns a new array\n * @param items array of items to sort\n * @param prop property to sort the items by\n */\nexport const sortItemsReverse = <T, P extends keyof T>(\n  items: T[],\n  prop: P\n): T[] => {\n  try {\n    return items.sort(comparerReverse(prop));\n  } catch {\n    return items;\n  }\n};\n\nconst comparer = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] > b[prop]) {\n      return 1;\n    } else if (a[prop] < b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\nconst comparerReverse = <T, P extends keyof T>(prop: P) => {\n  return (a: T, b: T): number => {\n    if (a[prop] < b[prop]) {\n      return 1;\n    } else if (a[prop] > b[prop]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n","import { Fade, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useDownloadLink } from 'hooks/useDownloadLink';\nimport {\n  lore,\n  latin,\n  latinTranslation,\n  videoID,\n  videoPosterID,\n} from 'data/home';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    textAlign: 'center',\n  },\n  paper: {\n    textAlign: 'center',\n    width: '80%',\n    margin: 'auto',\n    padding: 5,\n    paddingBottom: 10,\n    marginBottom: 5,\n  },\n  latin: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    border: '1px solid white',\n    borderRadius: 10,\n    width: 350,\n    margin: 'auto',\n    marginBottom: 10,\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  cursive: {\n    fontFamily: 'Cinzel, serif',\n    fontSize: 32,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 24,\n    },\n  },\n  subtitle: {\n    flex: '0 0',\n  },\n  video: {\n    width: '100%',\n    padding: 0,\n  },\n  lore: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport const Home = () => {\n  const classes = useStyles();\n  const { getDownloadLink } = useDownloadLink();\n  return (\n    <Fade in={true}>\n      <div className={classes.root}>\n        <Typography variant=\"h3\" className={classes.header}>\n          United Systems Cooperative\n        </Typography>\n        <Paper className={classes.paper}>\n          <Typography className={classes.lore}>{lore}</Typography>\n          <div className={classes.latin}>\n            <Typography className={classes.cursive} variant=\"h4\">\n              {latin}\n            </Typography>\n            <Typography variant=\"subtitle2\" className={classes.subtitle}>\n              {latinTranslation}\n            </Typography>\n          </div>\n          <video\n            controls\n            className={classes.video}\n            poster={getDownloadLink(videoPosterID)}\n            controlsList=\"nodownload\"\n          >\n            <source src={getDownloadLink(videoID)} type=\"video/mp4\" />\n            \"Your browser does not support this video\"\n          </video>\n        </Paper>\n      </div>\n    </Fade>\n  );\n};\n","export const useDownloadLink = () => {\n  const getDownloadLink = (fileID: string) =>\n    `https://drive.google.com/uc?export=view&id=${fileID}`;\n\n  return { getDownloadLink };\n};\n","export const lore = `Established in 3306, the United Systems Cooperative is a tight-knit\n            organization of independent pilots operating across the galaxy, both\n            in human space, and the uncharted sectors beyond. Little is known\n            about this groups motives and plans, though many conflicting reports\n            are offered by systems across inhabited space. The one thing the\n            reports agree on is that members of this group are fiercely loyal to\n            one another, and to the organization as a whole. The United Systems\n            Cooperative seeks to create a family where everyone is welcome, no\n            matter their background, their allegiances, etc. To create a family\n            where everyone can get the help they need, make lasting friendships,\n            and have new brothers and sisters to fly with them through the\n            black!`;\n\nexport const latin = 'Ad Astra Per Aspera';\nexport const latinTranslation = 'Through hardships to the stars';\nexport const videoID = '1F8C6S4CObwHJMtq5xkE9Gkpd3pj_lJXz';\nexport const videoPosterID = '1o0VDAl_nb77bOo8Sm7k1veWs4k3ty9fh';\n","export default __webpack_public_path__ + \"static/media/404.1f2277c5.jpg\";","import { Link, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport errorImg from 'assets/404.jpg';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    margin: 5,\n    height: '100%',\n  },\n  img: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  paper: {\n    width: '80%',\n    margin: 'auto',\n  },\n});\n\nexport const NotFound = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h3\">Mistakes were made</Typography>\n        <Typography variant=\"subtitle1\">\n          You were hyperdicted... escape destruction by going{' '}\n          <Link to=\"/home\" component={NavLink}>\n            home\n          </Link>\n          .\n        </Typography>\n        <img className={classes.img} alt=\"404 Error\" src={errorImg} />\n      </Paper>\n    </div>\n  );\n};\n"],"sourceRoot":""}